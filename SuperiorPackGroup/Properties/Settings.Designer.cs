//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



//INSTANT C# NOTE: Formerly VB project-level imports:
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Drawing;
using System.Diagnostics;
using System.Windows.Forms;

namespace SuperiorPackGroup
{
	namespace Properties
	{

		[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.9.0.0"), global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal sealed partial class Settings : System.Configuration.ApplicationSettingsBase
		{
			private static Settings defaultInstance = (Settings)global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings());

#region My.Settings Auto-Save Functionality
#if WINDOWSFORMS
		private static bool addedHandler;

		private static object addedHandlerLockObject = new object();

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		private static void AutoSaveSettings(global::System.Object sender, global::System.EventArgs e)
		{
			if (My.MyApplication.Application.SaveMySettingsOnExit)
			{
				defaultInstance.Save();
			}
		}
#endif
#endregion

			public static Settings Default
			{
				get
				{

#if WINDOWSFORMS
				   if (!addedHandler)
				   {
						lock (addedHandlerLockObject)
						{
							if (!addedHandler)
							{
								My.MyApplication.Application.Shutdown += new Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler(AutoSaveSettings);
								addedHandler = true;
							}
						}
					}
#endif
					return defaultInstance;
				}
			}

			[global::System.Configuration.UserScopedSettingAttribute(), global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.Configuration.DefaultSettingValueAttribute("")]
			public string UserSecurityLevel
			{
				get
				{
					return (this["UserSecurityLevel"] == null ? null : Convert.ToString(this["UserSecurityLevel"]));
				}
				set
				{
					this["UserSecurityLevel"] = value;
				}
			}

			[global::System.Configuration.UserScopedSettingAttribute(), global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.Configuration.DefaultSettingValueAttribute("")]
			public string UserName
			{
				get
				{
					return (this["UserName"] == null ? null : Convert.ToString(this["UserName"]));
				}
				set
				{
					this["UserName"] = value;
				}
			}

			[global::System.Configuration.ApplicationScopedSettingAttribute(), global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString), global::System.Configuration.DefaultSettingValueAttribute("Data Source=.;Initial Catalog=SPGData;Integrated Security=True")]
			public string SPGDataDefaultConnectionString
			{
				get
				{
					return (this["SPGDataDefaultConnectionString"] == null ? null : Convert.ToString(this["SPGDataDefaultConnectionString"]));
				}
			}

			[global::System.Configuration.UserScopedSettingAttribute(), global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.Configuration.DefaultSettingValueAttribute("Data Source=SERVER1\\SPG;User ID=SPGUser;Password=SPGUs3r;Initial Catalog=SPGDataT" + "est")]
			public string UserConnectionString
			{
				get
				{
					return (this["UserConnectionString"] == null ? null : Convert.ToString(this["UserConnectionString"]));
				}
				set
				{
					this["UserConnectionString"] = value;
				}
			}

			[global::System.Configuration.UserScopedSettingAttribute(), global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.Configuration.DefaultSettingValueAttribute("SERVER1\\SPG")]
			public string SPGServerName
			{
				get
				{
					return (this["SPGServerName"] == null ? null : Convert.ToString(this["SPGServerName"]));
				}
				set
				{
					this["SPGServerName"] = value;
				}
			}
		}
	}

//INSTANT C# NOTE: This block was only required to support 'My.Settings' in VB. 'Properties.Settings' is used in C#:
//Namespace My
//
//	<Microsoft.VisualBasic.HideModuleNameAttribute(), global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()> Friend Module MySettingsProperty
//
//		<global::System.ComponentModel.Design.HelpKeywordAttribute("My.Settings")> Friend ReadOnly Property Settings() As SuperiorPackGroup.My.MySettings
//			Get
//				return SuperiorPackGroup.My.MySettings.Default
//			End Get
//		End Property
//	End Module
//End Namespace

}