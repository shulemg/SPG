//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------




//INSTANT C# NOTE: Formerly VB project-level imports:
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Drawing;
using System.Diagnostics;
using System.Windows.Forms;

namespace SuperiorPackGroup
{
	///<summary>
	///Represents a strongly typed in-memory cache of data.
	///</summary>
	[global::System.Serializable(), global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), global::System.Xml.Serialization.XmlRootAttribute("SPG"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
	public partial class SPG : System.Data.DataSet
	{
		private SecurityDataTable tableSecurity;

		private UsersDataTable tableUsers;

		private CustomersDataTable tableCustomers;

		private ItemsDataTable tableItems;

		private ReceivingDetailsDataTable tableReceivingDetails;

		private ReceivingsDataTable tableReceivings;

		private ProductionDataTable tableProduction;

		private ShippingsDataTable tableShippings;

		private MachineLinesDataTable tableMachineLines;

		private ShippingDetailsDataTable tableShippingDetails;

		private BOMDataTable tableBOM;

		private ShiftsDataTable tableShifts;

		private CarriersDataTable tableCarriers;

		private CompanySettingsDataTable tableCompanySettings;

		private ShippingAddressesDataTable tableShippingAddresses;

		private InventoryDataTable tableInventory;

		private UserPermissionsDataTable tableUserPermissions;

		private ReportsDataTable tableReports;

		private ReturnDetDataTable tableReturnDet;

		private ShippingReturnDetailsDataTable tableShippingReturnDetails;

		private InventoryAdjustmentDataTable tableInventoryAdjustment;

		private AuditTrailDataTable tableAuditTrail;

		private InventoryBOMsDataTable tableInventoryBOMs;

		private global::System.Data.DataRelation relationFK_tblUsers_Security;

		private global::System.Data.DataRelation relationFK_tblItems_tblCustomers;

		private global::System.Data.DataRelation relationFK_tblItems_tblReceivDet;

		private global::System.Data.DataRelation relationFK_tblReceivDet_tblReceivMain;

		private global::System.Data.DataRelation relationFK_tblReceivMain_tblCustomers;

		private global::System.Data.DataRelation relationFK_tblItems_tblProdMain;

		private global::System.Data.DataRelation relationFK_tblShipMain_tblCustomers;

		private global::System.Data.DataRelation relationFK_tblProdMain_tblMachineLine;

		private global::System.Data.DataRelation relationFK_tblItems_tblShipDet;

		private global::System.Data.DataRelation relationFK_tblShipDet_tblShipMain;

		private global::System.Data.DataRelation relationFK_tblBOMs_tblItems;

		private global::System.Data.DataRelation relationFK_tblItems_tblBOMs;

		private global::System.Data.DataRelation relationFK_tblProdMain_tblShifts;

		private global::System.Data.DataRelation relationFK_tblReceivMain_tblCarriers;

		private global::System.Data.DataRelation relationFK_tblShipMain_tblCarrier;

		private global::System.Data.DataRelation relationFK_tblItems_tblReturnDet;

		private global::System.Data.DataRelation relationFK_tblReturnDet_tblReceivMain;

		private global::System.Data.DataRelation relationFK_tblItems_tblShipReturnDet;

		private global::System.Data.DataRelation relationFK_tblShipReturnDet_tblShipMain;

		private global::System.Data.DataRelation relationFK_tblInventoryBOMs_tblInventory;

		private global::System.Data.DataRelation relationFK_tblItems_tblInventoryBOMs;

		private global::System.Data.DataRelation relationFK_tblInventory_InventoryItemID;

		private global::System.Data.DataRelation relationFK_tblInventoryAdjustment_Item;

		private global::System.Data.DataRelation relationFK_tblInventory_Shift;

		private global::System.Data.DataRelation relationFK_tblReceivMain_intShiftID;

		private global::System.Data.DataRelation relationFK_tblShipMain_intDestination;

		private global::System.Data.DataRelation relationFK_tblShipMain_Shift;

		private global::System.Data.DataRelation relationFK_tblInventoryAdjustment_Customer;

		private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public SPG() : base()
		{
			this.BeginInit();
			this.InitClass();
			global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = this.SchemaChanged;
			base.Tables.CollectionChanged += schemaChangedHandler;
			base.Relations.CollectionChanged += schemaChangedHandler;
			this.EndInit();
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		protected SPG(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context, false)
		{
			if (this.IsBinarySerialized(info, context) == true)
			{
				this.InitVars(false);
				global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = this.SchemaChanged;
				this.Tables.CollectionChanged += schemaChangedHandler1;
				this.Relations.CollectionChanged += schemaChangedHandler1;
				return;
			}
			string strSchema = (info.GetValue("XmlSchema", typeof(string)) == null ? null : Convert.ToString(info.GetValue("XmlSchema", typeof(string))));
			if (this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)
			{
				global::System.Data.DataSet ds = new global::System.Data.DataSet();
				ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
				if ((ds.Tables["Security"]) != null)
				{
					base.Tables.Add(new SecurityDataTable(ds.Tables["Security"]));
				}
				if ((ds.Tables["Users"]) != null)
				{
					base.Tables.Add(new UsersDataTable(ds.Tables["Users"]));
				}
				if ((ds.Tables["Customers"]) != null)
				{
					base.Tables.Add(new CustomersDataTable(ds.Tables["Customers"]));
				}
				if ((ds.Tables["Items"]) != null)
				{
					base.Tables.Add(new ItemsDataTable(ds.Tables["Items"]));
				}
				if ((ds.Tables["ReceivingDetails"]) != null)
				{
					base.Tables.Add(new ReceivingDetailsDataTable(ds.Tables["ReceivingDetails"]));
				}
				if ((ds.Tables["Receivings"]) != null)
				{
					base.Tables.Add(new ReceivingsDataTable(ds.Tables["Receivings"]));
				}
				if ((ds.Tables["Production"]) != null)
				{
					base.Tables.Add(new ProductionDataTable(ds.Tables["Production"]));
				}
				if ((ds.Tables["Shippings"]) != null)
				{
					base.Tables.Add(new ShippingsDataTable(ds.Tables["Shippings"]));
				}
				if ((ds.Tables["MachineLines"]) != null)
				{
					base.Tables.Add(new MachineLinesDataTable(ds.Tables["MachineLines"]));
				}
				if ((ds.Tables["ShippingDetails"]) != null)
				{
					base.Tables.Add(new ShippingDetailsDataTable(ds.Tables["ShippingDetails"]));
				}
				if ((ds.Tables["BOM"]) != null)
				{
					base.Tables.Add(new BOMDataTable(ds.Tables["BOM"]));
				}
				if ((ds.Tables["Shifts"]) != null)
				{
					base.Tables.Add(new ShiftsDataTable(ds.Tables["Shifts"]));
				}
				if ((ds.Tables["Carriers"]) != null)
				{
					base.Tables.Add(new CarriersDataTable(ds.Tables["Carriers"]));
				}
				if ((ds.Tables["CompanySettings"]) != null)
				{
					base.Tables.Add(new CompanySettingsDataTable(ds.Tables["CompanySettings"]));
				}
				if ((ds.Tables["ShippingAddresses"]) != null)
				{
					base.Tables.Add(new ShippingAddressesDataTable(ds.Tables["ShippingAddresses"]));
				}
				if ((ds.Tables["Inventory"]) != null)
				{
					base.Tables.Add(new InventoryDataTable(ds.Tables["Inventory"]));
				}
				if ((ds.Tables["UserPermissions"]) != null)
				{
					base.Tables.Add(new UserPermissionsDataTable(ds.Tables["UserPermissions"]));
				}
				if ((ds.Tables["Reports"]) != null)
				{
					base.Tables.Add(new ReportsDataTable(ds.Tables["Reports"]));
				}
				if ((ds.Tables["ReturnDet"]) != null)
				{
					base.Tables.Add(new ReturnDetDataTable(ds.Tables["ReturnDet"]));
				}
				if ((ds.Tables["ShippingReturnDetails"]) != null)
				{
					base.Tables.Add(new ShippingReturnDetailsDataTable(ds.Tables["ShippingReturnDetails"]));
				}
				if ((ds.Tables["InventoryAdjustment"]) != null)
				{
					base.Tables.Add(new InventoryAdjustmentDataTable(ds.Tables["InventoryAdjustment"]));
				}
				if ((ds.Tables["AuditTrail"]) != null)
				{
					base.Tables.Add(new AuditTrailDataTable(ds.Tables["AuditTrail"]));
				}
				if ((ds.Tables["InventoryBOMs"]) != null)
				{
					base.Tables.Add(new InventoryBOMsDataTable(ds.Tables["InventoryBOMs"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else
			{
				this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
			}
			this.GetSerializationData(info, context);
			global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = this.SchemaChanged;
			base.Tables.CollectionChanged += schemaChangedHandler;
			this.Relations.CollectionChanged += schemaChangedHandler;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public SecurityDataTable Security
		{
			get
			{
				return this.tableSecurity;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public UsersDataTable Users
		{
			get
			{
				return this.tableUsers;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public CustomersDataTable Customers
		{
			get
			{
				return this.tableCustomers;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public ItemsDataTable Items
		{
			get
			{
				return this.tableItems;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public ReceivingDetailsDataTable ReceivingDetails
		{
			get
			{
				return this.tableReceivingDetails;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public ReceivingsDataTable Receivings
		{
			get
			{
				return this.tableReceivings;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public ProductionDataTable Production
		{
			get
			{
				return this.tableProduction;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public ShippingsDataTable Shippings
		{
			get
			{
				return this.tableShippings;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public MachineLinesDataTable MachineLines
		{
			get
			{
				return this.tableMachineLines;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public ShippingDetailsDataTable ShippingDetails
		{
			get
			{
				return this.tableShippingDetails;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public BOMDataTable BOM
		{
			get
			{
				return this.tableBOM;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public ShiftsDataTable Shifts
		{
			get
			{
				return this.tableShifts;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public CarriersDataTable Carriers
		{
			get
			{
				return this.tableCarriers;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public CompanySettingsDataTable CompanySettings
		{
			get
			{
				return this.tableCompanySettings;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public ShippingAddressesDataTable ShippingAddresses
		{
			get
			{
				return this.tableShippingAddresses;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public InventoryDataTable Inventory
		{
			get
			{
				return this.tableInventory;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public UserPermissionsDataTable UserPermissions
		{
			get
			{
				return this.tableUserPermissions;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public ReportsDataTable Reports
		{
			get
			{
				return this.tableReports;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public ReturnDetDataTable ReturnDet
		{
			get
			{
				return this.tableReturnDet;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public ShippingReturnDetailsDataTable ShippingReturnDetails
		{
			get
			{
				return this.tableShippingReturnDetails;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public InventoryAdjustmentDataTable InventoryAdjustment
		{
			get
			{
				return this.tableInventoryAdjustment;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public AuditTrailDataTable AuditTrail
		{
			get
			{
				return this.tableAuditTrail;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false), global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public InventoryBOMsDataTable InventoryBOMs
		{
			get
			{
				return this.tableInventoryBOMs;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.BrowsableAttribute(true), global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
		public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
		{
			get
			{
				return this._schemaSerializationMode;
			}
			set
			{
				this._schemaSerializationMode = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
		public new global::System.Data.DataTableCollection Tables
		{
			get
			{
				return base.Tables;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
		public new global::System.Data.DataRelationCollection Relations
		{
			get
			{
				return base.Relations;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		protected override void InitializeDerivedDataSet()
		{
			this.BeginInit();
			this.InitClass();
			this.EndInit();
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public override global::System.Data.DataSet Clone()
		{
			SPG cln = (SPG)base.Clone();
			cln.InitVars();
			cln.SchemaSerializationMode = this.SchemaSerializationMode;
			return cln;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		protected override bool ShouldSerializeTables()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		protected override bool ShouldSerializeRelations()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
		{
			if (this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)
			{
				this.Reset();
				global::System.Data.DataSet ds = new global::System.Data.DataSet();
				ds.ReadXml(reader);
				if ((ds.Tables["Security"]) != null)
				{
					base.Tables.Add(new SecurityDataTable(ds.Tables["Security"]));
				}
				if ((ds.Tables["Users"]) != null)
				{
					base.Tables.Add(new UsersDataTable(ds.Tables["Users"]));
				}
				if ((ds.Tables["Customers"]) != null)
				{
					base.Tables.Add(new CustomersDataTable(ds.Tables["Customers"]));
				}
				if ((ds.Tables["Items"]) != null)
				{
					base.Tables.Add(new ItemsDataTable(ds.Tables["Items"]));
				}
				if ((ds.Tables["ReceivingDetails"]) != null)
				{
					base.Tables.Add(new ReceivingDetailsDataTable(ds.Tables["ReceivingDetails"]));
				}
				if ((ds.Tables["Receivings"]) != null)
				{
					base.Tables.Add(new ReceivingsDataTable(ds.Tables["Receivings"]));
				}
				if ((ds.Tables["Production"]) != null)
				{
					base.Tables.Add(new ProductionDataTable(ds.Tables["Production"]));
				}
				if ((ds.Tables["Shippings"]) != null)
				{
					base.Tables.Add(new ShippingsDataTable(ds.Tables["Shippings"]));
				}
				if ((ds.Tables["MachineLines"]) != null)
				{
					base.Tables.Add(new MachineLinesDataTable(ds.Tables["MachineLines"]));
				}
				if ((ds.Tables["ShippingDetails"]) != null)
				{
					base.Tables.Add(new ShippingDetailsDataTable(ds.Tables["ShippingDetails"]));
				}
				if ((ds.Tables["BOM"]) != null)
				{
					base.Tables.Add(new BOMDataTable(ds.Tables["BOM"]));
				}
				if ((ds.Tables["Shifts"]) != null)
				{
					base.Tables.Add(new ShiftsDataTable(ds.Tables["Shifts"]));
				}
				if ((ds.Tables["Carriers"]) != null)
				{
					base.Tables.Add(new CarriersDataTable(ds.Tables["Carriers"]));
				}
				if ((ds.Tables["CompanySettings"]) != null)
				{
					base.Tables.Add(new CompanySettingsDataTable(ds.Tables["CompanySettings"]));
				}
				if ((ds.Tables["ShippingAddresses"]) != null)
				{
					base.Tables.Add(new ShippingAddressesDataTable(ds.Tables["ShippingAddresses"]));
				}
				if ((ds.Tables["Inventory"]) != null)
				{
					base.Tables.Add(new InventoryDataTable(ds.Tables["Inventory"]));
				}
				if ((ds.Tables["UserPermissions"]) != null)
				{
					base.Tables.Add(new UserPermissionsDataTable(ds.Tables["UserPermissions"]));
				}
				if ((ds.Tables["Reports"]) != null)
				{
					base.Tables.Add(new ReportsDataTable(ds.Tables["Reports"]));
				}
				if ((ds.Tables["ReturnDet"]) != null)
				{
					base.Tables.Add(new ReturnDetDataTable(ds.Tables["ReturnDet"]));
				}
				if ((ds.Tables["ShippingReturnDetails"]) != null)
				{
					base.Tables.Add(new ShippingReturnDetailsDataTable(ds.Tables["ShippingReturnDetails"]));
				}
				if ((ds.Tables["InventoryAdjustment"]) != null)
				{
					base.Tables.Add(new InventoryAdjustmentDataTable(ds.Tables["InventoryAdjustment"]));
				}
				if ((ds.Tables["AuditTrail"]) != null)
				{
					base.Tables.Add(new AuditTrailDataTable(ds.Tables["AuditTrail"]));
				}
				if ((ds.Tables["InventoryBOMs"]) != null)
				{
					base.Tables.Add(new InventoryBOMsDataTable(ds.Tables["InventoryBOMs"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else
			{
				this.ReadXml(reader);
				this.InitVars();
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
		{
			global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
			this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
			stream.Position = 0;
			return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		internal void InitVars()
		{
			this.InitVars(true);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		internal void InitVars(bool initTable)
		{
			this.tableSecurity = (SecurityDataTable)base.Tables["Security"];
			if (initTable == true)
			{
				if ((this.tableSecurity) != null)
				{
					this.tableSecurity.InitVars();
				}
			}
			this.tableUsers = (UsersDataTable)base.Tables["Users"];
			if (initTable == true)
			{
				if ((this.tableUsers) != null)
				{
					this.tableUsers.InitVars();
				}
			}
			this.tableCustomers = (CustomersDataTable)base.Tables["Customers"];
			if (initTable == true)
			{
				if ((this.tableCustomers) != null)
				{
					this.tableCustomers.InitVars();
				}
			}
			this.tableItems = (ItemsDataTable)base.Tables["Items"];
			if (initTable == true)
			{
				if ((this.tableItems) != null)
				{
					this.tableItems.InitVars();
				}
			}
			this.tableReceivingDetails = (ReceivingDetailsDataTable)base.Tables["ReceivingDetails"];
			if (initTable == true)
			{
				if ((this.tableReceivingDetails) != null)
				{
					this.tableReceivingDetails.InitVars();
				}
			}
			this.tableReceivings = (ReceivingsDataTable)base.Tables["Receivings"];
			if (initTable == true)
			{
				if ((this.tableReceivings) != null)
				{
					this.tableReceivings.InitVars();
				}
			}
			this.tableProduction = (ProductionDataTable)base.Tables["Production"];
			if (initTable == true)
			{
				if ((this.tableProduction) != null)
				{
					this.tableProduction.InitVars();
				}
			}
			this.tableShippings = (ShippingsDataTable)base.Tables["Shippings"];
			if (initTable == true)
			{
				if ((this.tableShippings) != null)
				{
					this.tableShippings.InitVars();
				}
			}
			this.tableMachineLines = (MachineLinesDataTable)base.Tables["MachineLines"];
			if (initTable == true)
			{
				if ((this.tableMachineLines) != null)
				{
					this.tableMachineLines.InitVars();
				}
			}
			this.tableShippingDetails = (ShippingDetailsDataTable)base.Tables["ShippingDetails"];
			if (initTable == true)
			{
				if ((this.tableShippingDetails) != null)
				{
					this.tableShippingDetails.InitVars();
				}
			}
			this.tableBOM = (BOMDataTable)base.Tables["BOM"];
			if (initTable == true)
			{
				if ((this.tableBOM) != null)
				{
					this.tableBOM.InitVars();
				}
			}
			this.tableShifts = (ShiftsDataTable)base.Tables["Shifts"];
			if (initTable == true)
			{
				if ((this.tableShifts) != null)
				{
					this.tableShifts.InitVars();
				}
			}
			this.tableCarriers = (CarriersDataTable)base.Tables["Carriers"];
			if (initTable == true)
			{
				if ((this.tableCarriers) != null)
				{
					this.tableCarriers.InitVars();
				}
			}
			this.tableCompanySettings = (CompanySettingsDataTable)base.Tables["CompanySettings"];
			if (initTable == true)
			{
				if ((this.tableCompanySettings) != null)
				{
					this.tableCompanySettings.InitVars();
				}
			}
			this.tableShippingAddresses = (ShippingAddressesDataTable)base.Tables["ShippingAddresses"];
			if (initTable == true)
			{
				if ((this.tableShippingAddresses) != null)
				{
					this.tableShippingAddresses.InitVars();
				}
			}
			this.tableInventory = (InventoryDataTable)base.Tables["Inventory"];
			if (initTable == true)
			{
				if ((this.tableInventory) != null)
				{
					this.tableInventory.InitVars();
				}
			}
			this.tableUserPermissions = (UserPermissionsDataTable)base.Tables["UserPermissions"];
			if (initTable == true)
			{
				if ((this.tableUserPermissions) != null)
				{
					this.tableUserPermissions.InitVars();
				}
			}
			this.tableReports = (ReportsDataTable)base.Tables["Reports"];
			if (initTable == true)
			{
				if ((this.tableReports) != null)
				{
					this.tableReports.InitVars();
				}
			}
			this.tableReturnDet = (ReturnDetDataTable)base.Tables["ReturnDet"];
			if (initTable == true)
			{
				if ((this.tableReturnDet) != null)
				{
					this.tableReturnDet.InitVars();
				}
			}
			this.tableShippingReturnDetails = (ShippingReturnDetailsDataTable)base.Tables["ShippingReturnDetails"];
			if (initTable == true)
			{
				if ((this.tableShippingReturnDetails) != null)
				{
					this.tableShippingReturnDetails.InitVars();
				}
			}
			this.tableInventoryAdjustment = (InventoryAdjustmentDataTable)base.Tables["InventoryAdjustment"];
			if (initTable == true)
			{
				if ((this.tableInventoryAdjustment) != null)
				{
					this.tableInventoryAdjustment.InitVars();
				}
			}
			this.tableAuditTrail = (AuditTrailDataTable)base.Tables["AuditTrail"];
			if (initTable == true)
			{
				if ((this.tableAuditTrail) != null)
				{
					this.tableAuditTrail.InitVars();
				}
			}
			this.tableInventoryBOMs = (InventoryBOMsDataTable)base.Tables["InventoryBOMs"];
			if (initTable == true)
			{
				if ((this.tableInventoryBOMs) != null)
				{
					this.tableInventoryBOMs.InitVars();
				}
			}
			this.relationFK_tblUsers_Security = this.Relations["FK_tblUsers_Security"];
			this.relationFK_tblItems_tblCustomers = this.Relations["FK_tblItems_tblCustomers"];
			this.relationFK_tblItems_tblReceivDet = this.Relations["FK_tblItems_tblReceivDet"];
			this.relationFK_tblReceivDet_tblReceivMain = this.Relations["FK_tblReceivDet_tblReceivMain"];
			this.relationFK_tblReceivMain_tblCustomers = this.Relations["FK_tblReceivMain_tblCustomers"];
			this.relationFK_tblItems_tblProdMain = this.Relations["FK_tblItems_tblProdMain"];
			this.relationFK_tblShipMain_tblCustomers = this.Relations["FK_tblShipMain_tblCustomers"];
			this.relationFK_tblProdMain_tblMachineLine = this.Relations["FK_tblProdMain_tblMachineLine"];
			this.relationFK_tblItems_tblShipDet = this.Relations["FK_tblItems_tblShipDet"];
			this.relationFK_tblShipDet_tblShipMain = this.Relations["FK_tblShipDet_tblShipMain"];
			this.relationFK_tblBOMs_tblItems = this.Relations["FK_tblBOMs_tblItems"];
			this.relationFK_tblItems_tblBOMs = this.Relations["FK_tblItems_tblBOMs"];
			this.relationFK_tblProdMain_tblShifts = this.Relations["FK_tblProdMain_tblShifts"];
			this.relationFK_tblReceivMain_tblCarriers = this.Relations["FK_tblReceivMain_tblCarriers"];
			this.relationFK_tblShipMain_tblCarrier = this.Relations["FK_tblShipMain_tblCarrier"];
			this.relationFK_tblItems_tblReturnDet = this.Relations["FK_tblItems_tblReturnDet"];
			this.relationFK_tblReturnDet_tblReceivMain = this.Relations["FK_tblReturnDet_tblReceivMain"];
			this.relationFK_tblItems_tblShipReturnDet = this.Relations["FK_tblItems_tblShipReturnDet"];
			this.relationFK_tblShipReturnDet_tblShipMain = this.Relations["FK_tblShipReturnDet_tblShipMain"];
			this.relationFK_tblInventoryBOMs_tblInventory = this.Relations["FK_tblInventoryBOMs_tblInventory"];
			this.relationFK_tblItems_tblInventoryBOMs = this.Relations["FK_tblItems_tblInventoryBOMs"];
			this.relationFK_tblInventory_InventoryItemID = this.Relations["FK_tblInventory_InventoryItemID"];
			this.relationFK_tblInventoryAdjustment_Item = this.Relations["FK_tblInventoryAdjustment_Item"];
			this.relationFK_tblInventory_Shift = this.Relations["FK_tblInventory_Shift"];
			this.relationFK_tblReceivMain_intShiftID = this.Relations["FK_tblReceivMain_intShiftID"];
			this.relationFK_tblShipMain_intDestination = this.Relations["FK_tblShipMain_intDestination"];
			this.relationFK_tblShipMain_Shift = this.Relations["FK_tblShipMain_Shift"];
			this.relationFK_tblInventoryAdjustment_Customer = this.Relations["FK_tblInventoryAdjustment_Customer"];
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private void InitClass()
		{
			this.DataSetName = "SPG";
			this.Prefix = "";
			this.Namespace = "http://tempuri.org/SPG.xsd";
			this.EnforceConstraints = true;
			this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
			this.tableSecurity = new SecurityDataTable();
			base.Tables.Add(this.tableSecurity);
			this.tableUsers = new UsersDataTable();
			base.Tables.Add(this.tableUsers);
			this.tableCustomers = new CustomersDataTable();
			base.Tables.Add(this.tableCustomers);
			this.tableItems = new ItemsDataTable();
			base.Tables.Add(this.tableItems);
			this.tableReceivingDetails = new ReceivingDetailsDataTable();
			base.Tables.Add(this.tableReceivingDetails);
			this.tableReceivings = new ReceivingsDataTable();
			base.Tables.Add(this.tableReceivings);
			this.tableProduction = new ProductionDataTable();
			base.Tables.Add(this.tableProduction);
			this.tableShippings = new ShippingsDataTable();
			base.Tables.Add(this.tableShippings);
			this.tableMachineLines = new MachineLinesDataTable();
			base.Tables.Add(this.tableMachineLines);
			this.tableShippingDetails = new ShippingDetailsDataTable();
			base.Tables.Add(this.tableShippingDetails);
			this.tableBOM = new BOMDataTable();
			base.Tables.Add(this.tableBOM);
			this.tableShifts = new ShiftsDataTable();
			base.Tables.Add(this.tableShifts);
			this.tableCarriers = new CarriersDataTable();
			base.Tables.Add(this.tableCarriers);
			this.tableCompanySettings = new CompanySettingsDataTable();
			base.Tables.Add(this.tableCompanySettings);
			this.tableShippingAddresses = new ShippingAddressesDataTable();
			base.Tables.Add(this.tableShippingAddresses);
			this.tableInventory = new InventoryDataTable();
			base.Tables.Add(this.tableInventory);
			this.tableUserPermissions = new UserPermissionsDataTable();
			base.Tables.Add(this.tableUserPermissions);
			this.tableReports = new ReportsDataTable();
			base.Tables.Add(this.tableReports);
			this.tableReturnDet = new ReturnDetDataTable();
			base.Tables.Add(this.tableReturnDet);
			this.tableShippingReturnDetails = new ShippingReturnDetailsDataTable();
			base.Tables.Add(this.tableShippingReturnDetails);
			this.tableInventoryAdjustment = new InventoryAdjustmentDataTable();
			base.Tables.Add(this.tableInventoryAdjustment);
			this.tableAuditTrail = new AuditTrailDataTable();
			base.Tables.Add(this.tableAuditTrail);
			this.tableInventoryBOMs = new InventoryBOMsDataTable();
			base.Tables.Add(this.tableInventoryBOMs);
			global::System.Data.ForeignKeyConstraint fkc = new global::System.Data.ForeignKeyConstraint("FK_tblUsers_Security", new System.Data.DataColumn[] {this.tableUsers.strUserNameColumn}, new System.Data.DataColumn[] {this.tableSecurity.strUserColumn});
			this.tableSecurity.Constraints.Add(fkc);
			fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
			fkc.DeleteRule = global::System.Data.Rule.Cascade;
			fkc.UpdateRule = global::System.Data.Rule.Cascade;
			this.relationFK_tblUsers_Security = new global::System.Data.DataRelation("FK_tblUsers_Security", new global::System.Data.DataColumn[] {this.tableUsers.strUserNameColumn}, new global::System.Data.DataColumn[] {this.tableSecurity.strUserColumn}, false);
			this.Relations.Add(this.relationFK_tblUsers_Security);
			this.relationFK_tblItems_tblCustomers = new global::System.Data.DataRelation("FK_tblItems_tblCustomers", new global::System.Data.DataColumn[] {this.tableCustomers.CustomerIDColumn}, new global::System.Data.DataColumn[] {this.tableItems.ItemCustomerIDColumn}, false);
			this.Relations.Add(this.relationFK_tblItems_tblCustomers);
			this.relationFK_tblItems_tblReceivDet = new global::System.Data.DataRelation("FK_tblItems_tblReceivDet", new global::System.Data.DataColumn[] {this.tableItems.ItemIDColumn}, new global::System.Data.DataColumn[] {this.tableReceivingDetails.ReceivDetItemIDColumn}, false);
			this.Relations.Add(this.relationFK_tblItems_tblReceivDet);
			this.relationFK_tblReceivDet_tblReceivMain = new global::System.Data.DataRelation("FK_tblReceivDet_tblReceivMain", new global::System.Data.DataColumn[] {this.tableReceivings.ReceivIDColumn}, new global::System.Data.DataColumn[] {this.tableReceivingDetails.ReceivMainIDColumn}, false);
			this.Relations.Add(this.relationFK_tblReceivDet_tblReceivMain);
			this.relationFK_tblReceivMain_tblCustomers = new global::System.Data.DataRelation("FK_tblReceivMain_tblCustomers", new global::System.Data.DataColumn[] {this.tableCustomers.CustomerIDColumn}, new global::System.Data.DataColumn[] {this.tableReceivings.ReceivCustIDColumn}, false);
			this.Relations.Add(this.relationFK_tblReceivMain_tblCustomers);
			this.relationFK_tblItems_tblProdMain = new global::System.Data.DataRelation("FK_tblItems_tblProdMain", new global::System.Data.DataColumn[] {this.tableItems.ItemIDColumn}, new global::System.Data.DataColumn[] {this.tableProduction.ProdMainItemIDColumn}, false);
			this.Relations.Add(this.relationFK_tblItems_tblProdMain);
			this.relationFK_tblShipMain_tblCustomers = new global::System.Data.DataRelation("FK_tblShipMain_tblCustomers", new global::System.Data.DataColumn[] {this.tableCustomers.CustomerIDColumn}, new global::System.Data.DataColumn[] {this.tableShippings.ShipMainCustIDColumn}, false);
			this.Relations.Add(this.relationFK_tblShipMain_tblCustomers);
			this.relationFK_tblProdMain_tblMachineLine = new global::System.Data.DataRelation("FK_tblProdMain_tblMachineLine", new global::System.Data.DataColumn[] {this.tableMachineLines.MachineLineIDColumn}, new global::System.Data.DataColumn[] {this.tableProduction.ProdMainMachineLineColumn}, false);
			this.Relations.Add(this.relationFK_tblProdMain_tblMachineLine);
			this.relationFK_tblItems_tblShipDet = new global::System.Data.DataRelation("FK_tblItems_tblShipDet", new global::System.Data.DataColumn[] {this.tableItems.ItemIDColumn}, new global::System.Data.DataColumn[] {this.tableShippingDetails.ShipDetItemIDColumn}, false);
			this.Relations.Add(this.relationFK_tblItems_tblShipDet);
			this.relationFK_tblShipDet_tblShipMain = new global::System.Data.DataRelation("FK_tblShipDet_tblShipMain", new global::System.Data.DataColumn[] {this.tableShippings.ShipMainIDColumn}, new global::System.Data.DataColumn[] {this.tableShippingDetails.ShipDetMainIDColumn}, false);
			this.Relations.Add(this.relationFK_tblShipDet_tblShipMain);
			this.relationFK_tblBOMs_tblItems = new global::System.Data.DataRelation("FK_tblBOMs_tblItems", new global::System.Data.DataColumn[] {this.tableItems.ItemIDColumn}, new global::System.Data.DataColumn[] {this.tableBOM.BOMFiniGoodIDColumn}, false);
			this.Relations.Add(this.relationFK_tblBOMs_tblItems);
			this.relationFK_tblItems_tblBOMs = new global::System.Data.DataRelation("FK_tblItems_tblBOMs", new global::System.Data.DataColumn[] {this.tableItems.ItemIDColumn}, new global::System.Data.DataColumn[] {this.tableBOM.BOMRawMatIDColumn}, false);
			this.Relations.Add(this.relationFK_tblItems_tblBOMs);
			this.relationFK_tblProdMain_tblShifts = new global::System.Data.DataRelation("FK_tblProdMain_tblShifts", new global::System.Data.DataColumn[] {this.tableShifts.ShiftIDColumn}, new global::System.Data.DataColumn[] {this.tableProduction.ProdMainShiftColumn}, false);
			this.Relations.Add(this.relationFK_tblProdMain_tblShifts);
			this.relationFK_tblReceivMain_tblCarriers = new global::System.Data.DataRelation("FK_tblReceivMain_tblCarriers", new global::System.Data.DataColumn[] {this.tableCarriers.CarrierIDColumn}, new global::System.Data.DataColumn[] {this.tableReceivings.ReceivCarrierIDColumn}, false);
			this.Relations.Add(this.relationFK_tblReceivMain_tblCarriers);
			this.relationFK_tblShipMain_tblCarrier = new global::System.Data.DataRelation("FK_tblShipMain_tblCarrier", new global::System.Data.DataColumn[] {this.tableCarriers.CarrierIDColumn}, new global::System.Data.DataColumn[] {this.tableShippings.ShipMainCarrierIDColumn}, false);
			this.Relations.Add(this.relationFK_tblShipMain_tblCarrier);
			this.relationFK_tblItems_tblReturnDet = new global::System.Data.DataRelation("FK_tblItems_tblReturnDet", new global::System.Data.DataColumn[] {this.tableItems.ItemIDColumn}, new global::System.Data.DataColumn[] {this.tableReturnDet.ReturnDetItemIDColumn}, false);
			this.Relations.Add(this.relationFK_tblItems_tblReturnDet);
			this.relationFK_tblReturnDet_tblReceivMain = new global::System.Data.DataRelation("FK_tblReturnDet_tblReceivMain", new global::System.Data.DataColumn[] {this.tableReceivings.ReceivIDColumn}, new global::System.Data.DataColumn[] {this.tableReturnDet.ReceiveMainIDColumn}, false);
			this.Relations.Add(this.relationFK_tblReturnDet_tblReceivMain);
			this.relationFK_tblItems_tblShipReturnDet = new global::System.Data.DataRelation("FK_tblItems_tblShipReturnDet", new global::System.Data.DataColumn[] {this.tableItems.ItemIDColumn}, new global::System.Data.DataColumn[] {this.tableShippingReturnDetails.ReturnDetItemIDColumn}, false);
			this.Relations.Add(this.relationFK_tblItems_tblShipReturnDet);
			this.relationFK_tblShipReturnDet_tblShipMain = new global::System.Data.DataRelation("FK_tblShipReturnDet_tblShipMain", new global::System.Data.DataColumn[] {this.tableShippings.ShipMainIDColumn}, new global::System.Data.DataColumn[] {this.tableShippingReturnDetails.ShipMainIDColumn}, false);
			this.Relations.Add(this.relationFK_tblShipReturnDet_tblShipMain);
			this.relationFK_tblInventoryBOMs_tblInventory = new global::System.Data.DataRelation("FK_tblInventoryBOMs_tblInventory", new global::System.Data.DataColumn[] {this.tableInventory.InventoryIDColumn}, new global::System.Data.DataColumn[] {this.tableInventoryBOMs.InventoryBOMInventoryIDColumn}, false);
			this.Relations.Add(this.relationFK_tblInventoryBOMs_tblInventory);
			this.relationFK_tblItems_tblInventoryBOMs = new global::System.Data.DataRelation("FK_tblItems_tblInventoryBOMs", new global::System.Data.DataColumn[] {this.tableItems.ItemIDColumn}, new global::System.Data.DataColumn[] {this.tableInventoryBOMs.InventoryBOMRawMatIDColumn}, false);
			this.Relations.Add(this.relationFK_tblItems_tblInventoryBOMs);
			this.relationFK_tblInventory_InventoryItemID = new global::System.Data.DataRelation("FK_tblInventory_InventoryItemID", new global::System.Data.DataColumn[] {this.tableItems.ItemIDColumn}, new global::System.Data.DataColumn[] {this.tableInventory.InventoryItemIDColumn}, false);
			this.Relations.Add(this.relationFK_tblInventory_InventoryItemID);
			this.relationFK_tblInventoryAdjustment_Item = new global::System.Data.DataRelation("FK_tblInventoryAdjustment_Item", new global::System.Data.DataColumn[] {this.tableItems.ItemIDColumn}, new global::System.Data.DataColumn[] {this.tableInventoryAdjustment.ItemIDColumn}, false);
			this.Relations.Add(this.relationFK_tblInventoryAdjustment_Item);
			this.relationFK_tblInventory_Shift = new global::System.Data.DataRelation("FK_tblInventory_Shift", new global::System.Data.DataColumn[] {this.tableShifts.ShiftIDColumn}, new global::System.Data.DataColumn[] {this.tableInventory.ShiftColumn}, false);
			this.Relations.Add(this.relationFK_tblInventory_Shift);
			this.relationFK_tblReceivMain_intShiftID = new global::System.Data.DataRelation("FK_tblReceivMain_intShiftID", new global::System.Data.DataColumn[] {this.tableShifts.ShiftIDColumn}, new global::System.Data.DataColumn[] {this.tableReceivings.intShiftIDColumn}, false);
			this.Relations.Add(this.relationFK_tblReceivMain_intShiftID);
			this.relationFK_tblShipMain_intDestination = new global::System.Data.DataRelation("FK_tblShipMain_intDestination", new global::System.Data.DataColumn[] {this.tableShippingAddresses.AddressIDColumn}, new global::System.Data.DataColumn[] {this.tableShippings.intDestinationColumn}, false);
			this.Relations.Add(this.relationFK_tblShipMain_intDestination);
			this.relationFK_tblShipMain_Shift = new global::System.Data.DataRelation("FK_tblShipMain_Shift", new global::System.Data.DataColumn[] {this.tableShifts.ShiftIDColumn}, new global::System.Data.DataColumn[] {this.tableShippings.ShiftColumn}, false);
			this.Relations.Add(this.relationFK_tblShipMain_Shift);
			this.relationFK_tblInventoryAdjustment_Customer = new global::System.Data.DataRelation("FK_tblInventoryAdjustment_Customer", new global::System.Data.DataColumn[] {this.tableCustomers.CustomerIDColumn}, new global::System.Data.DataColumn[] {this.tableInventoryAdjustment.CustomerColumn}, false);
			this.Relations.Add(this.relationFK_tblInventoryAdjustment_Customer);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeSecurity()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeUsers()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeCustomers()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeItems()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeReceivingDetails()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeReceivings()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeProduction()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeShippings()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeMachineLines()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeShippingDetails()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeBOM()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeShifts()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeCarriers()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeCompanySettings()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeShippingAddresses()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeInventory()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeUserPermissions()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeReports()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeReturnDet()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeShippingReturnDetails()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeInventoryAdjustment()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeAuditTrail()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private bool ShouldSerializeInventoryBOMs()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
		{
			if (e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)
			{
				this.InitVars();
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
		{
			SPG ds = new SPG();
			global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
			global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
			global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
			any.Namespace = ds.Namespace;
			sequence.Items.Add(any);
			type.Particle = sequence;
			global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
			if (xs.Contains(dsSchema.TargetNamespace))
			{
				global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
				global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
				try
				{
					global::System.Xml.Schema.XmlSchema schema = null;
					dsSchema.Write(s1);
					global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
					while (schemas.MoveNext())
					{
						schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
						s2.SetLength(0);
						schema.Write(s2);
						if (s1.Length == s2.Length)
						{
							s1.Position = 0;
							s2.Position = 0;

							while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
							{


							}
							if (s1.Position == s1.Length)
							{
								return type;
							}
						}

					}
				}
				finally
				{
					if ((s1) != null)
					{
						s1.Close();
					}
					if ((s2) != null)
					{
						s2.Close();
					}
				}
			}
			xs.Add(dsSchema);
			return type;
		}

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void SecurityRowChangeEventHandler(object sender, SecurityRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void UsersRowChangeEventHandler(object sender, UsersRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void CustomersRowChangeEventHandler(object sender, CustomersRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void ItemsRowChangeEventHandler(object sender, ItemsRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void ReceivingDetailsRowChangeEventHandler(object sender, ReceivingDetailsRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void ReceivingsRowChangeEventHandler(object sender, ReceivingsRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void ProductionRowChangeEventHandler(object sender, ProductionRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void ShippingsRowChangeEventHandler(object sender, ShippingsRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void MachineLinesRowChangeEventHandler(object sender, MachineLinesRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void ShippingDetailsRowChangeEventHandler(object sender, ShippingDetailsRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void BOMRowChangeEventHandler(object sender, BOMRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void ShiftsRowChangeEventHandler(object sender, ShiftsRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void CarriersRowChangeEventHandler(object sender, CarriersRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void CompanySettingsRowChangeEventHandler(object sender, CompanySettingsRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void ShippingAddressesRowChangeEventHandler(object sender, ShippingAddressesRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void InventoryRowChangeEventHandler(object sender, InventoryRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void UserPermissionsRowChangeEventHandler(object sender, UserPermissionsRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void ReportsRowChangeEventHandler(object sender, ReportsRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void ReturnDetRowChangeEventHandler(object sender, ReturnDetRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void ShippingReturnDetailsRowChangeEventHandler(object sender, ShippingReturnDetailsRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void InventoryAdjustmentRowChangeEventHandler(object sender, InventoryAdjustmentRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void AuditTrailRowChangeEventHandler(object sender, AuditTrailRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public delegate void InventoryBOMsRowChangeEventHandler(object sender, InventoryBOMsRowChangeEvent e);

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class SecurityDataTable : System.Data.TypedTableBase<SecurityRow>
		{
			private global::System.Data.DataColumn columnstrUser;

			private global::System.Data.DataColumn columnAdvancedTabs;

			private global::System.Data.DataColumn columnProductionReport;

			private global::System.Data.DataColumn columnCostingReport;

			private global::System.Data.DataColumn columnItemsForm;

			private global::System.Data.DataColumn columnProductionForm;

			private global::System.Data.DataColumn columnCustomersForm;

			private global::System.Data.DataColumn columnShippingForm;

			private global::System.Data.DataColumn columnReceivingForm;

			private global::System.Data.DataColumn columnFinancialTabs;

			private global::System.Data.DataColumn columnts;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public SecurityDataTable() : base()
			{
				this.TableName = "Security";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal SecurityDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected SecurityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strUserColumn
			{
				get
				{
					return this.columnstrUser;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn AdvancedTabsColumn
			{
				get
				{
					return this.columnAdvancedTabs;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ProductionReportColumn
			{
				get
				{
					return this.columnProductionReport;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CostingReportColumn
			{
				get
				{
					return this.columnCostingReport;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ItemsFormColumn
			{
				get
				{
					return this.columnItemsForm;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ProductionFormColumn
			{
				get
				{
					return this.columnProductionForm;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CustomersFormColumn
			{
				get
				{
					return this.columnCustomersForm;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShippingFormColumn
			{
				get
				{
					return this.columnShippingForm;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReceivingFormColumn
			{
				get
				{
					return this.columnReceivingForm;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn FinancialTabsColumn
			{
				get
				{
					return this.columnFinancialTabs;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public SecurityRow this[int index]
			{
				get
				{
					return (SecurityRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event SecurityRowChangeEventHandler SecurityRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event SecurityRowChangeEventHandler SecurityRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event SecurityRowChangeEventHandler SecurityRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event SecurityRowChangeEventHandler SecurityRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddSecurityRow(SecurityRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public SecurityRow AddSecurityRow(UsersRow parentUsersRowByFK_tblUsers_Security, bool AdvancedTabs, bool ProductionReport, bool CostingReport, bool ItemsForm, bool ProductionForm, bool CustomersForm, bool ShippingForm, bool ReceivingForm, bool FinancialTabs, byte[] ts)
			{
				SecurityRow rowSecurityRow = (SecurityRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, AdvancedTabs, ProductionReport, CostingReport, ItemsForm, ProductionForm, CustomersForm, ShippingForm, ReceivingForm, FinancialTabs, ts};
				if ((parentUsersRowByFK_tblUsers_Security) != null)
				{
					columnValuesArray[0] = parentUsersRowByFK_tblUsers_Security[0];
				}
				rowSecurityRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowSecurityRow);
				return rowSecurityRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public SecurityRow FindBystrUser(string strUser)
			{
				return (SecurityRow)this.Rows.Find(new object[] {strUser});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				SecurityDataTable cln = (SecurityDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new SecurityDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnstrUser = base.Columns["strUser"];
				this.columnAdvancedTabs = base.Columns["AdvancedTabs"];
				this.columnProductionReport = base.Columns["ProductionReport"];
				this.columnCostingReport = base.Columns["CostingReport"];
				this.columnItemsForm = base.Columns["ItemsForm"];
				this.columnProductionForm = base.Columns["ProductionForm"];
				this.columnCustomersForm = base.Columns["CustomersForm"];
				this.columnShippingForm = base.Columns["ShippingForm"];
				this.columnReceivingForm = base.Columns["ReceivingForm"];
				this.columnFinancialTabs = base.Columns["FinancialTabs"];
				this.columnts = base.Columns["ts"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnstrUser = new global::System.Data.DataColumn("strUser", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrUser);
				this.columnAdvancedTabs = new global::System.Data.DataColumn("AdvancedTabs", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnAdvancedTabs);
				this.columnProductionReport = new global::System.Data.DataColumn("ProductionReport", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnProductionReport);
				this.columnCostingReport = new global::System.Data.DataColumn("CostingReport", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCostingReport);
				this.columnItemsForm = new global::System.Data.DataColumn("ItemsForm", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnItemsForm);
				this.columnProductionForm = new global::System.Data.DataColumn("ProductionForm", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnProductionForm);
				this.columnCustomersForm = new global::System.Data.DataColumn("CustomersForm", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCustomersForm);
				this.columnShippingForm = new global::System.Data.DataColumn("ShippingForm", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShippingForm);
				this.columnReceivingForm = new global::System.Data.DataColumn("ReceivingForm", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReceivingForm);
				this.columnFinancialTabs = new global::System.Data.DataColumn("FinancialTabs", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnFinancialTabs);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnstrUser}, true));
				this.columnstrUser.AllowDBNull = false;
				this.columnstrUser.Unique = true;
				this.columnstrUser.MaxLength = 50;
				this.columnAdvancedTabs.AllowDBNull = false;
				this.columnProductionReport.AllowDBNull = false;
				this.columnCostingReport.AllowDBNull = false;
				this.columnItemsForm.AllowDBNull = false;
				this.columnProductionForm.AllowDBNull = false;
				this.columnCustomersForm.AllowDBNull = false;
				this.columnShippingForm.AllowDBNull = false;
				this.columnReceivingForm.AllowDBNull = false;
				this.columnFinancialTabs.AllowDBNull = false;
				this.columnts.ReadOnly = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public SecurityRow NewSecurityRow()
			{
				return (SecurityRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new SecurityRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(SecurityRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.SecurityRowChanged) != null)
				{
					SecurityRowChanged(this, new SecurityRowChangeEvent((SecurityRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.SecurityRowChanging) != null)
				{
					SecurityRowChanging(this, new SecurityRowChangeEvent((SecurityRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.SecurityRowDeleted) != null)
				{
					SecurityRowDeleted(this, new SecurityRowChangeEvent((SecurityRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.SecurityRowDeleting) != null)
				{
					SecurityRowDeleting(this, new SecurityRowChangeEvent((SecurityRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveSecurityRow(SecurityRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "SecurityDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class UsersDataTable : System.Data.TypedTableBase<UsersRow>
		{
			private global::System.Data.DataColumn columnstrUserName;

			private global::System.Data.DataColumn columnstrPassword;

			private global::System.Data.DataColumn columnstrSecurityLevel;

			private global::System.Data.DataColumn columnts;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UsersDataTable() : base()
			{
				this.TableName = "Users";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal UsersDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected UsersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strUserNameColumn
			{
				get
				{
					return this.columnstrUserName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strPasswordColumn
			{
				get
				{
					return this.columnstrPassword;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strSecurityLevelColumn
			{
				get
				{
					return this.columnstrSecurityLevel;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UsersRow this[int index]
			{
				get
				{
					return (UsersRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event UsersRowChangeEventHandler UsersRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event UsersRowChangeEventHandler UsersRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event UsersRowChangeEventHandler UsersRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event UsersRowChangeEventHandler UsersRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddUsersRow(UsersRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UsersRow AddUsersRow(string strUserName, string strPassword, string strSecurityLevel, byte[] ts)
			{
				UsersRow rowUsersRow = (UsersRow)this.NewRow();
				object[] columnValuesArray = new object[] {strUserName, strPassword, strSecurityLevel, ts};
				rowUsersRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowUsersRow);
				return rowUsersRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UsersRow FindBystrUserName(string strUserName)
			{
				return (UsersRow)this.Rows.Find(new object[] {strUserName});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				UsersDataTable cln = (UsersDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new UsersDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnstrUserName = base.Columns["strUserName"];
				this.columnstrPassword = base.Columns["strPassword"];
				this.columnstrSecurityLevel = base.Columns["strSecurityLevel"];
				this.columnts = base.Columns["ts"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnstrUserName = new global::System.Data.DataColumn("strUserName", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrUserName);
				this.columnstrPassword = new global::System.Data.DataColumn("strPassword", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrPassword);
				this.columnstrSecurityLevel = new global::System.Data.DataColumn("strSecurityLevel", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrSecurityLevel);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnstrUserName}, true));
				this.columnstrUserName.AllowDBNull = false;
				this.columnstrUserName.Unique = true;
				this.columnstrUserName.MaxLength = 50;
				this.columnstrPassword.MaxLength = 50;
				this.columnstrSecurityLevel.DefaultValue = Convert.ToString("User");
				this.columnstrSecurityLevel.MaxLength = 50;
				this.columnts.ReadOnly = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UsersRow NewUsersRow()
			{
				return (UsersRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new UsersRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(UsersRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.UsersRowChanged) != null)
				{
					UsersRowChanged(this, new UsersRowChangeEvent((UsersRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.UsersRowChanging) != null)
				{
					UsersRowChanging(this, new UsersRowChangeEvent((UsersRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.UsersRowDeleted) != null)
				{
					UsersRowDeleted(this, new UsersRowChangeEvent((UsersRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.UsersRowDeleting) != null)
				{
					UsersRowDeleting(this, new UsersRowChangeEvent((UsersRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveUsersRow(UsersRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "UsersDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class CustomersDataTable : System.Data.TypedTableBase<CustomersRow>
		{
			private global::System.Data.DataColumn columnCustomerID;

			private global::System.Data.DataColumn columnCustomerName;

			private global::System.Data.DataColumn columnCustomerContact;

			private global::System.Data.DataColumn columnCustomerPhone;

			private global::System.Data.DataColumn columnCustomerEmail;

			private global::System.Data.DataColumn columnCustomerFax;

			private global::System.Data.DataColumn columnCustomerNote;

			private global::System.Data.DataColumn columnstrEnteredBy;

			private global::System.Data.DataColumn columndtmEnteredOn;

			private global::System.Data.DataColumn columnts;

			private global::System.Data.DataColumn columnAddress;

			private global::System.Data.DataColumn columnCity;

			private global::System.Data.DataColumn columnState;

			private global::System.Data.DataColumn columnZipCode;

			private global::System.Data.DataColumn columnInactive;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CustomersDataTable() : base()
			{
				this.TableName = "Customers";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal CustomersDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected CustomersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CustomerIDColumn
			{
				get
				{
					return this.columnCustomerID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CustomerNameColumn
			{
				get
				{
					return this.columnCustomerName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CustomerContactColumn
			{
				get
				{
					return this.columnCustomerContact;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CustomerPhoneColumn
			{
				get
				{
					return this.columnCustomerPhone;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CustomerEmailColumn
			{
				get
				{
					return this.columnCustomerEmail;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CustomerFaxColumn
			{
				get
				{
					return this.columnCustomerFax;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CustomerNoteColumn
			{
				get
				{
					return this.columnCustomerNote;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strEnteredByColumn
			{
				get
				{
					return this.columnstrEnteredBy;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dtmEnteredOnColumn
			{
				get
				{
					return this.columndtmEnteredOn;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn AddressColumn
			{
				get
				{
					return this.columnAddress;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CityColumn
			{
				get
				{
					return this.columnCity;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn StateColumn
			{
				get
				{
					return this.columnState;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ZipCodeColumn
			{
				get
				{
					return this.columnZipCode;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn InactiveColumn
			{
				get
				{
					return this.columnInactive;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CustomersRow this[int index]
			{
				get
				{
					return (CustomersRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event CustomersRowChangeEventHandler CustomersRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event CustomersRowChangeEventHandler CustomersRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event CustomersRowChangeEventHandler CustomersRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event CustomersRowChangeEventHandler CustomersRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddCustomersRow(CustomersRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CustomersRow AddCustomersRow(string CustomerName, string CustomerContact, string CustomerPhone, string CustomerEmail, string CustomerFax, string CustomerNote, string strEnteredBy, DateTime dtmEnteredOn, byte[] ts, string Address, string City, string State, string ZipCode, bool Inactive)
			{
				CustomersRow rowCustomersRow = (CustomersRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, CustomerName, CustomerContact, CustomerPhone, CustomerEmail, CustomerFax, CustomerNote, strEnteredBy, dtmEnteredOn, ts, Address, City, State, ZipCode, Inactive};
				rowCustomersRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowCustomersRow);
				return rowCustomersRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CustomersRow FindByCustomerID(int CustomerID)
			{
				return (CustomersRow)this.Rows.Find(new object[] {CustomerID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				CustomersDataTable cln = (CustomersDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new CustomersDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnCustomerID = base.Columns["CustomerID"];
				this.columnCustomerName = base.Columns["CustomerName"];
				this.columnCustomerContact = base.Columns["CustomerContact"];
				this.columnCustomerPhone = base.Columns["CustomerPhone"];
				this.columnCustomerEmail = base.Columns["CustomerEmail"];
				this.columnCustomerFax = base.Columns["CustomerFax"];
				this.columnCustomerNote = base.Columns["CustomerNote"];
				this.columnstrEnteredBy = base.Columns["strEnteredBy"];
				this.columndtmEnteredOn = base.Columns["dtmEnteredOn"];
				this.columnts = base.Columns["ts"];
				this.columnAddress = base.Columns["Address"];
				this.columnCity = base.Columns["City"];
				this.columnState = base.Columns["State"];
				this.columnZipCode = base.Columns["ZipCode"];
				this.columnInactive = base.Columns["Inactive"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCustomerID);
				this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCustomerName);
				this.columnCustomerContact = new global::System.Data.DataColumn("CustomerContact", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCustomerContact);
				this.columnCustomerPhone = new global::System.Data.DataColumn("CustomerPhone", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCustomerPhone);
				this.columnCustomerEmail = new global::System.Data.DataColumn("CustomerEmail", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCustomerEmail);
				this.columnCustomerFax = new global::System.Data.DataColumn("CustomerFax", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCustomerFax);
				this.columnCustomerNote = new global::System.Data.DataColumn("CustomerNote", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCustomerNote);
				this.columnstrEnteredBy = new global::System.Data.DataColumn("strEnteredBy", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrEnteredBy);
				this.columndtmEnteredOn = new global::System.Data.DataColumn("dtmEnteredOn", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndtmEnteredOn);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnAddress);
				this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCity);
				this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnState);
				this.columnZipCode = new global::System.Data.DataColumn("ZipCode", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnZipCode);
				this.columnInactive = new global::System.Data.DataColumn("Inactive", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnInactive);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnCustomerID}, true));
				this.columnCustomerID.AutoIncrement = true;
				this.columnCustomerID.AllowDBNull = false;
				this.columnCustomerID.ReadOnly = true;
				this.columnCustomerID.Unique = true;
				this.columnCustomerName.MaxLength = 50;
				this.columnCustomerContact.MaxLength = 50;
				this.columnCustomerPhone.MaxLength = 50;
				this.columnCustomerEmail.MaxLength = 50;
				this.columnCustomerFax.MaxLength = 50;
				this.columnCustomerNote.MaxLength = 250;
				this.columnstrEnteredBy.MaxLength = 50;
				this.columnts.ReadOnly = true;
				this.columnAddress.MaxLength = 150;
				this.columnCity.MaxLength = 150;
				this.columnState.MaxLength = 50;
				this.columnZipCode.MaxLength = 50;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CustomersRow NewCustomersRow()
			{
				return (CustomersRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new CustomersRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(CustomersRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.CustomersRowChanged) != null)
				{
					CustomersRowChanged(this, new CustomersRowChangeEvent((CustomersRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.CustomersRowChanging) != null)
				{
					CustomersRowChanging(this, new CustomersRowChangeEvent((CustomersRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.CustomersRowDeleted) != null)
				{
					CustomersRowDeleted(this, new CustomersRowChangeEvent((CustomersRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.CustomersRowDeleting) != null)
				{
					CustomersRowDeleting(this, new CustomersRowChangeEvent((CustomersRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveCustomersRow(CustomersRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "CustomersDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class ItemsDataTable : System.Data.TypedTableBase<ItemsRow>
		{
			private global::System.Data.DataColumn columnItemID;

			private global::System.Data.DataColumn columnItemCode;

			private global::System.Data.DataColumn columnItemDescription;

			private global::System.Data.DataColumn columnItemType;

			private global::System.Data.DataColumn columnItemCustomerID;

			private global::System.Data.DataColumn columnItemDefaultMachine;

			private global::System.Data.DataColumn columnItemPicture;

			private global::System.Data.DataColumn columndblPrice;

			private global::System.Data.DataColumn columnsngRebate;

			private global::System.Data.DataColumn columnstrUnitOfMeasure;

			private global::System.Data.DataColumn columnintQtyPerUnit;

			private global::System.Data.DataColumn columnstrEnteredBy;

			private global::System.Data.DataColumn columndtmEnteredOn;

			private global::System.Data.DataColumn columndblFreight;

			private global::System.Data.DataColumn columndblFilm;

			private global::System.Data.DataColumn columndblBoxes;

			private global::System.Data.DataColumn columndblStretchWrap;

			private global::System.Data.DataColumn columndblPallets;

			private global::System.Data.DataColumn columndblOther1;

			private global::System.Data.DataColumn columndblOther2;

			private global::System.Data.DataColumn columndblOther3;

			private global::System.Data.DataColumn columndblOther4;

			private global::System.Data.DataColumn columndblOther5;

			private global::System.Data.DataColumn columnintUnitsPerCase;

			private global::System.Data.DataColumn columnintCasesPerPallet;

			private global::System.Data.DataColumn columnts;

			private global::System.Data.DataColumn columnsngQuantityOnHand;

			private global::System.Data.DataColumn columnintUnitsPerPallet;

			private global::System.Data.DataColumn columnCaseGrossWeight;

			private global::System.Data.DataColumn columnPackageCode;

			private global::System.Data.DataColumn columnCaseCode;

			private global::System.Data.DataColumn columnRequiredWeight;

			private global::System.Data.DataColumn columnMAV;

			private global::System.Data.DataColumn columnCasesPerLayer;

			private global::System.Data.DataColumn columnLayersPerPallet;

			private global::System.Data.DataColumn columnShelfLife;

			private global::System.Data.DataColumn columnInstructions;

			private global::System.Data.DataColumn columnPalletPattern;

			private global::System.Data.DataColumn columnInactive;

			private global::System.Data.DataColumn columnPackers;

			private global::System.Data.DataColumn columnItemProdStandard;

			private global::System.Data.DataColumn columnUPC;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsDataTable() : base()
			{
				this.TableName = "Items";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ItemsDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected ItemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ItemIDColumn
			{
				get
				{
					return this.columnItemID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ItemCodeColumn
			{
				get
				{
					return this.columnItemCode;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ItemDescriptionColumn
			{
				get
				{
					return this.columnItemDescription;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ItemTypeColumn
			{
				get
				{
					return this.columnItemType;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ItemCustomerIDColumn
			{
				get
				{
					return this.columnItemCustomerID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ItemDefaultMachineColumn
			{
				get
				{
					return this.columnItemDefaultMachine;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ItemPictureColumn
			{
				get
				{
					return this.columnItemPicture;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dblPriceColumn
			{
				get
				{
					return this.columndblPrice;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn sngRebateColumn
			{
				get
				{
					return this.columnsngRebate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strUnitOfMeasureColumn
			{
				get
				{
					return this.columnstrUnitOfMeasure;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn intQtyPerUnitColumn
			{
				get
				{
					return this.columnintQtyPerUnit;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strEnteredByColumn
			{
				get
				{
					return this.columnstrEnteredBy;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dtmEnteredOnColumn
			{
				get
				{
					return this.columndtmEnteredOn;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dblFreightColumn
			{
				get
				{
					return this.columndblFreight;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dblFilmColumn
			{
				get
				{
					return this.columndblFilm;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dblBoxesColumn
			{
				get
				{
					return this.columndblBoxes;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dblStretchWrapColumn
			{
				get
				{
					return this.columndblStretchWrap;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dblPalletsColumn
			{
				get
				{
					return this.columndblPallets;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dblOther1Column
			{
				get
				{
					return this.columndblOther1;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dblOther2Column
			{
				get
				{
					return this.columndblOther2;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dblOther3Column
			{
				get
				{
					return this.columndblOther3;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dblOther4Column
			{
				get
				{
					return this.columndblOther4;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dblOther5Column
			{
				get
				{
					return this.columndblOther5;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn intUnitsPerCaseColumn
			{
				get
				{
					return this.columnintUnitsPerCase;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn intCasesPerPalletColumn
			{
				get
				{
					return this.columnintCasesPerPallet;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn sngQuantityOnHandColumn
			{
				get
				{
					return this.columnsngQuantityOnHand;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn intUnitsPerPalletColumn
			{
				get
				{
					return this.columnintUnitsPerPallet;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CaseGrossWeightColumn
			{
				get
				{
					return this.columnCaseGrossWeight;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn PackageCodeColumn
			{
				get
				{
					return this.columnPackageCode;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CaseCodeColumn
			{
				get
				{
					return this.columnCaseCode;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn RequiredWeightColumn
			{
				get
				{
					return this.columnRequiredWeight;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn MAVColumn
			{
				get
				{
					return this.columnMAV;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CasesPerLayerColumn
			{
				get
				{
					return this.columnCasesPerLayer;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn LayersPerPalletColumn
			{
				get
				{
					return this.columnLayersPerPallet;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShelfLifeColumn
			{
				get
				{
					return this.columnShelfLife;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn InstructionsColumn
			{
				get
				{
					return this.columnInstructions;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn PalletPatternColumn
			{
				get
				{
					return this.columnPalletPattern;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn InactiveColumn
			{
				get
				{
					return this.columnInactive;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn PackersColumn
			{
				get
				{
					return this.columnPackers;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ItemProdStandardColumn
			{
				get
				{
					return this.columnItemProdStandard;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn UPCColumn
			{
				get
				{
					return this.columnUPC;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow this[int index]
			{
				get
				{
					return (ItemsRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ItemsRowChangeEventHandler ItemsRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ItemsRowChangeEventHandler ItemsRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ItemsRowChangeEventHandler ItemsRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ItemsRowChangeEventHandler ItemsRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddItemsRow(ItemsRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow AddItemsRow(string ItemCode, string ItemDescription, string ItemType, CustomersRow parentCustomersRowByFK_tblItems_tblCustomers, int ItemDefaultMachine, byte[] ItemPicture, double dblPrice, float sngRebate, string strUnitOfMeasure, double intQtyPerUnit, string strEnteredBy, DateTime dtmEnteredOn, double dblFreight, double dblFilm, double dblBoxes, double dblStretchWrap, double dblPallets, double dblOther1, double dblOther2, double dblOther3, double dblOther4, double dblOther5, double intUnitsPerCase, int intCasesPerPallet, byte[] ts, float sngQuantityOnHand, int intUnitsPerPallet, double CaseGrossWeight, string PackageCode, string CaseCode, string RequiredWeight, string MAV, string CasesPerLayer, string LayersPerPallet, string ShelfLife, string Instructions, string PalletPattern, bool Inactive, double Packers, double ItemProdStandard, string UPC)
			{
				ItemsRow rowItemsRow = (ItemsRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, ItemCode, ItemDescription, ItemType, null, ItemDefaultMachine, ItemPicture, dblPrice, sngRebate, strUnitOfMeasure, intQtyPerUnit, strEnteredBy, dtmEnteredOn, dblFreight, dblFilm, dblBoxes, dblStretchWrap, dblPallets, dblOther1, dblOther2, dblOther3, dblOther4, dblOther5, intUnitsPerCase, intCasesPerPallet, ts, sngQuantityOnHand, intUnitsPerPallet, CaseGrossWeight, PackageCode, CaseCode, RequiredWeight, MAV, CasesPerLayer, LayersPerPallet, ShelfLife, Instructions, PalletPattern, Inactive, Packers, ItemProdStandard, UPC};
				if ((parentCustomersRowByFK_tblItems_tblCustomers) != null)
				{
					columnValuesArray[4] = parentCustomersRowByFK_tblItems_tblCustomers[0];
				}
				rowItemsRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowItemsRow);
				return rowItemsRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow FindByItemID(int ItemID)
			{
				return (ItemsRow)this.Rows.Find(new object[] {ItemID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				ItemsDataTable cln = (ItemsDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new ItemsDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnItemID = base.Columns["ItemID"];
				this.columnItemCode = base.Columns["ItemCode"];
				this.columnItemDescription = base.Columns["ItemDescription"];
				this.columnItemType = base.Columns["ItemType"];
				this.columnItemCustomerID = base.Columns["ItemCustomerID"];
				this.columnItemDefaultMachine = base.Columns["ItemDefaultMachine"];
				this.columnItemPicture = base.Columns["ItemPicture"];
				this.columndblPrice = base.Columns["dblPrice"];
				this.columnsngRebate = base.Columns["sngRebate"];
				this.columnstrUnitOfMeasure = base.Columns["strUnitOfMeasure"];
				this.columnintQtyPerUnit = base.Columns["intQtyPerUnit"];
				this.columnstrEnteredBy = base.Columns["strEnteredBy"];
				this.columndtmEnteredOn = base.Columns["dtmEnteredOn"];
				this.columndblFreight = base.Columns["dblFreight"];
				this.columndblFilm = base.Columns["dblFilm"];
				this.columndblBoxes = base.Columns["dblBoxes"];
				this.columndblStretchWrap = base.Columns["dblStretchWrap"];
				this.columndblPallets = base.Columns["dblPallets"];
				this.columndblOther1 = base.Columns["dblOther1"];
				this.columndblOther2 = base.Columns["dblOther2"];
				this.columndblOther3 = base.Columns["dblOther3"];
				this.columndblOther4 = base.Columns["dblOther4"];
				this.columndblOther5 = base.Columns["dblOther5"];
				this.columnintUnitsPerCase = base.Columns["intUnitsPerCase"];
				this.columnintCasesPerPallet = base.Columns["intCasesPerPallet"];
				this.columnts = base.Columns["ts"];
				this.columnsngQuantityOnHand = base.Columns["sngQuantityOnHand"];
				this.columnintUnitsPerPallet = base.Columns["intUnitsPerPallet"];
				this.columnCaseGrossWeight = base.Columns["CaseGrossWeight"];
				this.columnPackageCode = base.Columns["PackageCode"];
				this.columnCaseCode = base.Columns["CaseCode"];
				this.columnRequiredWeight = base.Columns["RequiredWeight"];
				this.columnMAV = base.Columns["MAV"];
				this.columnCasesPerLayer = base.Columns["CasesPerLayer"];
				this.columnLayersPerPallet = base.Columns["LayersPerPallet"];
				this.columnShelfLife = base.Columns["ShelfLife"];
				this.columnInstructions = base.Columns["Instructions"];
				this.columnPalletPattern = base.Columns["PalletPattern"];
				this.columnInactive = base.Columns["Inactive"];
				this.columnPackers = base.Columns["Packers"];
				this.columnItemProdStandard = base.Columns["ItemProdStandard"];
				this.columnUPC = base.Columns["UPC"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnItemID);
				this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnItemCode);
				this.columnItemDescription = new global::System.Data.DataColumn("ItemDescription", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnItemDescription);
				this.columnItemType = new global::System.Data.DataColumn("ItemType", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnItemType);
				this.columnItemCustomerID = new global::System.Data.DataColumn("ItemCustomerID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnItemCustomerID);
				this.columnItemDefaultMachine = new global::System.Data.DataColumn("ItemDefaultMachine", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnItemDefaultMachine);
				this.columnItemPicture = new global::System.Data.DataColumn("ItemPicture", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnItemPicture);
				this.columndblPrice = new global::System.Data.DataColumn("dblPrice", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndblPrice);
				this.columnsngRebate = new global::System.Data.DataColumn("sngRebate", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsngRebate);
				this.columnstrUnitOfMeasure = new global::System.Data.DataColumn("strUnitOfMeasure", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrUnitOfMeasure);
				this.columnintQtyPerUnit = new global::System.Data.DataColumn("intQtyPerUnit", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnintQtyPerUnit);
				this.columnstrEnteredBy = new global::System.Data.DataColumn("strEnteredBy", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrEnteredBy);
				this.columndtmEnteredOn = new global::System.Data.DataColumn("dtmEnteredOn", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndtmEnteredOn);
				this.columndblFreight = new global::System.Data.DataColumn("dblFreight", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndblFreight);
				this.columndblFilm = new global::System.Data.DataColumn("dblFilm", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndblFilm);
				this.columndblBoxes = new global::System.Data.DataColumn("dblBoxes", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndblBoxes);
				this.columndblStretchWrap = new global::System.Data.DataColumn("dblStretchWrap", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndblStretchWrap);
				this.columndblPallets = new global::System.Data.DataColumn("dblPallets", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndblPallets);
				this.columndblOther1 = new global::System.Data.DataColumn("dblOther1", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndblOther1);
				this.columndblOther2 = new global::System.Data.DataColumn("dblOther2", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndblOther2);
				this.columndblOther3 = new global::System.Data.DataColumn("dblOther3", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndblOther3);
				this.columndblOther4 = new global::System.Data.DataColumn("dblOther4", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndblOther4);
				this.columndblOther5 = new global::System.Data.DataColumn("dblOther5", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndblOther5);
				this.columnintUnitsPerCase = new global::System.Data.DataColumn("intUnitsPerCase", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnintUnitsPerCase);
				this.columnintCasesPerPallet = new global::System.Data.DataColumn("intCasesPerPallet", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnintCasesPerPallet);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.columnsngQuantityOnHand = new global::System.Data.DataColumn("sngQuantityOnHand", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsngQuantityOnHand);
				this.columnintUnitsPerPallet = new global::System.Data.DataColumn("intUnitsPerPallet", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnintUnitsPerPallet);
				this.columnCaseGrossWeight = new global::System.Data.DataColumn("CaseGrossWeight", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCaseGrossWeight);
				this.columnPackageCode = new global::System.Data.DataColumn("PackageCode", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnPackageCode);
				this.columnCaseCode = new global::System.Data.DataColumn("CaseCode", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCaseCode);
				this.columnRequiredWeight = new global::System.Data.DataColumn("RequiredWeight", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnRequiredWeight);
				this.columnMAV = new global::System.Data.DataColumn("MAV", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnMAV);
				this.columnCasesPerLayer = new global::System.Data.DataColumn("CasesPerLayer", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCasesPerLayer);
				this.columnLayersPerPallet = new global::System.Data.DataColumn("LayersPerPallet", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnLayersPerPallet);
				this.columnShelfLife = new global::System.Data.DataColumn("ShelfLife", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShelfLife);
				this.columnInstructions = new global::System.Data.DataColumn("Instructions", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnInstructions);
				this.columnPalletPattern = new global::System.Data.DataColumn("PalletPattern", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnPalletPattern);
				this.columnInactive = new global::System.Data.DataColumn("Inactive", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnInactive);
				this.columnPackers = new global::System.Data.DataColumn("Packers", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnPackers);
				this.columnItemProdStandard = new global::System.Data.DataColumn("ItemProdStandard", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnItemProdStandard);
				this.columnUPC = new global::System.Data.DataColumn("UPC", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnUPC);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnItemID}, true));
				this.columnItemID.AutoIncrement = true;
				this.columnItemID.AllowDBNull = false;
				this.columnItemID.ReadOnly = true;
				this.columnItemID.Unique = true;
				this.columnItemCode.MaxLength = 50;
				this.columnItemDescription.MaxLength = 1073741823;
				this.columnItemType.MaxLength = 50;
				this.columnstrUnitOfMeasure.MaxLength = 50;
				this.columnstrEnteredBy.MaxLength = 50;
				this.columnts.ReadOnly = true;
				this.columnPackageCode.MaxLength = 400;
				this.columnCaseCode.MaxLength = 400;
				this.columnRequiredWeight.MaxLength = 50;
				this.columnMAV.MaxLength = 50;
				this.columnCasesPerLayer.MaxLength = 50;
				this.columnLayersPerPallet.MaxLength = 50;
				this.columnShelfLife.MaxLength = 50;
				this.columnInstructions.MaxLength = 400;
				this.columnPalletPattern.MaxLength = 150;
				this.columnUPC.MaxLength = 50;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow NewItemsRow()
			{
				return (ItemsRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new ItemsRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(ItemsRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.ItemsRowChanged) != null)
				{
					ItemsRowChanged(this, new ItemsRowChangeEvent((ItemsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.ItemsRowChanging) != null)
				{
					ItemsRowChanging(this, new ItemsRowChangeEvent((ItemsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.ItemsRowDeleted) != null)
				{
					ItemsRowDeleted(this, new ItemsRowChangeEvent((ItemsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.ItemsRowDeleting) != null)
				{
					ItemsRowDeleting(this, new ItemsRowChangeEvent((ItemsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveItemsRow(ItemsRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "ItemsDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class ReceivingDetailsDataTable : System.Data.TypedTableBase<ReceivingDetailsRow>
		{
			private global::System.Data.DataColumn columnReceivDetID;

			private global::System.Data.DataColumn columnReceivMainID;

			private global::System.Data.DataColumn columnReceivDetItemID;

			private global::System.Data.DataColumn columnReceivDetLot;

			private global::System.Data.DataColumn columnReceivDetQty;

			private global::System.Data.DataColumn columnintUnits;

			private global::System.Data.DataColumn columnts;

			private global::System.Data.DataColumn columnExpirationDate;

			private global::System.Data.DataColumn columnReceivDetLPN;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingDetailsDataTable() : base()
			{
				this.TableName = "ReceivingDetails";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ReceivingDetailsDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected ReceivingDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReceivDetIDColumn
			{
				get
				{
					return this.columnReceivDetID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReceivMainIDColumn
			{
				get
				{
					return this.columnReceivMainID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReceivDetItemIDColumn
			{
				get
				{
					return this.columnReceivDetItemID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReceivDetLotColumn
			{
				get
				{
					return this.columnReceivDetLot;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReceivDetQtyColumn
			{
				get
				{
					return this.columnReceivDetQty;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn intUnitsColumn
			{
				get
				{
					return this.columnintUnits;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ExpirationDateColumn
			{
				get
				{
					return this.columnExpirationDate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReceivDetLPNColumn
			{
				get
				{
					return this.columnReceivDetLPN;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingDetailsRow this[int index]
			{
				get
				{
					return (ReceivingDetailsRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReceivingDetailsRowChangeEventHandler ReceivingDetailsRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReceivingDetailsRowChangeEventHandler ReceivingDetailsRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReceivingDetailsRowChangeEventHandler ReceivingDetailsRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReceivingDetailsRowChangeEventHandler ReceivingDetailsRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddReceivingDetailsRow(ReceivingDetailsRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingDetailsRow AddReceivingDetailsRow(ReceivingsRow parentReceivingsRowByFK_tblReceivDet_tblReceivMain, ItemsRow parentItemsRowByFK_tblItems_tblReceivDet, string ReceivDetLot, int ReceivDetQty, int intUnits, byte[] ts, DateTime ExpirationDate, int ReceivDetLPN)
			{
				ReceivingDetailsRow rowReceivingDetailsRow = (ReceivingDetailsRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, null, null, ReceivDetLot, ReceivDetQty, intUnits, ts, ExpirationDate, ReceivDetLPN};
				if ((parentReceivingsRowByFK_tblReceivDet_tblReceivMain) != null)
				{
					columnValuesArray[1] = parentReceivingsRowByFK_tblReceivDet_tblReceivMain[0];
				}
				if ((parentItemsRowByFK_tblItems_tblReceivDet) != null)
				{
					columnValuesArray[2] = parentItemsRowByFK_tblItems_tblReceivDet[0];
				}
				rowReceivingDetailsRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowReceivingDetailsRow);
				return rowReceivingDetailsRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingDetailsRow FindByReceivDetID(int ReceivDetID)
			{
				return (ReceivingDetailsRow)this.Rows.Find(new object[] {ReceivDetID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				ReceivingDetailsDataTable cln = (ReceivingDetailsDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new ReceivingDetailsDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnReceivDetID = base.Columns["ReceivDetID"];
				this.columnReceivMainID = base.Columns["ReceivMainID"];
				this.columnReceivDetItemID = base.Columns["ReceivDetItemID"];
				this.columnReceivDetLot = base.Columns["ReceivDetLot"];
				this.columnReceivDetQty = base.Columns["ReceivDetQty"];
				this.columnintUnits = base.Columns["intUnits"];
				this.columnts = base.Columns["ts"];
				this.columnExpirationDate = base.Columns["ExpirationDate"];
				this.columnReceivDetLPN = base.Columns["ReceivDetLPN"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnReceivDetID = new global::System.Data.DataColumn("ReceivDetID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReceivDetID);
				this.columnReceivMainID = new global::System.Data.DataColumn("ReceivMainID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReceivMainID);
				this.columnReceivDetItemID = new global::System.Data.DataColumn("ReceivDetItemID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReceivDetItemID);
				this.columnReceivDetLot = new global::System.Data.DataColumn("ReceivDetLot", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReceivDetLot);
				this.columnReceivDetQty = new global::System.Data.DataColumn("ReceivDetQty", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReceivDetQty);
				this.columnintUnits = new global::System.Data.DataColumn("intUnits", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnintUnits);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnExpirationDate);
				this.columnReceivDetLPN = new global::System.Data.DataColumn("ReceivDetLPN", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReceivDetLPN);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnReceivDetID}, true));
				this.columnReceivDetID.AutoIncrement = true;
				this.columnReceivDetID.AutoIncrementSeed = -1;
				this.columnReceivDetID.AutoIncrementStep = -1;
				this.columnReceivDetID.AllowDBNull = false;
				this.columnReceivDetID.ReadOnly = true;
				this.columnReceivDetID.Unique = true;
				this.columnReceivDetLot.MaxLength = 150;
				this.columnts.ReadOnly = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingDetailsRow NewReceivingDetailsRow()
			{
				return (ReceivingDetailsRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new ReceivingDetailsRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(ReceivingDetailsRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.ReceivingDetailsRowChanged) != null)
				{
					ReceivingDetailsRowChanged(this, new ReceivingDetailsRowChangeEvent((ReceivingDetailsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.ReceivingDetailsRowChanging) != null)
				{
					ReceivingDetailsRowChanging(this, new ReceivingDetailsRowChangeEvent((ReceivingDetailsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.ReceivingDetailsRowDeleted) != null)
				{
					ReceivingDetailsRowDeleted(this, new ReceivingDetailsRowChangeEvent((ReceivingDetailsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.ReceivingDetailsRowDeleting) != null)
				{
					ReceivingDetailsRowDeleting(this, new ReceivingDetailsRowChangeEvent((ReceivingDetailsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveReceivingDetailsRow(ReceivingDetailsRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "ReceivingDetailsDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class ReceivingsDataTable : System.Data.TypedTableBase<ReceivingsRow>
		{
			private global::System.Data.DataColumn columnReceivID;

			private global::System.Data.DataColumn columnReceivDate;

			private global::System.Data.DataColumn columnReceivCarrierID;

			private global::System.Data.DataColumn columnReceivCustID;

			private global::System.Data.DataColumn columnReceivBOL;

			private global::System.Data.DataColumn columnstrEnteredBy;

			private global::System.Data.DataColumn columndtmEnteredOn;

			private global::System.Data.DataColumn columnstrVendor;

			private global::System.Data.DataColumn columnsngSkits;

			private global::System.Data.DataColumn columnsngTotalPallets;

			private global::System.Data.DataColumn columnstrPO;

			private global::System.Data.DataColumn columnintShiftID;

			private global::System.Data.DataColumn columnstrTrailer;

			private global::System.Data.DataColumn columnstrSeal;

			private global::System.Data.DataColumn columnts;

			private global::System.Data.DataColumn columnNotes;

			private global::System.Data.DataColumn columnUnloadedBy;

			private global::System.Data.DataColumn columnCheckedBy;

			private global::System.Data.DataColumn columnPhysicalCondition;

			private global::System.Data.DataColumn columnLoadCondition;

			private global::System.Data.DataColumn columnStartTime;

			private global::System.Data.DataColumn columnFinishTime;

			private global::System.Data.DataColumn columnTemparature;

			private global::System.Data.DataColumn columnWheelsChocked;

			private global::System.Data.DataColumn columnForeignSubstance;

			private global::System.Data.DataColumn columnInsectActivity;

			private global::System.Data.DataColumn columnCorrectPallets;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingsDataTable() : base()
			{
				this.TableName = "Receivings";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ReceivingsDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected ReceivingsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReceivIDColumn
			{
				get
				{
					return this.columnReceivID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReceivDateColumn
			{
				get
				{
					return this.columnReceivDate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReceivCarrierIDColumn
			{
				get
				{
					return this.columnReceivCarrierID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReceivCustIDColumn
			{
				get
				{
					return this.columnReceivCustID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReceivBOLColumn
			{
				get
				{
					return this.columnReceivBOL;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strEnteredByColumn
			{
				get
				{
					return this.columnstrEnteredBy;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dtmEnteredOnColumn
			{
				get
				{
					return this.columndtmEnteredOn;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strVendorColumn
			{
				get
				{
					return this.columnstrVendor;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn sngSkitsColumn
			{
				get
				{
					return this.columnsngSkits;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn sngTotalPalletsColumn
			{
				get
				{
					return this.columnsngTotalPallets;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strPOColumn
			{
				get
				{
					return this.columnstrPO;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn intShiftIDColumn
			{
				get
				{
					return this.columnintShiftID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strTrailerColumn
			{
				get
				{
					return this.columnstrTrailer;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strSealColumn
			{
				get
				{
					return this.columnstrSeal;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn NotesColumn
			{
				get
				{
					return this.columnNotes;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn UnloadedByColumn
			{
				get
				{
					return this.columnUnloadedBy;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CheckedByColumn
			{
				get
				{
					return this.columnCheckedBy;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn PhysicalConditionColumn
			{
				get
				{
					return this.columnPhysicalCondition;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn LoadConditionColumn
			{
				get
				{
					return this.columnLoadCondition;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn StartTimeColumn
			{
				get
				{
					return this.columnStartTime;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn FinishTimeColumn
			{
				get
				{
					return this.columnFinishTime;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn TemparatureColumn
			{
				get
				{
					return this.columnTemparature;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn WheelsChockedColumn
			{
				get
				{
					return this.columnWheelsChocked;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ForeignSubstanceColumn
			{
				get
				{
					return this.columnForeignSubstance;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn InsectActivityColumn
			{
				get
				{
					return this.columnInsectActivity;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CorrectPalletsColumn
			{
				get
				{
					return this.columnCorrectPallets;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingsRow this[int index]
			{
				get
				{
					return (ReceivingsRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReceivingsRowChangeEventHandler ReceivingsRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReceivingsRowChangeEventHandler ReceivingsRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReceivingsRowChangeEventHandler ReceivingsRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReceivingsRowChangeEventHandler ReceivingsRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddReceivingsRow(ReceivingsRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingsRow AddReceivingsRow(int ReceivID, DateTime ReceivDate, CarriersRow parentCarriersRowByFK_tblReceivMain_tblCarriers, CustomersRow parentCustomersRowByFK_tblReceivMain_tblCustomers, string ReceivBOL, string strEnteredBy, DateTime dtmEnteredOn, int strVendor, float sngSkits, float sngTotalPallets, string strPO, ShiftsRow parentShiftsRowByFK_tblReceivMain_intShiftID, string strTrailer, string strSeal, byte[] ts, string Notes, int UnloadedBy, int CheckedBy, int PhysicalCondition, int LoadCondition, DateTime StartTime, DateTime FinishTime, double Temparature, int WheelsChocked, int ForeignSubstance, int InsectActivity, int CorrectPallets)
			{
				ReceivingsRow rowReceivingsRow = (ReceivingsRow)this.NewRow();
				object[] columnValuesArray = new object[] {ReceivID, ReceivDate, null, null, ReceivBOL, strEnteredBy, dtmEnteredOn, strVendor, sngSkits, sngTotalPallets, strPO, null, strTrailer, strSeal, ts, Notes, UnloadedBy, CheckedBy, PhysicalCondition, LoadCondition, StartTime, FinishTime, Temparature, WheelsChocked, ForeignSubstance, InsectActivity, CorrectPallets};
				if ((parentCarriersRowByFK_tblReceivMain_tblCarriers) != null)
				{
					columnValuesArray[2] = parentCarriersRowByFK_tblReceivMain_tblCarriers[0];
				}
				if ((parentCustomersRowByFK_tblReceivMain_tblCustomers) != null)
				{
					columnValuesArray[3] = parentCustomersRowByFK_tblReceivMain_tblCustomers[0];
				}
				if ((parentShiftsRowByFK_tblReceivMain_intShiftID) != null)
				{
					columnValuesArray[11] = parentShiftsRowByFK_tblReceivMain_intShiftID[0];
				}
				rowReceivingsRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowReceivingsRow);
				return rowReceivingsRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingsRow FindByReceivID(int ReceivID)
			{
				return (ReceivingsRow)this.Rows.Find(new object[] {ReceivID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				ReceivingsDataTable cln = (ReceivingsDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new ReceivingsDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnReceivID = base.Columns["ReceivID"];
				this.columnReceivDate = base.Columns["ReceivDate"];
				this.columnReceivCarrierID = base.Columns["ReceivCarrierID"];
				this.columnReceivCustID = base.Columns["ReceivCustID"];
				this.columnReceivBOL = base.Columns["ReceivBOL"];
				this.columnstrEnteredBy = base.Columns["strEnteredBy"];
				this.columndtmEnteredOn = base.Columns["dtmEnteredOn"];
				this.columnstrVendor = base.Columns["strVendor"];
				this.columnsngSkits = base.Columns["sngSkits"];
				this.columnsngTotalPallets = base.Columns["sngTotalPallets"];
				this.columnstrPO = base.Columns["strPO"];
				this.columnintShiftID = base.Columns["intShiftID"];
				this.columnstrTrailer = base.Columns["strTrailer"];
				this.columnstrSeal = base.Columns["strSeal"];
				this.columnts = base.Columns["ts"];
				this.columnNotes = base.Columns["Notes"];
				this.columnUnloadedBy = base.Columns["UnloadedBy"];
				this.columnCheckedBy = base.Columns["CheckedBy"];
				this.columnPhysicalCondition = base.Columns["PhysicalCondition"];
				this.columnLoadCondition = base.Columns["LoadCondition"];
				this.columnStartTime = base.Columns["StartTime"];
				this.columnFinishTime = base.Columns["FinishTime"];
				this.columnTemparature = base.Columns["Temparature"];
				this.columnWheelsChocked = base.Columns["WheelsChocked"];
				this.columnForeignSubstance = base.Columns["ForeignSubstance"];
				this.columnInsectActivity = base.Columns["InsectActivity"];
				this.columnCorrectPallets = base.Columns["CorrectPallets"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnReceivID = new global::System.Data.DataColumn("ReceivID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReceivID);
				this.columnReceivDate = new global::System.Data.DataColumn("ReceivDate", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReceivDate);
				this.columnReceivCarrierID = new global::System.Data.DataColumn("ReceivCarrierID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReceivCarrierID);
				this.columnReceivCustID = new global::System.Data.DataColumn("ReceivCustID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReceivCustID);
				this.columnReceivBOL = new global::System.Data.DataColumn("ReceivBOL", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReceivBOL);
				this.columnstrEnteredBy = new global::System.Data.DataColumn("strEnteredBy", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrEnteredBy);
				this.columndtmEnteredOn = new global::System.Data.DataColumn("dtmEnteredOn", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndtmEnteredOn);
				this.columnstrVendor = new global::System.Data.DataColumn("strVendor", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrVendor);
				this.columnsngSkits = new global::System.Data.DataColumn("sngSkits", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsngSkits);
				this.columnsngTotalPallets = new global::System.Data.DataColumn("sngTotalPallets", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsngTotalPallets);
				this.columnstrPO = new global::System.Data.DataColumn("strPO", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrPO);
				this.columnintShiftID = new global::System.Data.DataColumn("intShiftID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnintShiftID);
				this.columnstrTrailer = new global::System.Data.DataColumn("strTrailer", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrTrailer);
				this.columnstrSeal = new global::System.Data.DataColumn("strSeal", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrSeal);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnNotes);
				this.columnUnloadedBy = new global::System.Data.DataColumn("UnloadedBy", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnUnloadedBy);
				this.columnCheckedBy = new global::System.Data.DataColumn("CheckedBy", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCheckedBy);
				this.columnPhysicalCondition = new global::System.Data.DataColumn("PhysicalCondition", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnPhysicalCondition);
				this.columnLoadCondition = new global::System.Data.DataColumn("LoadCondition", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnLoadCondition);
				this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnStartTime);
				this.columnFinishTime = new global::System.Data.DataColumn("FinishTime", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnFinishTime);
				this.columnTemparature = new global::System.Data.DataColumn("Temparature", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnTemparature);
				this.columnWheelsChocked = new global::System.Data.DataColumn("WheelsChocked", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnWheelsChocked);
				this.columnForeignSubstance = new global::System.Data.DataColumn("ForeignSubstance", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnForeignSubstance);
				this.columnInsectActivity = new global::System.Data.DataColumn("InsectActivity", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnInsectActivity);
				this.columnCorrectPallets = new global::System.Data.DataColumn("CorrectPallets", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCorrectPallets);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnReceivID}, true));
				this.columnReceivID.AllowDBNull = false;
				this.columnReceivID.ReadOnly = true;
				this.columnReceivID.Unique = true;
				this.columnReceivCarrierID.DefaultValue = (int)-1;
				this.columnReceivBOL.AllowDBNull = false;
				this.columnReceivBOL.MaxLength = 50;
				this.columnstrEnteredBy.MaxLength = 50;
				this.columnstrPO.MaxLength = 50;
				this.columnintShiftID.DefaultValue = (int)-1;
				this.columnstrTrailer.MaxLength = 50;
				this.columnstrSeal.MaxLength = 50;
				this.columnts.ReadOnly = true;
				this.columnNotes.MaxLength = 255;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingsRow NewReceivingsRow()
			{
				return (ReceivingsRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new ReceivingsRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(ReceivingsRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.ReceivingsRowChanged) != null)
				{
					ReceivingsRowChanged(this, new ReceivingsRowChangeEvent((ReceivingsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.ReceivingsRowChanging) != null)
				{
					ReceivingsRowChanging(this, new ReceivingsRowChangeEvent((ReceivingsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.ReceivingsRowDeleted) != null)
				{
					ReceivingsRowDeleted(this, new ReceivingsRowChangeEvent((ReceivingsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.ReceivingsRowDeleting) != null)
				{
					ReceivingsRowDeleting(this, new ReceivingsRowChangeEvent((ReceivingsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveReceivingsRow(ReceivingsRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "ReceivingsDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class ProductionDataTable : System.Data.TypedTableBase<ProductionRow>
		{
			private global::System.Data.DataColumn columnProdMainID;

			private global::System.Data.DataColumn columnProdMainDate;

			private global::System.Data.DataColumn columnProdMainShift;

			private global::System.Data.DataColumn columnProdMainItemID;

			private global::System.Data.DataColumn columnProdMainLot;

			private global::System.Data.DataColumn columnProdMainQuantity;

			private global::System.Data.DataColumn columnProdMainMachineLine;

			private global::System.Data.DataColumn columnProdMainTimeStart;

			private global::System.Data.DataColumn columnProdMainTimeStop;

			private global::System.Data.DataColumn columnProdMainPackers;

			private global::System.Data.DataColumn columnProdMainOperators;

			private global::System.Data.DataColumn columnProdMainSupers;

			private global::System.Data.DataColumn columnintMachineSpeed;

			private global::System.Data.DataColumn columnstrEnteredBy;

			private global::System.Data.DataColumn columndtmEnteredOn;

			private global::System.Data.DataColumn columnts;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ProductionDataTable() : base()
			{
				this.TableName = "Production";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ProductionDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected ProductionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ProdMainIDColumn
			{
				get
				{
					return this.columnProdMainID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ProdMainDateColumn
			{
				get
				{
					return this.columnProdMainDate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ProdMainShiftColumn
			{
				get
				{
					return this.columnProdMainShift;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ProdMainItemIDColumn
			{
				get
				{
					return this.columnProdMainItemID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ProdMainLotColumn
			{
				get
				{
					return this.columnProdMainLot;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ProdMainQuantityColumn
			{
				get
				{
					return this.columnProdMainQuantity;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ProdMainMachineLineColumn
			{
				get
				{
					return this.columnProdMainMachineLine;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ProdMainTimeStartColumn
			{
				get
				{
					return this.columnProdMainTimeStart;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ProdMainTimeStopColumn
			{
				get
				{
					return this.columnProdMainTimeStop;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ProdMainPackersColumn
			{
				get
				{
					return this.columnProdMainPackers;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ProdMainOperatorsColumn
			{
				get
				{
					return this.columnProdMainOperators;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ProdMainSupersColumn
			{
				get
				{
					return this.columnProdMainSupers;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn intMachineSpeedColumn
			{
				get
				{
					return this.columnintMachineSpeed;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strEnteredByColumn
			{
				get
				{
					return this.columnstrEnteredBy;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dtmEnteredOnColumn
			{
				get
				{
					return this.columndtmEnteredOn;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ProductionRow this[int index]
			{
				get
				{
					return (ProductionRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ProductionRowChangeEventHandler ProductionRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ProductionRowChangeEventHandler ProductionRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ProductionRowChangeEventHandler ProductionRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ProductionRowChangeEventHandler ProductionRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddProductionRow(ProductionRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ProductionRow AddProductionRow(DateTime ProdMainDate, ShiftsRow parentShiftsRowByFK_tblProdMain_tblShifts, ItemsRow parentItemsRowByFK_tblItems_tblProdMain, string ProdMainLot, float ProdMainQuantity, MachineLinesRow parentMachineLinesRowByFK_tblProdMain_tblMachineLine, DateTime ProdMainTimeStart, DateTime ProdMainTimeStop, float ProdMainPackers, float ProdMainOperators, float ProdMainSupers, int intMachineSpeed, string strEnteredBy, DateTime dtmEnteredOn, byte[] ts)
			{
				ProductionRow rowProductionRow = (ProductionRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, ProdMainDate, null, null, ProdMainLot, ProdMainQuantity, null, ProdMainTimeStart, ProdMainTimeStop, ProdMainPackers, ProdMainOperators, ProdMainSupers, intMachineSpeed, strEnteredBy, dtmEnteredOn, ts};
				if ((parentShiftsRowByFK_tblProdMain_tblShifts) != null)
				{
					columnValuesArray[2] = parentShiftsRowByFK_tblProdMain_tblShifts[0];
				}
				if ((parentItemsRowByFK_tblItems_tblProdMain) != null)
				{
					columnValuesArray[3] = parentItemsRowByFK_tblItems_tblProdMain[0];
				}
				if ((parentMachineLinesRowByFK_tblProdMain_tblMachineLine) != null)
				{
					columnValuesArray[6] = parentMachineLinesRowByFK_tblProdMain_tblMachineLine[0];
				}
				rowProductionRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowProductionRow);
				return rowProductionRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ProductionRow FindByProdMainID(int ProdMainID)
			{
				return (ProductionRow)this.Rows.Find(new object[] {ProdMainID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				ProductionDataTable cln = (ProductionDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new ProductionDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnProdMainID = base.Columns["ProdMainID"];
				this.columnProdMainDate = base.Columns["ProdMainDate"];
				this.columnProdMainShift = base.Columns["ProdMainShift"];
				this.columnProdMainItemID = base.Columns["ProdMainItemID"];
				this.columnProdMainLot = base.Columns["ProdMainLot"];
				this.columnProdMainQuantity = base.Columns["ProdMainQuantity"];
				this.columnProdMainMachineLine = base.Columns["ProdMainMachineLine"];
				this.columnProdMainTimeStart = base.Columns["ProdMainTimeStart"];
				this.columnProdMainTimeStop = base.Columns["ProdMainTimeStop"];
				this.columnProdMainPackers = base.Columns["ProdMainPackers"];
				this.columnProdMainOperators = base.Columns["ProdMainOperators"];
				this.columnProdMainSupers = base.Columns["ProdMainSupers"];
				this.columnintMachineSpeed = base.Columns["intMachineSpeed"];
				this.columnstrEnteredBy = base.Columns["strEnteredBy"];
				this.columndtmEnteredOn = base.Columns["dtmEnteredOn"];
				this.columnts = base.Columns["ts"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnProdMainID = new global::System.Data.DataColumn("ProdMainID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnProdMainID);
				this.columnProdMainDate = new global::System.Data.DataColumn("ProdMainDate", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnProdMainDate);
				this.columnProdMainShift = new global::System.Data.DataColumn("ProdMainShift", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnProdMainShift);
				this.columnProdMainItemID = new global::System.Data.DataColumn("ProdMainItemID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnProdMainItemID);
				this.columnProdMainLot = new global::System.Data.DataColumn("ProdMainLot", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnProdMainLot);
				this.columnProdMainQuantity = new global::System.Data.DataColumn("ProdMainQuantity", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnProdMainQuantity);
				this.columnProdMainMachineLine = new global::System.Data.DataColumn("ProdMainMachineLine", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnProdMainMachineLine);
				this.columnProdMainTimeStart = new global::System.Data.DataColumn("ProdMainTimeStart", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnProdMainTimeStart);
				this.columnProdMainTimeStop = new global::System.Data.DataColumn("ProdMainTimeStop", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnProdMainTimeStop);
				this.columnProdMainPackers = new global::System.Data.DataColumn("ProdMainPackers", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnProdMainPackers);
				this.columnProdMainOperators = new global::System.Data.DataColumn("ProdMainOperators", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnProdMainOperators);
				this.columnProdMainSupers = new global::System.Data.DataColumn("ProdMainSupers", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnProdMainSupers);
				this.columnintMachineSpeed = new global::System.Data.DataColumn("intMachineSpeed", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnintMachineSpeed);
				this.columnstrEnteredBy = new global::System.Data.DataColumn("strEnteredBy", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrEnteredBy);
				this.columndtmEnteredOn = new global::System.Data.DataColumn("dtmEnteredOn", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndtmEnteredOn);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnProdMainID}, true));
				this.columnProdMainID.AutoIncrement = true;
				this.columnProdMainID.AllowDBNull = false;
				this.columnProdMainID.ReadOnly = true;
				this.columnProdMainID.Unique = true;
				this.columnProdMainLot.MaxLength = 150;
				this.columnstrEnteredBy.MaxLength = 50;
				this.columnts.ReadOnly = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ProductionRow NewProductionRow()
			{
				return (ProductionRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new ProductionRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(ProductionRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.ProductionRowChanged) != null)
				{
					ProductionRowChanged(this, new ProductionRowChangeEvent((ProductionRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.ProductionRowChanging) != null)
				{
					ProductionRowChanging(this, new ProductionRowChangeEvent((ProductionRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.ProductionRowDeleted) != null)
				{
					ProductionRowDeleted(this, new ProductionRowChangeEvent((ProductionRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.ProductionRowDeleting) != null)
				{
					ProductionRowDeleting(this, new ProductionRowChangeEvent((ProductionRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveProductionRow(ProductionRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "ProductionDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class ShippingsDataTable : System.Data.TypedTableBase<ShippingsRow>
		{
			private global::System.Data.DataColumn columnShipMainID;

			private global::System.Data.DataColumn columnShipMainDate;

			private global::System.Data.DataColumn columnShipMainCarrierID;

			private global::System.Data.DataColumn columnShipMainCustID;

			private global::System.Data.DataColumn columnstrEnteredBy;

			private global::System.Data.DataColumn columndtmEnteredOn;

			private global::System.Data.DataColumn columnstrPO;

			private global::System.Data.DataColumn columnstrTrailer;

			private global::System.Data.DataColumn columnsngSkits;

			private global::System.Data.DataColumn columnsngTotalPallets;

			private global::System.Data.DataColumn columnstrSeal;

			private global::System.Data.DataColumn columnstrRoute;

			private global::System.Data.DataColumn columnstrDeliveryNote;

			private global::System.Data.DataColumn columnts;

			private global::System.Data.DataColumn columnintDestination;

			private global::System.Data.DataColumn columnTotalGrossWeight;

			private global::System.Data.DataColumn columnShipper;

			private global::System.Data.DataColumn columnComments;

			private global::System.Data.DataColumn columnShift;

			private global::System.Data.DataColumn columnFreight;

			private global::System.Data.DataColumn columnDeliveryNoteNumber;

			private global::System.Data.DataColumn columnLoadedBy;

			private global::System.Data.DataColumn columnCheckedBy;

			private global::System.Data.DataColumn columnPhysicalCondition;

			private global::System.Data.DataColumn columnLoadCondition;

			private global::System.Data.DataColumn columnStartTime;

			private global::System.Data.DataColumn columnFinishTime;

			private global::System.Data.DataColumn columnTemparature;

			private global::System.Data.DataColumn columnShipMainBOL;

			private global::System.Data.DataColumn columnCorrectPallets;

			private global::System.Data.DataColumn columnInsectActivity;

			private global::System.Data.DataColumn columnForeignSubstance;

			private global::System.Data.DataColumn columnWheelsChocked;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingsDataTable() : base()
			{
				this.TableName = "Shippings";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
				SubscribeToEvents();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ShippingsDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
				SubscribeToEvents();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected ShippingsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
				SubscribeToEvents();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShipMainIDColumn
			{
				get
				{
					return this.columnShipMainID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShipMainDateColumn
			{
				get
				{
					return this.columnShipMainDate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShipMainCarrierIDColumn
			{
				get
				{
					return this.columnShipMainCarrierID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShipMainCustIDColumn
			{
				get
				{
					return this.columnShipMainCustID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strEnteredByColumn
			{
				get
				{
					return this.columnstrEnteredBy;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dtmEnteredOnColumn
			{
				get
				{
					return this.columndtmEnteredOn;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strPOColumn
			{
				get
				{
					return this.columnstrPO;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strTrailerColumn
			{
				get
				{
					return this.columnstrTrailer;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn sngSkitsColumn
			{
				get
				{
					return this.columnsngSkits;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn sngTotalPalletsColumn
			{
				get
				{
					return this.columnsngTotalPallets;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strSealColumn
			{
				get
				{
					return this.columnstrSeal;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strRouteColumn
			{
				get
				{
					return this.columnstrRoute;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strDeliveryNoteColumn
			{
				get
				{
					return this.columnstrDeliveryNote;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn intDestinationColumn
			{
				get
				{
					return this.columnintDestination;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn TotalGrossWeightColumn
			{
				get
				{
					return this.columnTotalGrossWeight;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShipperColumn
			{
				get
				{
					return this.columnShipper;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CommentsColumn
			{
				get
				{
					return this.columnComments;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShiftColumn
			{
				get
				{
					return this.columnShift;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn FreightColumn
			{
				get
				{
					return this.columnFreight;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn DeliveryNoteNumberColumn
			{
				get
				{
					return this.columnDeliveryNoteNumber;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn LoadedByColumn
			{
				get
				{
					return this.columnLoadedBy;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CheckedByColumn
			{
				get
				{
					return this.columnCheckedBy;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn PhysicalConditionColumn
			{
				get
				{
					return this.columnPhysicalCondition;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn LoadConditionColumn
			{
				get
				{
					return this.columnLoadCondition;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn StartTimeColumn
			{
				get
				{
					return this.columnStartTime;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn FinishTimeColumn
			{
				get
				{
					return this.columnFinishTime;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn TemparatureColumn
			{
				get
				{
					return this.columnTemparature;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShipMainBOLColumn
			{
				get
				{
					return this.columnShipMainBOL;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CorrectPalletsColumn
			{
				get
				{
					return this.columnCorrectPallets;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn InsectActivityColumn
			{
				get
				{
					return this.columnInsectActivity;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ForeignSubstanceColumn
			{
				get
				{
					return this.columnForeignSubstance;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn WheelsChockedColumn
			{
				get
				{
					return this.columnWheelsChocked;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingsRow this[int index]
			{
				get
				{
					return (ShippingsRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingsRowChangeEventHandler ShippingsRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingsRowChangeEventHandler ShippingsRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingsRowChangeEventHandler ShippingsRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingsRowChangeEventHandler ShippingsRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddShippingsRow(ShippingsRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingsRow AddShippingsRow(DateTime ShipMainDate, CarriersRow parentCarriersRowByFK_tblShipMain_tblCarrier, CustomersRow parentCustomersRowByFK_tblShipMain_tblCustomers, string strEnteredBy, DateTime dtmEnteredOn, string strPO, string strTrailer, float sngSkits, float sngTotalPallets, string strSeal, string strRoute, string strDeliveryNote, byte[] ts, ShippingAddressesRow parentShippingAddressesRowByFK_tblShipMain_intDestination, double TotalGrossWeight, bool Shipper, string Comments, ShiftsRow parentShiftsRowByFK_tblShipMain_Shift, bool Freight, string DeliveryNoteNumber, int LoadedBy, int CheckedBy, int PhysicalCondition, int LoadCondition, DateTime StartTime, DateTime FinishTime, double Temparature, int ShipMainBOL, int CorrectPallets, int InsectActivity, int ForeignSubstance, int WheelsChocked)
			{
				ShippingsRow rowShippingsRow = (ShippingsRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, ShipMainDate, null, null, strEnteredBy, dtmEnteredOn, strPO, strTrailer, sngSkits, sngTotalPallets, strSeal, strRoute, strDeliveryNote, ts, null, TotalGrossWeight, Shipper, Comments, null, Freight, DeliveryNoteNumber, LoadedBy, CheckedBy, PhysicalCondition, LoadCondition, StartTime, FinishTime, Temparature, ShipMainBOL, CorrectPallets, InsectActivity, ForeignSubstance, WheelsChocked};
				if ((parentCarriersRowByFK_tblShipMain_tblCarrier) != null)
				{
					columnValuesArray[2] = parentCarriersRowByFK_tblShipMain_tblCarrier[0];
				}
				if ((parentCustomersRowByFK_tblShipMain_tblCustomers) != null)
				{
					columnValuesArray[3] = parentCustomersRowByFK_tblShipMain_tblCustomers[0];
				}
				if ((parentShippingAddressesRowByFK_tblShipMain_intDestination) != null)
				{
					columnValuesArray[14] = parentShippingAddressesRowByFK_tblShipMain_intDestination[0];
				}
				if ((parentShiftsRowByFK_tblShipMain_Shift) != null)
				{
					columnValuesArray[18] = parentShiftsRowByFK_tblShipMain_Shift[0];
				}
				rowShippingsRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowShippingsRow);
				return rowShippingsRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingsRow FindByShipMainID(int ShipMainID)
			{
				return (ShippingsRow)this.Rows.Find(new object[] {ShipMainID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				ShippingsDataTable cln = (ShippingsDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new ShippingsDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnShipMainID = base.Columns["ShipMainID"];
				this.columnShipMainDate = base.Columns["ShipMainDate"];
				this.columnShipMainCarrierID = base.Columns["ShipMainCarrierID"];
				this.columnShipMainCustID = base.Columns["ShipMainCustID"];
				this.columnstrEnteredBy = base.Columns["strEnteredBy"];
				this.columndtmEnteredOn = base.Columns["dtmEnteredOn"];
				this.columnstrPO = base.Columns["strPO"];
				this.columnstrTrailer = base.Columns["strTrailer"];
				this.columnsngSkits = base.Columns["sngSkits"];
				this.columnsngTotalPallets = base.Columns["sngTotalPallets"];
				this.columnstrSeal = base.Columns["strSeal"];
				this.columnstrRoute = base.Columns["strRoute"];
				this.columnstrDeliveryNote = base.Columns["strDeliveryNote"];
				this.columnts = base.Columns["ts"];
				this.columnintDestination = base.Columns["intDestination"];
				this.columnTotalGrossWeight = base.Columns["TotalGrossWeight"];
				this.columnShipper = base.Columns["Shipper"];
				this.columnComments = base.Columns["Comments"];
				this.columnShift = base.Columns["Shift"];
				this.columnFreight = base.Columns["Freight"];
				this.columnDeliveryNoteNumber = base.Columns["DeliveryNoteNumber"];
				this.columnLoadedBy = base.Columns["LoadedBy"];
				this.columnCheckedBy = base.Columns["CheckedBy"];
				this.columnPhysicalCondition = base.Columns["PhysicalCondition"];
				this.columnLoadCondition = base.Columns["LoadCondition"];
				this.columnStartTime = base.Columns["StartTime"];
				this.columnFinishTime = base.Columns["FinishTime"];
				this.columnTemparature = base.Columns["Temparature"];
				this.columnShipMainBOL = base.Columns["ShipMainBOL"];
				this.columnCorrectPallets = base.Columns["CorrectPallets"];
				this.columnInsectActivity = base.Columns["InsectActivity"];
				this.columnForeignSubstance = base.Columns["ForeignSubstance"];
				this.columnWheelsChocked = base.Columns["WheelsChocked"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnShipMainID = new global::System.Data.DataColumn("ShipMainID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShipMainID);
				this.columnShipMainDate = new global::System.Data.DataColumn("ShipMainDate", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShipMainDate);
				this.columnShipMainCarrierID = new global::System.Data.DataColumn("ShipMainCarrierID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShipMainCarrierID);
				this.columnShipMainCustID = new global::System.Data.DataColumn("ShipMainCustID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShipMainCustID);
				this.columnstrEnteredBy = new global::System.Data.DataColumn("strEnteredBy", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrEnteredBy);
				this.columndtmEnteredOn = new global::System.Data.DataColumn("dtmEnteredOn", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndtmEnteredOn);
				this.columnstrPO = new global::System.Data.DataColumn("strPO", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrPO);
				this.columnstrTrailer = new global::System.Data.DataColumn("strTrailer", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrTrailer);
				this.columnsngSkits = new global::System.Data.DataColumn("sngSkits", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsngSkits);
				this.columnsngTotalPallets = new global::System.Data.DataColumn("sngTotalPallets", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsngTotalPallets);
				this.columnstrSeal = new global::System.Data.DataColumn("strSeal", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrSeal);
				this.columnstrRoute = new global::System.Data.DataColumn("strRoute", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrRoute);
				this.columnstrDeliveryNote = new global::System.Data.DataColumn("strDeliveryNote", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrDeliveryNote);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.columnintDestination = new global::System.Data.DataColumn("intDestination", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnintDestination);
				this.columnTotalGrossWeight = new global::System.Data.DataColumn("TotalGrossWeight", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnTotalGrossWeight);
				this.columnShipper = new global::System.Data.DataColumn("Shipper", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShipper);
				this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnComments);
				this.columnShift = new global::System.Data.DataColumn("Shift", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShift);
				this.columnFreight = new global::System.Data.DataColumn("Freight", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnFreight);
				this.columnDeliveryNoteNumber = new global::System.Data.DataColumn("DeliveryNoteNumber", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnDeliveryNoteNumber);
				this.columnLoadedBy = new global::System.Data.DataColumn("LoadedBy", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnLoadedBy);
				this.columnCheckedBy = new global::System.Data.DataColumn("CheckedBy", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCheckedBy);
				this.columnPhysicalCondition = new global::System.Data.DataColumn("PhysicalCondition", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnPhysicalCondition);
				this.columnLoadCondition = new global::System.Data.DataColumn("LoadCondition", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnLoadCondition);
				this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnStartTime);
				this.columnFinishTime = new global::System.Data.DataColumn("FinishTime", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnFinishTime);
				this.columnTemparature = new global::System.Data.DataColumn("Temparature", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnTemparature);
				this.columnShipMainBOL = new global::System.Data.DataColumn("ShipMainBOL", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShipMainBOL);
				this.columnCorrectPallets = new global::System.Data.DataColumn("CorrectPallets", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCorrectPallets);
				this.columnInsectActivity = new global::System.Data.DataColumn("InsectActivity", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnInsectActivity);
				this.columnForeignSubstance = new global::System.Data.DataColumn("ForeignSubstance", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnForeignSubstance);
				this.columnWheelsChocked = new global::System.Data.DataColumn("WheelsChocked", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnWheelsChocked);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnShipMainID}, true));
				this.columnShipMainID.AutoIncrement = true;
				this.columnShipMainID.AllowDBNull = false;
				this.columnShipMainID.ReadOnly = true;
				this.columnShipMainID.Unique = true;
				this.columnstrEnteredBy.MaxLength = 50;
				this.columnstrPO.MaxLength = 50;
				this.columnstrTrailer.MaxLength = 50;
				this.columnstrSeal.MaxLength = 50;
				this.columnstrRoute.MaxLength = 50;
				this.columnstrDeliveryNote.MaxLength = 100;
				this.columnts.ReadOnly = true;
				this.columnComments.MaxLength = 255;
				this.columnFreight.DefaultValue = Convert.ToBoolean(true);
				this.columnDeliveryNoteNumber.MaxLength = 50;
				this.columnShipMainBOL.AllowDBNull = false;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingsRow NewShippingsRow()
			{
				return (ShippingsRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new ShippingsRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(ShippingsRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.ShippingsRowChanged) != null)
				{
					ShippingsRowChanged(this, new ShippingsRowChangeEvent((ShippingsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.ShippingsRowChanging) != null)
				{
					ShippingsRowChanging(this, new ShippingsRowChangeEvent((ShippingsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.ShippingsRowDeleted) != null)
				{
					ShippingsRowDeleted(this, new ShippingsRowChangeEvent((ShippingsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.ShippingsRowDeleting) != null)
				{
					ShippingsRowDeleting(this, new ShippingsRowChangeEvent((ShippingsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveShippingsRow(ShippingsRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "ShippingsDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}

//INSTANT C# NOTE: Converted event handler wireups:
			private bool EventsSubscribed = false;
			private void SubscribeToEvents()
			{
				if (EventsSubscribed)
					return;
				else
					EventsSubscribed = true;

				this.ColumnChanging += ShippingsDataTable_ColumnChanging;
			}

		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class MachineLinesDataTable : System.Data.TypedTableBase<MachineLinesRow>
		{
			private global::System.Data.DataColumn columnMachineLineID;

			private global::System.Data.DataColumn columnMachineLineName;

			private global::System.Data.DataColumn columnts;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public MachineLinesDataTable() : base()
			{
				this.TableName = "MachineLines";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal MachineLinesDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected MachineLinesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn MachineLineIDColumn
			{
				get
				{
					return this.columnMachineLineID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn MachineLineNameColumn
			{
				get
				{
					return this.columnMachineLineName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public MachineLinesRow this[int index]
			{
				get
				{
					return (MachineLinesRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event MachineLinesRowChangeEventHandler MachineLinesRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event MachineLinesRowChangeEventHandler MachineLinesRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event MachineLinesRowChangeEventHandler MachineLinesRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event MachineLinesRowChangeEventHandler MachineLinesRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddMachineLinesRow(MachineLinesRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public MachineLinesRow AddMachineLinesRow(string MachineLineName, byte[] ts)
			{
				MachineLinesRow rowMachineLinesRow = (MachineLinesRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, MachineLineName, ts};
				rowMachineLinesRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowMachineLinesRow);
				return rowMachineLinesRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public MachineLinesRow FindByMachineLineID(int MachineLineID)
			{
				return (MachineLinesRow)this.Rows.Find(new object[] {MachineLineID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				MachineLinesDataTable cln = (MachineLinesDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new MachineLinesDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnMachineLineID = base.Columns["MachineLineID"];
				this.columnMachineLineName = base.Columns["MachineLineName"];
				this.columnts = base.Columns["ts"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnMachineLineID = new global::System.Data.DataColumn("MachineLineID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnMachineLineID);
				this.columnMachineLineName = new global::System.Data.DataColumn("MachineLineName", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnMachineLineName);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnMachineLineID}, true));
				this.columnMachineLineID.AutoIncrement = true;
				this.columnMachineLineID.AllowDBNull = false;
				this.columnMachineLineID.ReadOnly = true;
				this.columnMachineLineID.Unique = true;
				this.columnMachineLineName.MaxLength = 50;
				this.columnts.ReadOnly = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public MachineLinesRow NewMachineLinesRow()
			{
				return (MachineLinesRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new MachineLinesRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(MachineLinesRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.MachineLinesRowChanged) != null)
				{
					MachineLinesRowChanged(this, new MachineLinesRowChangeEvent((MachineLinesRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.MachineLinesRowChanging) != null)
				{
					MachineLinesRowChanging(this, new MachineLinesRowChangeEvent((MachineLinesRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.MachineLinesRowDeleted) != null)
				{
					MachineLinesRowDeleted(this, new MachineLinesRowChangeEvent((MachineLinesRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.MachineLinesRowDeleting) != null)
				{
					MachineLinesRowDeleting(this, new MachineLinesRowChangeEvent((MachineLinesRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveMachineLinesRow(MachineLinesRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "MachineLinesDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class ShippingDetailsDataTable : System.Data.TypedTableBase<ShippingDetailsRow>
		{
			private global::System.Data.DataColumn columnShipDetDetID;

			private global::System.Data.DataColumn columnShipDetMainID;

			private global::System.Data.DataColumn columnShipDetItemID;

			private global::System.Data.DataColumn columnShipDetLot;

			private global::System.Data.DataColumn columnShipDetDetQty;

			private global::System.Data.DataColumn columnsngPackages;

			private global::System.Data.DataColumn columnsngPallets;

			private global::System.Data.DataColumn columnts;

			private global::System.Data.DataColumn columnNote;

			private global::System.Data.DataColumn columnExpirationDate;

			private global::System.Data.DataColumn columnFullLPNNumber;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingDetailsDataTable() : base()
			{
				this.TableName = "ShippingDetails";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ShippingDetailsDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected ShippingDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShipDetDetIDColumn
			{
				get
				{
					return this.columnShipDetDetID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShipDetMainIDColumn
			{
				get
				{
					return this.columnShipDetMainID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShipDetItemIDColumn
			{
				get
				{
					return this.columnShipDetItemID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShipDetLotColumn
			{
				get
				{
					return this.columnShipDetLot;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShipDetDetQtyColumn
			{
				get
				{
					return this.columnShipDetDetQty;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn sngPackagesColumn
			{
				get
				{
					return this.columnsngPackages;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn sngPalletsColumn
			{
				get
				{
					return this.columnsngPallets;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn NoteColumn
			{
				get
				{
					return this.columnNote;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ExpirationDateColumn
			{
				get
				{
					return this.columnExpirationDate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn FullLPNNumberColumn
			{
				get
				{
					return this.columnFullLPNNumber;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingDetailsRow this[int index]
			{
				get
				{
					return (ShippingDetailsRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingDetailsRowChangeEventHandler ShippingDetailsRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingDetailsRowChangeEventHandler ShippingDetailsRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingDetailsRowChangeEventHandler ShippingDetailsRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingDetailsRowChangeEventHandler ShippingDetailsRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddShippingDetailsRow(ShippingDetailsRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingDetailsRow AddShippingDetailsRow(ShippingsRow parentShippingsRowByFK_tblShipDet_tblShipMain, ItemsRow parentItemsRowByFK_tblItems_tblShipDet, string ShipDetLot, int ShipDetDetQty, float sngPackages, float sngPallets, byte[] ts, string Note, DateTime ExpirationDate, string FullLPNNumber)
			{
				ShippingDetailsRow rowShippingDetailsRow = (ShippingDetailsRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, null, null, ShipDetLot, ShipDetDetQty, sngPackages, sngPallets, ts, Note, ExpirationDate, FullLPNNumber};
				if ((parentShippingsRowByFK_tblShipDet_tblShipMain) != null)
				{
					columnValuesArray[1] = parentShippingsRowByFK_tblShipDet_tblShipMain[0];
				}
				if ((parentItemsRowByFK_tblItems_tblShipDet) != null)
				{
					columnValuesArray[2] = parentItemsRowByFK_tblItems_tblShipDet[0];
				}
				rowShippingDetailsRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowShippingDetailsRow);
				return rowShippingDetailsRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingDetailsRow FindByShipDetDetID(int ShipDetDetID)
			{
				return (ShippingDetailsRow)this.Rows.Find(new object[] {ShipDetDetID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				ShippingDetailsDataTable cln = (ShippingDetailsDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new ShippingDetailsDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnShipDetDetID = base.Columns["ShipDetDetID"];
				this.columnShipDetMainID = base.Columns["ShipDetMainID"];
				this.columnShipDetItemID = base.Columns["ShipDetItemID"];
				this.columnShipDetLot = base.Columns["ShipDetLot"];
				this.columnShipDetDetQty = base.Columns["ShipDetDetQty"];
				this.columnsngPackages = base.Columns["sngPackages"];
				this.columnsngPallets = base.Columns["sngPallets"];
				this.columnts = base.Columns["ts"];
				this.columnNote = base.Columns["Note"];
				this.columnExpirationDate = base.Columns["ExpirationDate"];
				this.columnFullLPNNumber = base.Columns["FullLPNNumber"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnShipDetDetID = new global::System.Data.DataColumn("ShipDetDetID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShipDetDetID);
				this.columnShipDetMainID = new global::System.Data.DataColumn("ShipDetMainID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShipDetMainID);
				this.columnShipDetItemID = new global::System.Data.DataColumn("ShipDetItemID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShipDetItemID);
				this.columnShipDetLot = new global::System.Data.DataColumn("ShipDetLot", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShipDetLot);
				this.columnShipDetDetQty = new global::System.Data.DataColumn("ShipDetDetQty", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShipDetDetQty);
				this.columnsngPackages = new global::System.Data.DataColumn("sngPackages", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsngPackages);
				this.columnsngPallets = new global::System.Data.DataColumn("sngPallets", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsngPallets);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.columnNote = new global::System.Data.DataColumn("Note", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnNote);
				this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnExpirationDate);
				this.columnFullLPNNumber = new global::System.Data.DataColumn("FullLPNNumber", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnFullLPNNumber);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnShipDetDetID}, true));
				this.columnShipDetDetID.AutoIncrement = true;
				this.columnShipDetDetID.AutoIncrementSeed = -1;
				this.columnShipDetDetID.AutoIncrementStep = -1;
				this.columnShipDetDetID.AllowDBNull = false;
				this.columnShipDetDetID.ReadOnly = true;
				this.columnShipDetDetID.Unique = true;
				this.columnShipDetLot.DefaultValue = Convert.ToString("");
				this.columnShipDetLot.MaxLength = 150;
				this.columnts.ReadOnly = true;
				this.columnNote.MaxLength = 255;
				this.columnFullLPNNumber.MaxLength = 100;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingDetailsRow NewShippingDetailsRow()
			{
				return (ShippingDetailsRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new ShippingDetailsRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(ShippingDetailsRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.ShippingDetailsRowChanged) != null)
				{
					ShippingDetailsRowChanged(this, new ShippingDetailsRowChangeEvent((ShippingDetailsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.ShippingDetailsRowChanging) != null)
				{
					ShippingDetailsRowChanging(this, new ShippingDetailsRowChangeEvent((ShippingDetailsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.ShippingDetailsRowDeleted) != null)
				{
					ShippingDetailsRowDeleted(this, new ShippingDetailsRowChangeEvent((ShippingDetailsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.ShippingDetailsRowDeleting) != null)
				{
					ShippingDetailsRowDeleting(this, new ShippingDetailsRowChangeEvent((ShippingDetailsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveShippingDetailsRow(ShippingDetailsRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "ShippingDetailsDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class BOMDataTable : System.Data.TypedTableBase<BOMRow>
		{
			private global::System.Data.DataColumn columnBOMID;

			private global::System.Data.DataColumn columnBOMRawMatID;

			private global::System.Data.DataColumn columnBOMFiniGoodID;

			private global::System.Data.DataColumn columnts;

			private global::System.Data.DataColumn columnBOMQuantity;

			private global::System.Data.DataColumn columnScrapFactor;

			private global::System.Data.DataColumn columnBOMRawMatCode;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public BOMDataTable() : base()
			{
				this.TableName = "BOM";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal BOMDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected BOMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn BOMIDColumn
			{
				get
				{
					return this.columnBOMID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn BOMRawMatIDColumn
			{
				get
				{
					return this.columnBOMRawMatID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn BOMFiniGoodIDColumn
			{
				get
				{
					return this.columnBOMFiniGoodID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn BOMQuantityColumn
			{
				get
				{
					return this.columnBOMQuantity;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ScrapFactorColumn
			{
				get
				{
					return this.columnScrapFactor;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn BOMRawMatCodeColumn
			{
				get
				{
					return this.columnBOMRawMatCode;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public BOMRow this[int index]
			{
				get
				{
					return (BOMRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event BOMRowChangeEventHandler BOMRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event BOMRowChangeEventHandler BOMRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event BOMRowChangeEventHandler BOMRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event BOMRowChangeEventHandler BOMRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddBOMRow(BOMRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public BOMRow AddBOMRow(ItemsRow parentItemsRowByFK_tblItems_tblBOMs, ItemsRow parentItemsRowByFK_tblBOMs_tblItems, byte[] ts, float BOMQuantity, double ScrapFactor, string BOMRawMatCode)
			{
				BOMRow rowBOMRow = (BOMRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, null, null, ts, BOMQuantity, ScrapFactor, BOMRawMatCode};
				if ((parentItemsRowByFK_tblItems_tblBOMs) != null)
				{
					columnValuesArray[1] = parentItemsRowByFK_tblItems_tblBOMs[0];
				}
				if ((parentItemsRowByFK_tblBOMs_tblItems) != null)
				{
					columnValuesArray[2] = parentItemsRowByFK_tblBOMs_tblItems[0];
				}
				rowBOMRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowBOMRow);
				return rowBOMRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public BOMRow FindByBOMID(int BOMID)
			{
				return (BOMRow)this.Rows.Find(new object[] {BOMID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				BOMDataTable cln = (BOMDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new BOMDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnBOMID = base.Columns["BOMID"];
				this.columnBOMRawMatID = base.Columns["BOMRawMatID"];
				this.columnBOMFiniGoodID = base.Columns["BOMFiniGoodID"];
				this.columnts = base.Columns["ts"];
				this.columnBOMQuantity = base.Columns["BOMQuantity"];
				this.columnScrapFactor = base.Columns["ScrapFactor"];
				this.columnBOMRawMatCode = base.Columns["BOMRawMatCode"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnBOMID = new global::System.Data.DataColumn("BOMID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnBOMID);
				this.columnBOMRawMatID = new global::System.Data.DataColumn("BOMRawMatID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnBOMRawMatID);
				this.columnBOMFiniGoodID = new global::System.Data.DataColumn("BOMFiniGoodID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnBOMFiniGoodID);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.columnBOMQuantity = new global::System.Data.DataColumn("BOMQuantity", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnBOMQuantity);
				this.columnScrapFactor = new global::System.Data.DataColumn("ScrapFactor", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnScrapFactor);
				this.columnBOMRawMatCode = new global::System.Data.DataColumn("BOMRawMatCode", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnBOMRawMatCode);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnBOMID}, true));
				this.columnBOMID.AutoIncrement = true;
				this.columnBOMID.AutoIncrementSeed = -1;
				this.columnBOMID.AutoIncrementStep = -1;
				this.columnBOMID.AllowDBNull = false;
				this.columnBOMID.ReadOnly = true;
				this.columnBOMID.Unique = true;
				this.columnts.ReadOnly = true;
				this.columnBOMRawMatCode.ReadOnly = true;
				this.columnBOMRawMatCode.MaxLength = 50;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public BOMRow NewBOMRow()
			{
				return (BOMRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new BOMRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(BOMRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.BOMRowChanged) != null)
				{
					BOMRowChanged(this, new BOMRowChangeEvent((BOMRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.BOMRowChanging) != null)
				{
					BOMRowChanging(this, new BOMRowChangeEvent((BOMRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.BOMRowDeleted) != null)
				{
					BOMRowDeleted(this, new BOMRowChangeEvent((BOMRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.BOMRowDeleting) != null)
				{
					BOMRowDeleting(this, new BOMRowChangeEvent((BOMRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveBOMRow(BOMRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "BOMDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class ShiftsDataTable : System.Data.TypedTableBase<ShiftsRow>
		{
			private global::System.Data.DataColumn columnShiftID;

			private global::System.Data.DataColumn columnShiftName;

			private global::System.Data.DataColumn columnts;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShiftsDataTable() : base()
			{
				this.TableName = "Shifts";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ShiftsDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected ShiftsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShiftIDColumn
			{
				get
				{
					return this.columnShiftID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShiftNameColumn
			{
				get
				{
					return this.columnShiftName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShiftsRow this[int index]
			{
				get
				{
					return (ShiftsRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShiftsRowChangeEventHandler ShiftsRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShiftsRowChangeEventHandler ShiftsRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShiftsRowChangeEventHandler ShiftsRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShiftsRowChangeEventHandler ShiftsRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddShiftsRow(ShiftsRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShiftsRow AddShiftsRow(string ShiftName, byte[] ts)
			{
				ShiftsRow rowShiftsRow = (ShiftsRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, ShiftName, ts};
				rowShiftsRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowShiftsRow);
				return rowShiftsRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShiftsRow FindByShiftID(int ShiftID)
			{
				return (ShiftsRow)this.Rows.Find(new object[] {ShiftID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				ShiftsDataTable cln = (ShiftsDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new ShiftsDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnShiftID = base.Columns["ShiftID"];
				this.columnShiftName = base.Columns["ShiftName"];
				this.columnts = base.Columns["ts"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnShiftID = new global::System.Data.DataColumn("ShiftID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShiftID);
				this.columnShiftName = new global::System.Data.DataColumn("ShiftName", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShiftName);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnShiftID}, true));
				this.columnShiftID.AutoIncrement = true;
				this.columnShiftID.AllowDBNull = false;
				this.columnShiftID.ReadOnly = true;
				this.columnShiftID.Unique = true;
				this.columnShiftName.MaxLength = 50;
				this.columnts.ReadOnly = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShiftsRow NewShiftsRow()
			{
				return (ShiftsRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new ShiftsRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(ShiftsRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.ShiftsRowChanged) != null)
				{
					ShiftsRowChanged(this, new ShiftsRowChangeEvent((ShiftsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.ShiftsRowChanging) != null)
				{
					ShiftsRowChanging(this, new ShiftsRowChangeEvent((ShiftsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.ShiftsRowDeleted) != null)
				{
					ShiftsRowDeleted(this, new ShiftsRowChangeEvent((ShiftsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.ShiftsRowDeleting) != null)
				{
					ShiftsRowDeleting(this, new ShiftsRowChangeEvent((ShiftsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveShiftsRow(ShiftsRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "ShiftsDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class CarriersDataTable : System.Data.TypedTableBase<CarriersRow>
		{
			private global::System.Data.DataColumn columnCarrierID;

			private global::System.Data.DataColumn columnCarrierName;

			private global::System.Data.DataColumn columnts;

			private global::System.Data.DataColumn columnContactFirstName;

			private global::System.Data.DataColumn columnContactLastName;

			private global::System.Data.DataColumn columnAddress;

			private global::System.Data.DataColumn columnCity;

			private global::System.Data.DataColumn columnState;

			private global::System.Data.DataColumn columnPostal;

			private global::System.Data.DataColumn columnPhone;

			private global::System.Data.DataColumn columnEmail;

			private global::System.Data.DataColumn columnFax;

			private global::System.Data.DataColumn columnNote;

			private global::System.Data.DataColumn columnEnteredBy;

			private global::System.Data.DataColumn columnEnteredOn;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CarriersDataTable() : base()
			{
				this.TableName = "Carriers";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal CarriersDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected CarriersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CarrierIDColumn
			{
				get
				{
					return this.columnCarrierID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CarrierNameColumn
			{
				get
				{
					return this.columnCarrierName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ContactFirstNameColumn
			{
				get
				{
					return this.columnContactFirstName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ContactLastNameColumn
			{
				get
				{
					return this.columnContactLastName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn AddressColumn
			{
				get
				{
					return this.columnAddress;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CityColumn
			{
				get
				{
					return this.columnCity;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn StateColumn
			{
				get
				{
					return this.columnState;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn PostalColumn
			{
				get
				{
					return this.columnPostal;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn PhoneColumn
			{
				get
				{
					return this.columnPhone;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn EmailColumn
			{
				get
				{
					return this.columnEmail;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn FaxColumn
			{
				get
				{
					return this.columnFax;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn NoteColumn
			{
				get
				{
					return this.columnNote;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn EnteredByColumn
			{
				get
				{
					return this.columnEnteredBy;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn EnteredOnColumn
			{
				get
				{
					return this.columnEnteredOn;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CarriersRow this[int index]
			{
				get
				{
					return (CarriersRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event CarriersRowChangeEventHandler CarriersRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event CarriersRowChangeEventHandler CarriersRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event CarriersRowChangeEventHandler CarriersRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event CarriersRowChangeEventHandler CarriersRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddCarriersRow(CarriersRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CarriersRow AddCarriersRow(int CarrierID, string CarrierName, byte[] ts, string ContactFirstName, string ContactLastName, string Address, string City, string State, string Postal, string Phone, string Email, string Fax, string Note, string EnteredBy, DateTime EnteredOn)
			{
				CarriersRow rowCarriersRow = (CarriersRow)this.NewRow();
				object[] columnValuesArray = new object[] {CarrierID, CarrierName, ts, ContactFirstName, ContactLastName, Address, City, State, Postal, Phone, Email, Fax, Note, EnteredBy, EnteredOn};
				rowCarriersRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowCarriersRow);
				return rowCarriersRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CarriersRow FindByCarrierID(int CarrierID)
			{
				return (CarriersRow)this.Rows.Find(new object[] {CarrierID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				CarriersDataTable cln = (CarriersDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new CarriersDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnCarrierID = base.Columns["CarrierID"];
				this.columnCarrierName = base.Columns["CarrierName"];
				this.columnts = base.Columns["ts"];
				this.columnContactFirstName = base.Columns["ContactFirstName"];
				this.columnContactLastName = base.Columns["ContactLastName"];
				this.columnAddress = base.Columns["Address"];
				this.columnCity = base.Columns["City"];
				this.columnState = base.Columns["State"];
				this.columnPostal = base.Columns["Postal"];
				this.columnPhone = base.Columns["Phone"];
				this.columnEmail = base.Columns["Email"];
				this.columnFax = base.Columns["Fax"];
				this.columnNote = base.Columns["Note"];
				this.columnEnteredBy = base.Columns["EnteredBy"];
				this.columnEnteredOn = base.Columns["EnteredOn"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnCarrierID = new global::System.Data.DataColumn("CarrierID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCarrierID);
				this.columnCarrierName = new global::System.Data.DataColumn("CarrierName", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCarrierName);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.columnContactFirstName = new global::System.Data.DataColumn("ContactFirstName", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnContactFirstName);
				this.columnContactLastName = new global::System.Data.DataColumn("ContactLastName", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnContactLastName);
				this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnAddress);
				this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCity);
				this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnState);
				this.columnPostal = new global::System.Data.DataColumn("Postal", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnPostal);
				this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnPhone);
				this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnEmail);
				this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnFax);
				this.columnNote = new global::System.Data.DataColumn("Note", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnNote);
				this.columnEnteredBy = new global::System.Data.DataColumn("EnteredBy", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnEnteredBy);
				this.columnEnteredOn = new global::System.Data.DataColumn("EnteredOn", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnEnteredOn);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnCarrierID}, true));
				this.columnCarrierID.AllowDBNull = false;
				this.columnCarrierID.ReadOnly = true;
				this.columnCarrierID.Unique = true;
				this.columnCarrierName.AllowDBNull = false;
				this.columnCarrierName.MaxLength = 50;
				this.columnts.ReadOnly = true;
				this.columnContactFirstName.MaxLength = 50;
				this.columnContactLastName.MaxLength = 50;
				this.columnAddress.MaxLength = 150;
				this.columnCity.MaxLength = 50;
				this.columnState.MaxLength = 50;
				this.columnPostal.MaxLength = 50;
				this.columnPhone.MaxLength = 50;
				this.columnEmail.MaxLength = 50;
				this.columnFax.MaxLength = 50;
				this.columnNote.MaxLength = 50;
				this.columnEnteredBy.MaxLength = 50;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CarriersRow NewCarriersRow()
			{
				return (CarriersRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new CarriersRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(CarriersRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.CarriersRowChanged) != null)
				{
					CarriersRowChanged(this, new CarriersRowChangeEvent((CarriersRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.CarriersRowChanging) != null)
				{
					CarriersRowChanging(this, new CarriersRowChangeEvent((CarriersRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.CarriersRowDeleted) != null)
				{
					CarriersRowDeleted(this, new CarriersRowChangeEvent((CarriersRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.CarriersRowDeleting) != null)
				{
					CarriersRowDeleting(this, new CarriersRowChangeEvent((CarriersRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveCarriersRow(CarriersRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "CarriersDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class CompanySettingsDataTable : System.Data.TypedTableBase<CompanySettingsRow>
		{
			private global::System.Data.DataColumn columnPK_ID;

			private global::System.Data.DataColumn columndblPackersPay;

			private global::System.Data.DataColumn columndblOperatorsPay;

			private global::System.Data.DataColumn columndblSupersPay;

			private global::System.Data.DataColumn columnintMinPerHour;

			private global::System.Data.DataColumn columnts;

			private global::System.Data.DataColumn columnUniversalCustomer;

			private global::System.Data.DataColumn columndbVersion;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CompanySettingsDataTable() : base()
			{
				this.TableName = "CompanySettings";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal CompanySettingsDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected CompanySettingsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn PK_IDColumn
			{
				get
				{
					return this.columnPK_ID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dblPackersPayColumn
			{
				get
				{
					return this.columndblPackersPay;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dblOperatorsPayColumn
			{
				get
				{
					return this.columndblOperatorsPay;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dblSupersPayColumn
			{
				get
				{
					return this.columndblSupersPay;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn intMinPerHourColumn
			{
				get
				{
					return this.columnintMinPerHour;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn UniversalCustomerColumn
			{
				get
				{
					return this.columnUniversalCustomer;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dbVersionColumn
			{
				get
				{
					return this.columndbVersion;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CompanySettingsRow this[int index]
			{
				get
				{
					return (CompanySettingsRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event CompanySettingsRowChangeEventHandler CompanySettingsRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event CompanySettingsRowChangeEventHandler CompanySettingsRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event CompanySettingsRowChangeEventHandler CompanySettingsRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event CompanySettingsRowChangeEventHandler CompanySettingsRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddCompanySettingsRow(CompanySettingsRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CompanySettingsRow AddCompanySettingsRow(float dblPackersPay, float dblOperatorsPay, float dblSupersPay, short intMinPerHour, byte[] ts, int UniversalCustomer, string dbVersion)
			{
				CompanySettingsRow rowCompanySettingsRow = (CompanySettingsRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, dblPackersPay, dblOperatorsPay, dblSupersPay, intMinPerHour, ts, UniversalCustomer, dbVersion};
				rowCompanySettingsRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowCompanySettingsRow);
				return rowCompanySettingsRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CompanySettingsRow FindByPK_ID(int PK_ID)
			{
				return (CompanySettingsRow)this.Rows.Find(new object[] {PK_ID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				CompanySettingsDataTable cln = (CompanySettingsDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new CompanySettingsDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnPK_ID = base.Columns["PK_ID"];
				this.columndblPackersPay = base.Columns["dblPackersPay"];
				this.columndblOperatorsPay = base.Columns["dblOperatorsPay"];
				this.columndblSupersPay = base.Columns["dblSupersPay"];
				this.columnintMinPerHour = base.Columns["intMinPerHour"];
				this.columnts = base.Columns["ts"];
				this.columnUniversalCustomer = base.Columns["UniversalCustomer"];
				this.columndbVersion = base.Columns["dbVersion"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnPK_ID = new global::System.Data.DataColumn("PK_ID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnPK_ID);
				this.columndblPackersPay = new global::System.Data.DataColumn("dblPackersPay", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndblPackersPay);
				this.columndblOperatorsPay = new global::System.Data.DataColumn("dblOperatorsPay", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndblOperatorsPay);
				this.columndblSupersPay = new global::System.Data.DataColumn("dblSupersPay", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndblSupersPay);
				this.columnintMinPerHour = new global::System.Data.DataColumn("intMinPerHour", typeof(short), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnintMinPerHour);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.columnUniversalCustomer = new global::System.Data.DataColumn("UniversalCustomer", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnUniversalCustomer);
				this.columndbVersion = new global::System.Data.DataColumn("dbVersion", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndbVersion);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnPK_ID}, true));
				this.columnPK_ID.AutoIncrement = true;
				this.columnPK_ID.AllowDBNull = false;
				this.columnPK_ID.ReadOnly = true;
				this.columnPK_ID.Unique = true;
				this.columnts.ReadOnly = true;
				this.columndbVersion.MaxLength = 50;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CompanySettingsRow NewCompanySettingsRow()
			{
				return (CompanySettingsRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new CompanySettingsRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(CompanySettingsRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.CompanySettingsRowChanged) != null)
				{
					CompanySettingsRowChanged(this, new CompanySettingsRowChangeEvent((CompanySettingsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.CompanySettingsRowChanging) != null)
				{
					CompanySettingsRowChanging(this, new CompanySettingsRowChangeEvent((CompanySettingsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.CompanySettingsRowDeleted) != null)
				{
					CompanySettingsRowDeleted(this, new CompanySettingsRowChangeEvent((CompanySettingsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.CompanySettingsRowDeleting) != null)
				{
					CompanySettingsRowDeleting(this, new CompanySettingsRowChangeEvent((CompanySettingsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveCompanySettingsRow(CompanySettingsRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "CompanySettingsDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class ShippingAddressesDataTable : System.Data.TypedTableBase<ShippingAddressesRow>
		{
			private global::System.Data.DataColumn columnAddressID;

			private global::System.Data.DataColumn columnShippingName;

			private global::System.Data.DataColumn columnContactFirstName;

			private global::System.Data.DataColumn columnContactLastName;

			private global::System.Data.DataColumn columnShippingAddress;

			private global::System.Data.DataColumn columnShippingCity;

			private global::System.Data.DataColumn columnShippingState;

			private global::System.Data.DataColumn columnShippingPostal;

			private global::System.Data.DataColumn columnShippingPhone;

			private global::System.Data.DataColumn columnShippingEmail;

			private global::System.Data.DataColumn columnShippingFax;

			private global::System.Data.DataColumn columnShippingNote;

			private global::System.Data.DataColumn columnstrEnteredBy;

			private global::System.Data.DataColumn columndtmEnteredOn;

			private global::System.Data.DataColumn columnts;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingAddressesDataTable() : base()
			{
				this.TableName = "ShippingAddresses";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ShippingAddressesDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected ShippingAddressesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn AddressIDColumn
			{
				get
				{
					return this.columnAddressID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShippingNameColumn
			{
				get
				{
					return this.columnShippingName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ContactFirstNameColumn
			{
				get
				{
					return this.columnContactFirstName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ContactLastNameColumn
			{
				get
				{
					return this.columnContactLastName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShippingAddressColumn
			{
				get
				{
					return this.columnShippingAddress;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShippingCityColumn
			{
				get
				{
					return this.columnShippingCity;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShippingStateColumn
			{
				get
				{
					return this.columnShippingState;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShippingPostalColumn
			{
				get
				{
					return this.columnShippingPostal;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShippingPhoneColumn
			{
				get
				{
					return this.columnShippingPhone;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShippingEmailColumn
			{
				get
				{
					return this.columnShippingEmail;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShippingFaxColumn
			{
				get
				{
					return this.columnShippingFax;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShippingNoteColumn
			{
				get
				{
					return this.columnShippingNote;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strEnteredByColumn
			{
				get
				{
					return this.columnstrEnteredBy;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dtmEnteredOnColumn
			{
				get
				{
					return this.columndtmEnteredOn;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingAddressesRow this[int index]
			{
				get
				{
					return (ShippingAddressesRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingAddressesRowChangeEventHandler ShippingAddressesRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingAddressesRowChangeEventHandler ShippingAddressesRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingAddressesRowChangeEventHandler ShippingAddressesRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingAddressesRowChangeEventHandler ShippingAddressesRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddShippingAddressesRow(ShippingAddressesRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingAddressesRow AddShippingAddressesRow(int AddressID, string ShippingName, string ContactFirstName, string ContactLastName, string ShippingAddress, string ShippingCity, string ShippingState, string ShippingPostal, string ShippingPhone, string ShippingEmail, string ShippingFax, string ShippingNote, string strEnteredBy, DateTime dtmEnteredOn, byte[] ts)
			{
				ShippingAddressesRow rowShippingAddressesRow = (ShippingAddressesRow)this.NewRow();
				object[] columnValuesArray = new object[] {AddressID, ShippingName, ContactFirstName, ContactLastName, ShippingAddress, ShippingCity, ShippingState, ShippingPostal, ShippingPhone, ShippingEmail, ShippingFax, ShippingNote, strEnteredBy, dtmEnteredOn, ts};
				rowShippingAddressesRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowShippingAddressesRow);
				return rowShippingAddressesRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingAddressesRow FindByAddressID(int AddressID)
			{
				return (ShippingAddressesRow)this.Rows.Find(new object[] {AddressID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				ShippingAddressesDataTable cln = (ShippingAddressesDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new ShippingAddressesDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnAddressID = base.Columns["AddressID"];
				this.columnShippingName = base.Columns["ShippingName"];
				this.columnContactFirstName = base.Columns["ContactFirstName"];
				this.columnContactLastName = base.Columns["ContactLastName"];
				this.columnShippingAddress = base.Columns["ShippingAddress"];
				this.columnShippingCity = base.Columns["ShippingCity"];
				this.columnShippingState = base.Columns["ShippingState"];
				this.columnShippingPostal = base.Columns["ShippingPostal"];
				this.columnShippingPhone = base.Columns["ShippingPhone"];
				this.columnShippingEmail = base.Columns["ShippingEmail"];
				this.columnShippingFax = base.Columns["ShippingFax"];
				this.columnShippingNote = base.Columns["ShippingNote"];
				this.columnstrEnteredBy = base.Columns["strEnteredBy"];
				this.columndtmEnteredOn = base.Columns["dtmEnteredOn"];
				this.columnts = base.Columns["ts"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnAddressID = new global::System.Data.DataColumn("AddressID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnAddressID);
				this.columnShippingName = new global::System.Data.DataColumn("ShippingName", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShippingName);
				this.columnContactFirstName = new global::System.Data.DataColumn("ContactFirstName", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnContactFirstName);
				this.columnContactLastName = new global::System.Data.DataColumn("ContactLastName", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnContactLastName);
				this.columnShippingAddress = new global::System.Data.DataColumn("ShippingAddress", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShippingAddress);
				this.columnShippingCity = new global::System.Data.DataColumn("ShippingCity", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShippingCity);
				this.columnShippingState = new global::System.Data.DataColumn("ShippingState", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShippingState);
				this.columnShippingPostal = new global::System.Data.DataColumn("ShippingPostal", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShippingPostal);
				this.columnShippingPhone = new global::System.Data.DataColumn("ShippingPhone", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShippingPhone);
				this.columnShippingEmail = new global::System.Data.DataColumn("ShippingEmail", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShippingEmail);
				this.columnShippingFax = new global::System.Data.DataColumn("ShippingFax", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShippingFax);
				this.columnShippingNote = new global::System.Data.DataColumn("ShippingNote", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShippingNote);
				this.columnstrEnteredBy = new global::System.Data.DataColumn("strEnteredBy", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrEnteredBy);
				this.columndtmEnteredOn = new global::System.Data.DataColumn("dtmEnteredOn", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndtmEnteredOn);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnAddressID}, true));
				this.columnAddressID.AllowDBNull = false;
				this.columnAddressID.Unique = true;
				this.columnShippingName.MaxLength = 50;
				this.columnContactFirstName.MaxLength = 50;
				this.columnContactLastName.MaxLength = 50;
				this.columnShippingAddress.MaxLength = 150;
				this.columnShippingCity.MaxLength = 50;
				this.columnShippingState.MaxLength = 50;
				this.columnShippingPostal.MaxLength = 50;
				this.columnShippingPhone.MaxLength = 50;
				this.columnShippingEmail.MaxLength = 50;
				this.columnShippingFax.MaxLength = 50;
				this.columnShippingNote.MaxLength = 50;
				this.columnstrEnteredBy.MaxLength = 50;
				this.columnts.ReadOnly = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingAddressesRow NewShippingAddressesRow()
			{
				return (ShippingAddressesRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new ShippingAddressesRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(ShippingAddressesRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.ShippingAddressesRowChanged) != null)
				{
					ShippingAddressesRowChanged(this, new ShippingAddressesRowChangeEvent((ShippingAddressesRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.ShippingAddressesRowChanging) != null)
				{
					ShippingAddressesRowChanging(this, new ShippingAddressesRowChangeEvent((ShippingAddressesRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.ShippingAddressesRowDeleted) != null)
				{
					ShippingAddressesRowDeleted(this, new ShippingAddressesRowChangeEvent((ShippingAddressesRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.ShippingAddressesRowDeleting) != null)
				{
					ShippingAddressesRowDeleting(this, new ShippingAddressesRowChangeEvent((ShippingAddressesRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveShippingAddressesRow(ShippingAddressesRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "ShippingAddressesDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class InventoryDataTable : System.Data.TypedTableBase<InventoryRow>
		{
			private global::System.Data.DataColumn columnInventoryID;

			private global::System.Data.DataColumn columnInventoryDate;

			private global::System.Data.DataColumn columnInventoryItemID;

			private global::System.Data.DataColumn columnInventoryQuantity;

			private global::System.Data.DataColumn columnInventoryPallets;

			private global::System.Data.DataColumn columnts;

			private global::System.Data.DataColumn columnstrEnteredBy;

			private global::System.Data.DataColumn columndtmEnteredOn;

			private global::System.Data.DataColumn columnPO;

			private global::System.Data.DataColumn columnLot;

			private global::System.Data.DataColumn columnShift;

			private global::System.Data.DataColumn columnPallet;

			private global::System.Data.DataColumn columnLPNNumber;

			private global::System.Data.DataColumn columnExpirationDate;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryDataTable() : base()
			{
				this.TableName = "Inventory";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal InventoryDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected InventoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn InventoryIDColumn
			{
				get
				{
					return this.columnInventoryID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn InventoryDateColumn
			{
				get
				{
					return this.columnInventoryDate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn InventoryItemIDColumn
			{
				get
				{
					return this.columnInventoryItemID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn InventoryQuantityColumn
			{
				get
				{
					return this.columnInventoryQuantity;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn InventoryPalletsColumn
			{
				get
				{
					return this.columnInventoryPallets;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strEnteredByColumn
			{
				get
				{
					return this.columnstrEnteredBy;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dtmEnteredOnColumn
			{
				get
				{
					return this.columndtmEnteredOn;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn POColumn
			{
				get
				{
					return this.columnPO;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn LotColumn
			{
				get
				{
					return this.columnLot;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShiftColumn
			{
				get
				{
					return this.columnShift;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn PalletColumn
			{
				get
				{
					return this.columnPallet;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn LPNNumberColumn
			{
				get
				{
					return this.columnLPNNumber;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ExpirationDateColumn
			{
				get
				{
					return this.columnExpirationDate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryRow this[int index]
			{
				get
				{
					return (InventoryRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event InventoryRowChangeEventHandler InventoryRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event InventoryRowChangeEventHandler InventoryRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event InventoryRowChangeEventHandler InventoryRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event InventoryRowChangeEventHandler InventoryRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddInventoryRow(InventoryRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryRow AddInventoryRow(DateTime InventoryDate, ItemsRow parentItemsRowByFK_tblInventory_InventoryItemID, int InventoryQuantity, float InventoryPallets, byte[] ts, string strEnteredBy, DateTime dtmEnteredOn, string PO, string Lot, ShiftsRow parentShiftsRowByFK_tblInventory_Shift, int Pallet, int LPNNumber, DateTime ExpirationDate)
			{
				InventoryRow rowInventoryRow = (InventoryRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, InventoryDate, null, InventoryQuantity, InventoryPallets, ts, strEnteredBy, dtmEnteredOn, PO, Lot, null, Pallet, LPNNumber, ExpirationDate};
				if ((parentItemsRowByFK_tblInventory_InventoryItemID) != null)
				{
					columnValuesArray[2] = parentItemsRowByFK_tblInventory_InventoryItemID[0];
				}
				if ((parentShiftsRowByFK_tblInventory_Shift) != null)
				{
					columnValuesArray[10] = parentShiftsRowByFK_tblInventory_Shift[0];
				}
				rowInventoryRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowInventoryRow);
				return rowInventoryRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryRow FindByInventoryID(int InventoryID)
			{
				return (InventoryRow)this.Rows.Find(new object[] {InventoryID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				InventoryDataTable cln = (InventoryDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new InventoryDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnInventoryID = base.Columns["InventoryID"];
				this.columnInventoryDate = base.Columns["InventoryDate"];
				this.columnInventoryItemID = base.Columns["InventoryItemID"];
				this.columnInventoryQuantity = base.Columns["InventoryQuantity"];
				this.columnInventoryPallets = base.Columns["InventoryPallets"];
				this.columnts = base.Columns["ts"];
				this.columnstrEnteredBy = base.Columns["strEnteredBy"];
				this.columndtmEnteredOn = base.Columns["dtmEnteredOn"];
				this.columnPO = base.Columns["PO"];
				this.columnLot = base.Columns["Lot"];
				this.columnShift = base.Columns["Shift"];
				this.columnPallet = base.Columns["Pallet"];
				this.columnLPNNumber = base.Columns["LPNNumber"];
				this.columnExpirationDate = base.Columns["ExpirationDate"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnInventoryID = new global::System.Data.DataColumn("InventoryID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnInventoryID);
				this.columnInventoryDate = new global::System.Data.DataColumn("InventoryDate", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnInventoryDate);
				this.columnInventoryItemID = new global::System.Data.DataColumn("InventoryItemID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnInventoryItemID);
				this.columnInventoryQuantity = new global::System.Data.DataColumn("InventoryQuantity", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnInventoryQuantity);
				this.columnInventoryPallets = new global::System.Data.DataColumn("InventoryPallets", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnInventoryPallets);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.columnstrEnteredBy = new global::System.Data.DataColumn("strEnteredBy", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrEnteredBy);
				this.columndtmEnteredOn = new global::System.Data.DataColumn("dtmEnteredOn", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndtmEnteredOn);
				this.columnPO = new global::System.Data.DataColumn("PO", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnPO);
				this.columnLot = new global::System.Data.DataColumn("Lot", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnLot);
				this.columnShift = new global::System.Data.DataColumn("Shift", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShift);
				this.columnPallet = new global::System.Data.DataColumn("Pallet", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnPallet);
				this.columnLPNNumber = new global::System.Data.DataColumn("LPNNumber", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnLPNNumber);
				this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnExpirationDate);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnInventoryID}, true));
				this.columnInventoryID.AutoIncrement = true;
				this.columnInventoryID.AllowDBNull = false;
				this.columnInventoryID.ReadOnly = true;
				this.columnInventoryID.Unique = true;
				this.columnts.ReadOnly = true;
				this.columnstrEnteredBy.MaxLength = 50;
				this.columnPO.MaxLength = 50;
				this.columnLot.MaxLength = 150;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryRow NewInventoryRow()
			{
				return (InventoryRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new InventoryRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(InventoryRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.InventoryRowChanged) != null)
				{
					InventoryRowChanged(this, new InventoryRowChangeEvent((InventoryRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.InventoryRowChanging) != null)
				{
					InventoryRowChanging(this, new InventoryRowChangeEvent((InventoryRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.InventoryRowDeleted) != null)
				{
					InventoryRowDeleted(this, new InventoryRowChangeEvent((InventoryRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.InventoryRowDeleting) != null)
				{
					InventoryRowDeleting(this, new InventoryRowChangeEvent((InventoryRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveInventoryRow(InventoryRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "InventoryDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class UserPermissionsDataTable : System.Data.TypedTableBase<UserPermissionsRow>
		{
			private global::System.Data.DataColumn columnUserPermissionID;

			private global::System.Data.DataColumn columnUserName;

			private global::System.Data.DataColumn columnPermissionObject;

			private global::System.Data.DataColumn columnPermissionLevel;

			private global::System.Data.DataColumn columnts;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UserPermissionsDataTable() : base()
			{
				this.TableName = "UserPermissions";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal UserPermissionsDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected UserPermissionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn UserPermissionIDColumn
			{
				get
				{
					return this.columnUserPermissionID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn UserNameColumn
			{
				get
				{
					return this.columnUserName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn PermissionObjectColumn
			{
				get
				{
					return this.columnPermissionObject;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn PermissionLevelColumn
			{
				get
				{
					return this.columnPermissionLevel;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UserPermissionsRow this[int index]
			{
				get
				{
					return (UserPermissionsRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event UserPermissionsRowChangeEventHandler UserPermissionsRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event UserPermissionsRowChangeEventHandler UserPermissionsRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event UserPermissionsRowChangeEventHandler UserPermissionsRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event UserPermissionsRowChangeEventHandler UserPermissionsRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddUserPermissionsRow(UserPermissionsRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UserPermissionsRow AddUserPermissionsRow(string UserName, string PermissionObject, string PermissionLevel, byte[] ts)
			{
				UserPermissionsRow rowUserPermissionsRow = (UserPermissionsRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, UserName, PermissionObject, PermissionLevel, ts};
				rowUserPermissionsRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowUserPermissionsRow);
				return rowUserPermissionsRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UserPermissionsRow FindByUserPermissionID(int UserPermissionID)
			{
				return (UserPermissionsRow)this.Rows.Find(new object[] {UserPermissionID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				UserPermissionsDataTable cln = (UserPermissionsDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new UserPermissionsDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnUserPermissionID = base.Columns["UserPermissionID"];
				this.columnUserName = base.Columns["UserName"];
				this.columnPermissionObject = base.Columns["PermissionObject"];
				this.columnPermissionLevel = base.Columns["PermissionLevel"];
				this.columnts = base.Columns["ts"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnUserPermissionID = new global::System.Data.DataColumn("UserPermissionID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnUserPermissionID);
				this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnUserName);
				this.columnPermissionObject = new global::System.Data.DataColumn("PermissionObject", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnPermissionObject);
				this.columnPermissionLevel = new global::System.Data.DataColumn("PermissionLevel", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnPermissionLevel);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnUserPermissionID}, true));
				this.columnUserPermissionID.AutoIncrement = true;
				this.columnUserPermissionID.AutoIncrementSeed = -1;
				this.columnUserPermissionID.AutoIncrementStep = -1;
				this.columnUserPermissionID.AllowDBNull = false;
				this.columnUserPermissionID.ReadOnly = true;
				this.columnUserPermissionID.Unique = true;
				this.columnUserName.AllowDBNull = false;
				this.columnUserName.MaxLength = 50;
				this.columnPermissionObject.AllowDBNull = false;
				this.columnPermissionObject.MaxLength = 50;
				this.columnPermissionLevel.AllowDBNull = false;
				this.columnPermissionLevel.MaxLength = 50;
				this.columnts.ReadOnly = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UserPermissionsRow NewUserPermissionsRow()
			{
				return (UserPermissionsRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new UserPermissionsRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(UserPermissionsRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.UserPermissionsRowChanged) != null)
				{
					UserPermissionsRowChanged(this, new UserPermissionsRowChangeEvent((UserPermissionsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.UserPermissionsRowChanging) != null)
				{
					UserPermissionsRowChanging(this, new UserPermissionsRowChangeEvent((UserPermissionsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.UserPermissionsRowDeleted) != null)
				{
					UserPermissionsRowDeleted(this, new UserPermissionsRowChangeEvent((UserPermissionsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.UserPermissionsRowDeleting) != null)
				{
					UserPermissionsRowDeleting(this, new UserPermissionsRowChangeEvent((UserPermissionsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveUserPermissionsRow(UserPermissionsRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "UserPermissionsDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class ReportsDataTable : System.Data.TypedTableBase<ReportsRow>
		{
			private global::System.Data.DataColumn columnReportID;

			private global::System.Data.DataColumn columnName;

			private global::System.Data.DataColumn columnCodeName;

			private global::System.Data.DataColumn columnModuleName;

			private global::System.Data.DataColumn columnType;

			private global::System.Data.DataColumn columnFilterReport;

			private global::System.Data.DataColumn columnDateFilter;

			private global::System.Data.DataColumn columnMachineFilter;

			private global::System.Data.DataColumn columnShiftFilter;

			private global::System.Data.DataColumn columnCustomerFilter;

			private global::System.Data.DataColumn columnLotFilter;

			private global::System.Data.DataColumn columnPOFilter;

			private global::System.Data.DataColumn columnItemFilter;

			private global::System.Data.DataColumn columnBOLFilter;

			private global::System.Data.DataColumn columnDNFilter;

			private global::System.Data.DataColumn columnDestinationFilter;

			private global::System.Data.DataColumn columnCarrierFilter;

			private global::System.Data.DataColumn columnVendorFilter;

			private global::System.Data.DataColumn columnitemtypeFilter;

			private global::System.Data.DataColumn columnstockFilter;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReportsDataTable() : base()
			{
				this.TableName = "Reports";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ReportsDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected ReportsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReportIDColumn
			{
				get
				{
					return this.columnReportID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn NameColumn
			{
				get
				{
					return this.columnName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CodeNameColumn
			{
				get
				{
					return this.columnCodeName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ModuleNameColumn
			{
				get
				{
					return this.columnModuleName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn TypeColumn
			{
				get
				{
					return this.columnType;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn FilterReportColumn
			{
				get
				{
					return this.columnFilterReport;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn DateFilterColumn
			{
				get
				{
					return this.columnDateFilter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn MachineFilterColumn
			{
				get
				{
					return this.columnMachineFilter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShiftFilterColumn
			{
				get
				{
					return this.columnShiftFilter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CustomerFilterColumn
			{
				get
				{
					return this.columnCustomerFilter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn LotFilterColumn
			{
				get
				{
					return this.columnLotFilter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn POFilterColumn
			{
				get
				{
					return this.columnPOFilter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ItemFilterColumn
			{
				get
				{
					return this.columnItemFilter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn BOLFilterColumn
			{
				get
				{
					return this.columnBOLFilter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn DNFilterColumn
			{
				get
				{
					return this.columnDNFilter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn DestinationFilterColumn
			{
				get
				{
					return this.columnDestinationFilter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CarrierFilterColumn
			{
				get
				{
					return this.columnCarrierFilter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn VendorFilterColumn
			{
				get
				{
					return this.columnVendorFilter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn itemtypeFilterColumn
			{
				get
				{
					return this.columnitemtypeFilter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn stockFilterColumn
			{
				get
				{
					return this.columnstockFilter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReportsRow this[int index]
			{
				get
				{
					return (ReportsRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReportsRowChangeEventHandler ReportsRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReportsRowChangeEventHandler ReportsRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReportsRowChangeEventHandler ReportsRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReportsRowChangeEventHandler ReportsRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddReportsRow(ReportsRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReportsRow AddReportsRow(string Name, string CodeName, string ModuleName, string Type, bool FilterReport, bool DateFilter, bool MachineFilter, bool ShiftFilter, bool CustomerFilter, bool LotFilter, bool POFilter, bool ItemFilter, bool BOLFilter, bool DNFilter, bool DestinationFilter, bool CarrierFilter, bool VendorFilter, bool itemtypeFilter, bool stockFilter)
			{
				ReportsRow rowReportsRow = (ReportsRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, Name, CodeName, ModuleName, Type, FilterReport, DateFilter, MachineFilter, ShiftFilter, CustomerFilter, LotFilter, POFilter, ItemFilter, BOLFilter, DNFilter, DestinationFilter, CarrierFilter, VendorFilter, itemtypeFilter, stockFilter};
				rowReportsRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowReportsRow);
				return rowReportsRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReportsRow FindByReportID(int ReportID)
			{
				return (ReportsRow)this.Rows.Find(new object[] {ReportID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				ReportsDataTable cln = (ReportsDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new ReportsDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnReportID = base.Columns["ReportID"];
				this.columnName = base.Columns["Name"];
				this.columnCodeName = base.Columns["CodeName"];
				this.columnModuleName = base.Columns["ModuleName"];
				this.columnType = base.Columns["Type"];
				this.columnFilterReport = base.Columns["FilterReport"];
				this.columnDateFilter = base.Columns["DateFilter"];
				this.columnMachineFilter = base.Columns["MachineFilter"];
				this.columnShiftFilter = base.Columns["ShiftFilter"];
				this.columnCustomerFilter = base.Columns["CustomerFilter"];
				this.columnLotFilter = base.Columns["LotFilter"];
				this.columnPOFilter = base.Columns["POFilter"];
				this.columnItemFilter = base.Columns["ItemFilter"];
				this.columnBOLFilter = base.Columns["BOLFilter"];
				this.columnDNFilter = base.Columns["DNFilter"];
				this.columnDestinationFilter = base.Columns["DestinationFilter"];
				this.columnCarrierFilter = base.Columns["CarrierFilter"];
				this.columnVendorFilter = base.Columns["VendorFilter"];
				this.columnitemtypeFilter = base.Columns["itemtypeFilter"];
				this.columnstockFilter = base.Columns["stockFilter"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnReportID = new global::System.Data.DataColumn("ReportID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReportID);
				this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnName);
				this.columnCodeName = new global::System.Data.DataColumn("CodeName", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCodeName);
				this.columnModuleName = new global::System.Data.DataColumn("ModuleName", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnModuleName);
				this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnType);
				this.columnFilterReport = new global::System.Data.DataColumn("FilterReport", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnFilterReport);
				this.columnDateFilter = new global::System.Data.DataColumn("DateFilter", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnDateFilter);
				this.columnMachineFilter = new global::System.Data.DataColumn("MachineFilter", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnMachineFilter);
				this.columnShiftFilter = new global::System.Data.DataColumn("ShiftFilter", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShiftFilter);
				this.columnCustomerFilter = new global::System.Data.DataColumn("CustomerFilter", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCustomerFilter);
				this.columnLotFilter = new global::System.Data.DataColumn("LotFilter", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnLotFilter);
				this.columnPOFilter = new global::System.Data.DataColumn("POFilter", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnPOFilter);
				this.columnItemFilter = new global::System.Data.DataColumn("ItemFilter", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnItemFilter);
				this.columnBOLFilter = new global::System.Data.DataColumn("BOLFilter", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnBOLFilter);
				this.columnDNFilter = new global::System.Data.DataColumn("DNFilter", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnDNFilter);
				this.columnDestinationFilter = new global::System.Data.DataColumn("DestinationFilter", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnDestinationFilter);
				this.columnCarrierFilter = new global::System.Data.DataColumn("CarrierFilter", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCarrierFilter);
				this.columnVendorFilter = new global::System.Data.DataColumn("VendorFilter", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnVendorFilter);
				this.columnitemtypeFilter = new global::System.Data.DataColumn("itemtypeFilter", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnitemtypeFilter);
				this.columnstockFilter = new global::System.Data.DataColumn("stockFilter", typeof(bool), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstockFilter);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnReportID}, true));
				this.columnReportID.AutoIncrement = true;
				this.columnReportID.AutoIncrementSeed = -1;
				this.columnReportID.AutoIncrementStep = -1;
				this.columnReportID.AllowDBNull = false;
				this.columnReportID.ReadOnly = true;
				this.columnReportID.Unique = true;
				this.columnName.AllowDBNull = false;
				this.columnName.MaxLength = 50;
				this.columnCodeName.AllowDBNull = false;
				this.columnCodeName.MaxLength = 50;
				this.columnModuleName.MaxLength = 50;
				this.columnType.MaxLength = 50;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReportsRow NewReportsRow()
			{
				return (ReportsRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new ReportsRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(ReportsRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.ReportsRowChanged) != null)
				{
					ReportsRowChanged(this, new ReportsRowChangeEvent((ReportsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.ReportsRowChanging) != null)
				{
					ReportsRowChanging(this, new ReportsRowChangeEvent((ReportsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.ReportsRowDeleted) != null)
				{
					ReportsRowDeleted(this, new ReportsRowChangeEvent((ReportsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.ReportsRowDeleting) != null)
				{
					ReportsRowDeleting(this, new ReportsRowChangeEvent((ReportsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveReportsRow(ReportsRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "ReportsDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class ReturnDetDataTable : System.Data.TypedTableBase<ReturnDetRow>
		{
			private global::System.Data.DataColumn columnReturnDetID;

			private global::System.Data.DataColumn columnReceiveMainID;

			private global::System.Data.DataColumn columnReturnDetItemID;

			private global::System.Data.DataColumn columnReturnDetLot;

			private global::System.Data.DataColumn columnReturnDetQty;

			private global::System.Data.DataColumn columnintUnits;

			private global::System.Data.DataColumn columnsngPallets;

			private global::System.Data.DataColumn columnReason;

			private global::System.Data.DataColumn columnts;

			private global::System.Data.DataColumn columnExpirationDate;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReturnDetDataTable() : base()
			{
				this.TableName = "ReturnDet";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ReturnDetDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected ReturnDetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReturnDetIDColumn
			{
				get
				{
					return this.columnReturnDetID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReceiveMainIDColumn
			{
				get
				{
					return this.columnReceiveMainID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReturnDetItemIDColumn
			{
				get
				{
					return this.columnReturnDetItemID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReturnDetLotColumn
			{
				get
				{
					return this.columnReturnDetLot;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReturnDetQtyColumn
			{
				get
				{
					return this.columnReturnDetQty;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn intUnitsColumn
			{
				get
				{
					return this.columnintUnits;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn sngPalletsColumn
			{
				get
				{
					return this.columnsngPallets;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReasonColumn
			{
				get
				{
					return this.columnReason;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ExpirationDateColumn
			{
				get
				{
					return this.columnExpirationDate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReturnDetRow this[int index]
			{
				get
				{
					return (ReturnDetRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReturnDetRowChangeEventHandler ReturnDetRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReturnDetRowChangeEventHandler ReturnDetRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReturnDetRowChangeEventHandler ReturnDetRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ReturnDetRowChangeEventHandler ReturnDetRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddReturnDetRow(ReturnDetRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReturnDetRow AddReturnDetRow(ReceivingsRow parentReceivingsRowByFK_tblReturnDet_tblReceivMain, ItemsRow parentItemsRowByFK_tblItems_tblReturnDet, string ReturnDetLot, int ReturnDetQty, int intUnits, float sngPallets, string Reason, byte[] ts, DateTime ExpirationDate)
			{
				ReturnDetRow rowReturnDetRow = (ReturnDetRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, null, null, ReturnDetLot, ReturnDetQty, intUnits, sngPallets, Reason, ts, ExpirationDate};
				if ((parentReceivingsRowByFK_tblReturnDet_tblReceivMain) != null)
				{
					columnValuesArray[1] = parentReceivingsRowByFK_tblReturnDet_tblReceivMain[0];
				}
				if ((parentItemsRowByFK_tblItems_tblReturnDet) != null)
				{
					columnValuesArray[2] = parentItemsRowByFK_tblItems_tblReturnDet[0];
				}
				rowReturnDetRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowReturnDetRow);
				return rowReturnDetRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReturnDetRow FindByReturnDetID(int ReturnDetID)
			{
				return (ReturnDetRow)this.Rows.Find(new object[] {ReturnDetID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				ReturnDetDataTable cln = (ReturnDetDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new ReturnDetDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnReturnDetID = base.Columns["ReturnDetID"];
				this.columnReceiveMainID = base.Columns["ReceiveMainID"];
				this.columnReturnDetItemID = base.Columns["ReturnDetItemID"];
				this.columnReturnDetLot = base.Columns["ReturnDetLot"];
				this.columnReturnDetQty = base.Columns["ReturnDetQty"];
				this.columnintUnits = base.Columns["intUnits"];
				this.columnsngPallets = base.Columns["sngPallets"];
				this.columnReason = base.Columns["Reason"];
				this.columnts = base.Columns["ts"];
				this.columnExpirationDate = base.Columns["ExpirationDate"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnReturnDetID = new global::System.Data.DataColumn("ReturnDetID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReturnDetID);
				this.columnReceiveMainID = new global::System.Data.DataColumn("ReceiveMainID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReceiveMainID);
				this.columnReturnDetItemID = new global::System.Data.DataColumn("ReturnDetItemID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReturnDetItemID);
				this.columnReturnDetLot = new global::System.Data.DataColumn("ReturnDetLot", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReturnDetLot);
				this.columnReturnDetQty = new global::System.Data.DataColumn("ReturnDetQty", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReturnDetQty);
				this.columnintUnits = new global::System.Data.DataColumn("intUnits", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnintUnits);
				this.columnsngPallets = new global::System.Data.DataColumn("sngPallets", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsngPallets);
				this.columnReason = new global::System.Data.DataColumn("Reason", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReason);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnExpirationDate);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnReturnDetID}, true));
				this.columnReturnDetID.AutoIncrement = true;
				this.columnReturnDetID.AutoIncrementSeed = -1;
				this.columnReturnDetID.AutoIncrementStep = -1;
				this.columnReturnDetID.AllowDBNull = false;
				this.columnReturnDetID.ReadOnly = true;
				this.columnReturnDetID.Unique = true;
				this.columnReturnDetLot.MaxLength = 150;
				this.columnReason.MaxLength = 255;
				this.columnts.ReadOnly = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReturnDetRow NewReturnDetRow()
			{
				return (ReturnDetRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new ReturnDetRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(ReturnDetRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.ReturnDetRowChanged) != null)
				{
					ReturnDetRowChanged(this, new ReturnDetRowChangeEvent((ReturnDetRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.ReturnDetRowChanging) != null)
				{
					ReturnDetRowChanging(this, new ReturnDetRowChangeEvent((ReturnDetRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.ReturnDetRowDeleted) != null)
				{
					ReturnDetRowDeleted(this, new ReturnDetRowChangeEvent((ReturnDetRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.ReturnDetRowDeleting) != null)
				{
					ReturnDetRowDeleting(this, new ReturnDetRowChangeEvent((ReturnDetRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveReturnDetRow(ReturnDetRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "ReturnDetDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class ShippingReturnDetailsDataTable : System.Data.TypedTableBase<ShippingReturnDetailsRow>
		{
			private global::System.Data.DataColumn columnReturnDetID;

			private global::System.Data.DataColumn columnShipMainID;

			private global::System.Data.DataColumn columnReturnDetItemID;

			private global::System.Data.DataColumn columnReturnDetLot;

			private global::System.Data.DataColumn columnReturnDetQty;

			private global::System.Data.DataColumn columnintUnits;

			private global::System.Data.DataColumn columnsngPallets;

			private global::System.Data.DataColumn columnReason;

			private global::System.Data.DataColumn columnts;

			private global::System.Data.DataColumn columnExpirationDate;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingReturnDetailsDataTable() : base()
			{
				this.TableName = "ShippingReturnDetails";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ShippingReturnDetailsDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected ShippingReturnDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReturnDetIDColumn
			{
				get
				{
					return this.columnReturnDetID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ShipMainIDColumn
			{
				get
				{
					return this.columnShipMainID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReturnDetItemIDColumn
			{
				get
				{
					return this.columnReturnDetItemID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReturnDetLotColumn
			{
				get
				{
					return this.columnReturnDetLot;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReturnDetQtyColumn
			{
				get
				{
					return this.columnReturnDetQty;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn intUnitsColumn
			{
				get
				{
					return this.columnintUnits;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn sngPalletsColumn
			{
				get
				{
					return this.columnsngPallets;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReasonColumn
			{
				get
				{
					return this.columnReason;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ExpirationDateColumn
			{
				get
				{
					return this.columnExpirationDate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingReturnDetailsRow this[int index]
			{
				get
				{
					return (ShippingReturnDetailsRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingReturnDetailsRowChangeEventHandler ShippingReturnDetailsRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingReturnDetailsRowChangeEventHandler ShippingReturnDetailsRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingReturnDetailsRowChangeEventHandler ShippingReturnDetailsRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event ShippingReturnDetailsRowChangeEventHandler ShippingReturnDetailsRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddShippingReturnDetailsRow(ShippingReturnDetailsRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingReturnDetailsRow AddShippingReturnDetailsRow(ShippingsRow parentShippingsRowByFK_tblShipReturnDet_tblShipMain, ItemsRow parentItemsRowByFK_tblItems_tblShipReturnDet, string ReturnDetLot, int ReturnDetQty, int intUnits, float sngPallets, string Reason, byte[] ts, DateTime ExpirationDate)
			{
				ShippingReturnDetailsRow rowShippingReturnDetailsRow = (ShippingReturnDetailsRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, null, null, ReturnDetLot, ReturnDetQty, intUnits, sngPallets, Reason, ts, ExpirationDate};
				if ((parentShippingsRowByFK_tblShipReturnDet_tblShipMain) != null)
				{
					columnValuesArray[1] = parentShippingsRowByFK_tblShipReturnDet_tblShipMain[0];
				}
				if ((parentItemsRowByFK_tblItems_tblShipReturnDet) != null)
				{
					columnValuesArray[2] = parentItemsRowByFK_tblItems_tblShipReturnDet[0];
				}
				rowShippingReturnDetailsRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowShippingReturnDetailsRow);
				return rowShippingReturnDetailsRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingReturnDetailsRow FindByReturnDetID(int ReturnDetID)
			{
				return (ShippingReturnDetailsRow)this.Rows.Find(new object[] {ReturnDetID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				ShippingReturnDetailsDataTable cln = (ShippingReturnDetailsDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new ShippingReturnDetailsDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnReturnDetID = base.Columns["ReturnDetID"];
				this.columnShipMainID = base.Columns["ShipMainID"];
				this.columnReturnDetItemID = base.Columns["ReturnDetItemID"];
				this.columnReturnDetLot = base.Columns["ReturnDetLot"];
				this.columnReturnDetQty = base.Columns["ReturnDetQty"];
				this.columnintUnits = base.Columns["intUnits"];
				this.columnsngPallets = base.Columns["sngPallets"];
				this.columnReason = base.Columns["Reason"];
				this.columnts = base.Columns["ts"];
				this.columnExpirationDate = base.Columns["ExpirationDate"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnReturnDetID = new global::System.Data.DataColumn("ReturnDetID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReturnDetID);
				this.columnShipMainID = new global::System.Data.DataColumn("ShipMainID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnShipMainID);
				this.columnReturnDetItemID = new global::System.Data.DataColumn("ReturnDetItemID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReturnDetItemID);
				this.columnReturnDetLot = new global::System.Data.DataColumn("ReturnDetLot", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReturnDetLot);
				this.columnReturnDetQty = new global::System.Data.DataColumn("ReturnDetQty", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReturnDetQty);
				this.columnintUnits = new global::System.Data.DataColumn("intUnits", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnintUnits);
				this.columnsngPallets = new global::System.Data.DataColumn("sngPallets", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsngPallets);
				this.columnReason = new global::System.Data.DataColumn("Reason", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReason);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnExpirationDate);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnReturnDetID}, true));
				this.columnReturnDetID.AutoIncrement = true;
				this.columnReturnDetID.AutoIncrementSeed = -1;
				this.columnReturnDetID.AutoIncrementStep = -1;
				this.columnReturnDetID.AllowDBNull = false;
				this.columnReturnDetID.ReadOnly = true;
				this.columnReturnDetID.Unique = true;
				this.columnReturnDetLot.MaxLength = 150;
				this.columnReason.MaxLength = 255;
				this.columnts.ReadOnly = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingReturnDetailsRow NewShippingReturnDetailsRow()
			{
				return (ShippingReturnDetailsRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new ShippingReturnDetailsRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(ShippingReturnDetailsRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.ShippingReturnDetailsRowChanged) != null)
				{
					ShippingReturnDetailsRowChanged(this, new ShippingReturnDetailsRowChangeEvent((ShippingReturnDetailsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.ShippingReturnDetailsRowChanging) != null)
				{
					ShippingReturnDetailsRowChanging(this, new ShippingReturnDetailsRowChangeEvent((ShippingReturnDetailsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.ShippingReturnDetailsRowDeleted) != null)
				{
					ShippingReturnDetailsRowDeleted(this, new ShippingReturnDetailsRowChangeEvent((ShippingReturnDetailsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.ShippingReturnDetailsRowDeleting) != null)
				{
					ShippingReturnDetailsRowDeleting(this, new ShippingReturnDetailsRowChangeEvent((ShippingReturnDetailsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveShippingReturnDetailsRow(ShippingReturnDetailsRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "ShippingReturnDetailsDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class InventoryAdjustmentDataTable : System.Data.TypedTableBase<InventoryAdjustmentRow>
		{
			private global::System.Data.DataColumn columnAdjustmentID;

			private global::System.Data.DataColumn columnAdjustmentDate;

			private global::System.Data.DataColumn columnCustomer;

			private global::System.Data.DataColumn columnItemID;

			private global::System.Data.DataColumn columnOriginalQuantity;

			private global::System.Data.DataColumn columnNewCount;

			private global::System.Data.DataColumn columnReason;

			private global::System.Data.DataColumn columnrv;

			private global::System.Data.DataColumn columnstrEnteredBy;

			private global::System.Data.DataColumn columndtmEnteredOn;

			private global::System.Data.DataColumn columnOriginalLot;

			private global::System.Data.DataColumn columnNewLot;

			private global::System.Data.DataColumn columnLPN;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryAdjustmentDataTable() : base()
			{
				this.TableName = "InventoryAdjustment";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal InventoryAdjustmentDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected InventoryAdjustmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn AdjustmentIDColumn
			{
				get
				{
					return this.columnAdjustmentID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn AdjustmentDateColumn
			{
				get
				{
					return this.columnAdjustmentDate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn CustomerColumn
			{
				get
				{
					return this.columnCustomer;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ItemIDColumn
			{
				get
				{
					return this.columnItemID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn OriginalQuantityColumn
			{
				get
				{
					return this.columnOriginalQuantity;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn NewCountColumn
			{
				get
				{
					return this.columnNewCount;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ReasonColumn
			{
				get
				{
					return this.columnReason;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn rvColumn
			{
				get
				{
					return this.columnrv;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn strEnteredByColumn
			{
				get
				{
					return this.columnstrEnteredBy;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn dtmEnteredOnColumn
			{
				get
				{
					return this.columndtmEnteredOn;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn OriginalLotColumn
			{
				get
				{
					return this.columnOriginalLot;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn NewLotColumn
			{
				get
				{
					return this.columnNewLot;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn LPNColumn
			{
				get
				{
					return this.columnLPN;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryAdjustmentRow this[int index]
			{
				get
				{
					return (InventoryAdjustmentRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event InventoryAdjustmentRowChangeEventHandler InventoryAdjustmentRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event InventoryAdjustmentRowChangeEventHandler InventoryAdjustmentRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event InventoryAdjustmentRowChangeEventHandler InventoryAdjustmentRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event InventoryAdjustmentRowChangeEventHandler InventoryAdjustmentRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddInventoryAdjustmentRow(InventoryAdjustmentRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryAdjustmentRow AddInventoryAdjustmentRow(DateTime AdjustmentDate, CustomersRow parentCustomersRowByFK_tblInventoryAdjustment_Customer, ItemsRow parentItemsRowByFK_tblInventoryAdjustment_Item, float OriginalQuantity, float NewCount, string Reason, byte[] rv, string strEnteredBy, DateTime dtmEnteredOn, string OriginalLot, string NewLot, int LPN)
			{
				InventoryAdjustmentRow rowInventoryAdjustmentRow = (InventoryAdjustmentRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, AdjustmentDate, null, null, OriginalQuantity, NewCount, Reason, rv, strEnteredBy, dtmEnteredOn, OriginalLot, NewLot, LPN};
				if ((parentCustomersRowByFK_tblInventoryAdjustment_Customer) != null)
				{
					columnValuesArray[2] = parentCustomersRowByFK_tblInventoryAdjustment_Customer[0];
				}
				if ((parentItemsRowByFK_tblInventoryAdjustment_Item) != null)
				{
					columnValuesArray[3] = parentItemsRowByFK_tblInventoryAdjustment_Item[0];
				}
				rowInventoryAdjustmentRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowInventoryAdjustmentRow);
				return rowInventoryAdjustmentRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryAdjustmentRow FindByAdjustmentID(int AdjustmentID)
			{
				return (InventoryAdjustmentRow)this.Rows.Find(new object[] {AdjustmentID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				InventoryAdjustmentDataTable cln = (InventoryAdjustmentDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new InventoryAdjustmentDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnAdjustmentID = base.Columns["AdjustmentID"];
				this.columnAdjustmentDate = base.Columns["AdjustmentDate"];
				this.columnCustomer = base.Columns["Customer"];
				this.columnItemID = base.Columns["ItemID"];
				this.columnOriginalQuantity = base.Columns["OriginalQuantity"];
				this.columnNewCount = base.Columns["NewCount"];
				this.columnReason = base.Columns["Reason"];
				this.columnrv = base.Columns["rv"];
				this.columnstrEnteredBy = base.Columns["strEnteredBy"];
				this.columndtmEnteredOn = base.Columns["dtmEnteredOn"];
				this.columnOriginalLot = base.Columns["OriginalLot"];
				this.columnNewLot = base.Columns["NewLot"];
				this.columnLPN = base.Columns["LPN"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnAdjustmentID = new global::System.Data.DataColumn("AdjustmentID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnAdjustmentID);
				this.columnAdjustmentDate = new global::System.Data.DataColumn("AdjustmentDate", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnAdjustmentDate);
				this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnCustomer);
				this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnItemID);
				this.columnOriginalQuantity = new global::System.Data.DataColumn("OriginalQuantity", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnOriginalQuantity);
				this.columnNewCount = new global::System.Data.DataColumn("NewCount", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnNewCount);
				this.columnReason = new global::System.Data.DataColumn("Reason", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnReason);
				this.columnrv = new global::System.Data.DataColumn("rv", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnrv);
				this.columnstrEnteredBy = new global::System.Data.DataColumn("strEnteredBy", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstrEnteredBy);
				this.columndtmEnteredOn = new global::System.Data.DataColumn("dtmEnteredOn", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndtmEnteredOn);
				this.columnOriginalLot = new global::System.Data.DataColumn("OriginalLot", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnOriginalLot);
				this.columnNewLot = new global::System.Data.DataColumn("NewLot", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnNewLot);
				this.columnLPN = new global::System.Data.DataColumn("LPN", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnLPN);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnAdjustmentID}, true));
				this.columnAdjustmentID.AutoIncrement = true;
				this.columnAdjustmentID.AutoIncrementSeed = -1;
				this.columnAdjustmentID.AutoIncrementStep = -1;
				this.columnAdjustmentID.AllowDBNull = false;
				this.columnAdjustmentID.ReadOnly = true;
				this.columnAdjustmentID.Unique = true;
				this.columnItemID.Caption = "Item";
				this.columnReason.MaxLength = 150;
				this.columnrv.ReadOnly = true;
				this.columnstrEnteredBy.MaxLength = 50;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryAdjustmentRow NewInventoryAdjustmentRow()
			{
				return (InventoryAdjustmentRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new InventoryAdjustmentRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(InventoryAdjustmentRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.InventoryAdjustmentRowChanged) != null)
				{
					InventoryAdjustmentRowChanged(this, new InventoryAdjustmentRowChangeEvent((InventoryAdjustmentRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.InventoryAdjustmentRowChanging) != null)
				{
					InventoryAdjustmentRowChanging(this, new InventoryAdjustmentRowChangeEvent((InventoryAdjustmentRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.InventoryAdjustmentRowDeleted) != null)
				{
					InventoryAdjustmentRowDeleted(this, new InventoryAdjustmentRowChangeEvent((InventoryAdjustmentRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.InventoryAdjustmentRowDeleting) != null)
				{
					InventoryAdjustmentRowDeleting(this, new InventoryAdjustmentRowChangeEvent((InventoryAdjustmentRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveInventoryAdjustmentRow(InventoryAdjustmentRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "InventoryAdjustmentDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class AuditTrailDataTable : System.Data.TypedTableBase<AuditTrailRow>
		{
			private global::System.Data.DataColumn columnPK_ID;

			private global::System.Data.DataColumn columnRecordID;

			private global::System.Data.DataColumn columnRecordType;

			private global::System.Data.DataColumn columnRecordChanges;

			private global::System.Data.DataColumn columnChangeDate;

			private global::System.Data.DataColumn columnUserID;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public AuditTrailDataTable() : base()
			{
				this.TableName = "AuditTrail";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal AuditTrailDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected AuditTrailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn PK_IDColumn
			{
				get
				{
					return this.columnPK_ID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn RecordIDColumn
			{
				get
				{
					return this.columnRecordID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn RecordTypeColumn
			{
				get
				{
					return this.columnRecordType;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn RecordChangesColumn
			{
				get
				{
					return this.columnRecordChanges;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ChangeDateColumn
			{
				get
				{
					return this.columnChangeDate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn UserIDColumn
			{
				get
				{
					return this.columnUserID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public AuditTrailRow this[int index]
			{
				get
				{
					return (AuditTrailRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event AuditTrailRowChangeEventHandler AuditTrailRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event AuditTrailRowChangeEventHandler AuditTrailRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event AuditTrailRowChangeEventHandler AuditTrailRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event AuditTrailRowChangeEventHandler AuditTrailRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddAuditTrailRow(AuditTrailRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public AuditTrailRow AddAuditTrailRow(int RecordID, string RecordType, string RecordChanges, DateTime ChangeDate, string UserID)
			{
				AuditTrailRow rowAuditTrailRow = (AuditTrailRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, RecordID, RecordType, RecordChanges, ChangeDate, UserID};
				rowAuditTrailRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowAuditTrailRow);
				return rowAuditTrailRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public AuditTrailRow FindByPK_ID(int PK_ID)
			{
				return (AuditTrailRow)this.Rows.Find(new object[] {PK_ID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				AuditTrailDataTable cln = (AuditTrailDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new AuditTrailDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnPK_ID = base.Columns["PK_ID"];
				this.columnRecordID = base.Columns["RecordID"];
				this.columnRecordType = base.Columns["RecordType"];
				this.columnRecordChanges = base.Columns["RecordChanges"];
				this.columnChangeDate = base.Columns["ChangeDate"];
				this.columnUserID = base.Columns["UserID"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnPK_ID = new global::System.Data.DataColumn("PK_ID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnPK_ID);
				this.columnRecordID = new global::System.Data.DataColumn("RecordID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnRecordID);
				this.columnRecordType = new global::System.Data.DataColumn("RecordType", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnRecordType);
				this.columnRecordChanges = new global::System.Data.DataColumn("RecordChanges", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnRecordChanges);
				this.columnChangeDate = new global::System.Data.DataColumn("ChangeDate", typeof(DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnChangeDate);
				this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnUserID);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnPK_ID}, true));
				this.columnPK_ID.AutoIncrement = true;
				this.columnPK_ID.AutoIncrementSeed = -1;
				this.columnPK_ID.AutoIncrementStep = -1;
				this.columnPK_ID.AllowDBNull = false;
				this.columnPK_ID.ReadOnly = true;
				this.columnPK_ID.Unique = true;
				this.columnRecordType.MaxLength = 50;
				this.columnRecordChanges.MaxLength = 2147483647;
				this.columnUserID.MaxLength = 50;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public AuditTrailRow NewAuditTrailRow()
			{
				return (AuditTrailRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new AuditTrailRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(AuditTrailRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.AuditTrailRowChanged) != null)
				{
					AuditTrailRowChanged(this, new AuditTrailRowChangeEvent((AuditTrailRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.AuditTrailRowChanging) != null)
				{
					AuditTrailRowChanging(this, new AuditTrailRowChangeEvent((AuditTrailRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.AuditTrailRowDeleted) != null)
				{
					AuditTrailRowDeleted(this, new AuditTrailRowChangeEvent((AuditTrailRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.AuditTrailRowDeleting) != null)
				{
					AuditTrailRowDeleting(this, new AuditTrailRowChangeEvent((AuditTrailRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveAuditTrailRow(AuditTrailRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "AuditTrailDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class InventoryBOMsDataTable : System.Data.TypedTableBase<InventoryBOMsRow>
		{
			private global::System.Data.DataColumn columnInventoryBOMID;

			private global::System.Data.DataColumn columnInventoryBOMRawMatID;

			private global::System.Data.DataColumn columnInventoryBOMInventoryID;

			private global::System.Data.DataColumn columnInventoryBOMQuantity;

			private global::System.Data.DataColumn columnts;

			private global::System.Data.DataColumn columnScrapFactor;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryBOMsDataTable() : base()
			{
				this.TableName = "InventoryBOMs";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal InventoryBOMsDataTable(global::System.Data.DataTable table) : base()
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected InventoryBOMsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn InventoryBOMIDColumn
			{
				get
				{
					return this.columnInventoryBOMID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn InventoryBOMRawMatIDColumn
			{
				get
				{
					return this.columnInventoryBOMRawMatID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn InventoryBOMInventoryIDColumn
			{
				get
				{
					return this.columnInventoryBOMInventoryID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn InventoryBOMQuantityColumn
			{
				get
				{
					return this.columnInventoryBOMQuantity;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn tsColumn
			{
				get
				{
					return this.columnts;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataColumn ScrapFactorColumn
			{
				get
				{
					return this.columnScrapFactor;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryBOMsRow this[int index]
			{
				get
				{
					return (InventoryBOMsRow)this.Rows[index];
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event InventoryBOMsRowChangeEventHandler InventoryBOMsRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event InventoryBOMsRowChangeEventHandler InventoryBOMsRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event InventoryBOMsRowChangeEventHandler InventoryBOMsRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public event InventoryBOMsRowChangeEventHandler InventoryBOMsRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void AddInventoryBOMsRow(InventoryBOMsRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryBOMsRow AddInventoryBOMsRow(ItemsRow parentItemsRowByFK_tblItems_tblInventoryBOMs, InventoryRow parentInventoryRowByFK_tblInventoryBOMs_tblInventory, float InventoryBOMQuantity, byte[] ts, double ScrapFactor)
			{
				InventoryBOMsRow rowInventoryBOMsRow = (InventoryBOMsRow)this.NewRow();
				object[] columnValuesArray = new object[] {null, null, null, InventoryBOMQuantity, ts, ScrapFactor};
				if ((parentItemsRowByFK_tblItems_tblInventoryBOMs) != null)
				{
					columnValuesArray[1] = parentItemsRowByFK_tblItems_tblInventoryBOMs[0];
				}
				if ((parentInventoryRowByFK_tblInventoryBOMs_tblInventory) != null)
				{
					columnValuesArray[2] = parentInventoryRowByFK_tblInventoryBOMs_tblInventory[0];
				}
				rowInventoryBOMsRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowInventoryBOMsRow);
				return rowInventoryBOMsRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryBOMsRow FindByInventoryBOMID(int InventoryBOMID)
			{
				return (InventoryBOMsRow)this.Rows.Find(new object[] {InventoryBOMID});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				InventoryBOMsDataTable cln = (InventoryBOMsDataTable)base.Clone();
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new InventoryBOMsDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal void InitVars()
			{
				this.columnInventoryBOMID = base.Columns["InventoryBOMID"];
				this.columnInventoryBOMRawMatID = base.Columns["InventoryBOMRawMatID"];
				this.columnInventoryBOMInventoryID = base.Columns["InventoryBOMInventoryID"];
				this.columnInventoryBOMQuantity = base.Columns["InventoryBOMQuantity"];
				this.columnts = base.Columns["ts"];
				this.columnScrapFactor = base.Columns["ScrapFactor"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitClass()
			{
				this.columnInventoryBOMID = new global::System.Data.DataColumn("InventoryBOMID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnInventoryBOMID);
				this.columnInventoryBOMRawMatID = new global::System.Data.DataColumn("InventoryBOMRawMatID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnInventoryBOMRawMatID);
				this.columnInventoryBOMInventoryID = new global::System.Data.DataColumn("InventoryBOMInventoryID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnInventoryBOMInventoryID);
				this.columnInventoryBOMQuantity = new global::System.Data.DataColumn("InventoryBOMQuantity", typeof(float), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnInventoryBOMQuantity);
				this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnts);
				this.columnScrapFactor = new global::System.Data.DataColumn("ScrapFactor", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnScrapFactor);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnInventoryBOMID}, true));
				this.columnInventoryBOMID.AutoIncrement = true;
				this.columnInventoryBOMID.AutoIncrementSeed = -1;
				this.columnInventoryBOMID.AutoIncrementStep = -1;
				this.columnInventoryBOMID.AllowDBNull = false;
				this.columnInventoryBOMID.ReadOnly = true;
				this.columnInventoryBOMID.Unique = true;
				this.columnts.ReadOnly = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryBOMsRow NewInventoryBOMsRow()
			{
				return (InventoryBOMsRow)this.NewRow();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new InventoryBOMsRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(InventoryBOMsRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.InventoryBOMsRowChanged) != null)
				{
					InventoryBOMsRowChanged(this, new InventoryBOMsRowChangeEvent((InventoryBOMsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.InventoryBOMsRowChanging) != null)
				{
					InventoryBOMsRowChanging(this, new InventoryBOMsRowChangeEvent((InventoryBOMsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.InventoryBOMsRowDeleted) != null)
				{
					InventoryBOMsRowDeleted(this, new InventoryBOMsRowChangeEvent((InventoryBOMsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.InventoryBOMsRowDeleting) != null)
				{
					InventoryBOMsRowDeleting(this, new InventoryBOMsRowChangeEvent((InventoryBOMsRow)e.Row, e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void RemoveInventoryBOMsRow(InventoryBOMsRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				SPG ds = new SPG();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "InventoryBOMsDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema)schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;

								while ((s1.Position != s1.Length) && (s1.ReadByte() == s2.ReadByte()))
								{


								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}

						}
					}
					finally
					{
						if ((s1) != null)
						{
							s1.Close();
						}
						if ((s2) != null)
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class SecurityRow : System.Data.DataRow
		{
			private SecurityDataTable tableSecurity;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal SecurityRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableSecurity = (SecurityDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strUser
			{
				get
				{
					return (this[this.tableSecurity.strUserColumn] == null ? null : Convert.ToString(this[this.tableSecurity.strUserColumn]));
				}
				set
				{
					this[this.tableSecurity.strUserColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool AdvancedTabs
			{
				get
				{
					return Convert.ToBoolean(this[this.tableSecurity.AdvancedTabsColumn]);
				}
				set
				{
					this[this.tableSecurity.AdvancedTabsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ProductionReport
			{
				get
				{
					return Convert.ToBoolean(this[this.tableSecurity.ProductionReportColumn]);
				}
				set
				{
					this[this.tableSecurity.ProductionReportColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool CostingReport
			{
				get
				{
					return Convert.ToBoolean(this[this.tableSecurity.CostingReportColumn]);
				}
				set
				{
					this[this.tableSecurity.CostingReportColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ItemsForm
			{
				get
				{
					return Convert.ToBoolean(this[this.tableSecurity.ItemsFormColumn]);
				}
				set
				{
					this[this.tableSecurity.ItemsFormColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ProductionForm
			{
				get
				{
					return Convert.ToBoolean(this[this.tableSecurity.ProductionFormColumn]);
				}
				set
				{
					this[this.tableSecurity.ProductionFormColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool CustomersForm
			{
				get
				{
					return Convert.ToBoolean(this[this.tableSecurity.CustomersFormColumn]);
				}
				set
				{
					this[this.tableSecurity.CustomersFormColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ShippingForm
			{
				get
				{
					return Convert.ToBoolean(this[this.tableSecurity.ShippingFormColumn]);
				}
				set
				{
					this[this.tableSecurity.ShippingFormColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ReceivingForm
			{
				get
				{
					return Convert.ToBoolean(this[this.tableSecurity.ReceivingFormColumn]);
				}
				set
				{
					this[this.tableSecurity.ReceivingFormColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool FinancialTabs
			{
				get
				{
					return Convert.ToBoolean(this[this.tableSecurity.FinancialTabsColumn]);
				}
				set
				{
					this[this.tableSecurity.FinancialTabsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableSecurity.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'Security' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableSecurity.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UsersRow UsersRow
			{
				get
				{
					return (UsersRow)this.GetParentRow(this.Table.ParentRelations["FK_tblUsers_Security"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblUsers_Security"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableSecurity.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableSecurity.tsColumn] = Convert.DBNull;
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class UsersRow : System.Data.DataRow
		{
			private UsersDataTable tableUsers;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal UsersRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableUsers = (UsersDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strUserName
			{
				get
				{
					return (this[this.tableUsers.strUserNameColumn] == null ? null : Convert.ToString(this[this.tableUsers.strUserNameColumn]));
				}
				set
				{
					this[this.tableUsers.strUserNameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strPassword
			{
				get
				{
					try
					{
						return (this[this.tableUsers.strPasswordColumn] == null ? null : Convert.ToString(this[this.tableUsers.strPasswordColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'strPassword' in table 'Users' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableUsers.strPasswordColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strSecurityLevel
			{
				get
				{
					try
					{
						return (this[this.tableUsers.strSecurityLevelColumn] == null ? null : Convert.ToString(this[this.tableUsers.strSecurityLevelColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'strSecurityLevel' in table 'Users' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableUsers.strSecurityLevelColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableUsers.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'Users' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableUsers.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrPasswordNull()
			{
				return this.IsNull(this.tableUsers.strPasswordColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrPasswordNull()
			{
				this[this.tableUsers.strPasswordColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrSecurityLevelNull()
			{
				return this.IsNull(this.tableUsers.strSecurityLevelColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrSecurityLevelNull()
			{
				this[this.tableUsers.strSecurityLevelColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableUsers.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableUsers.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public SecurityRow[] GetSecurityRows()
			{
				if (this.Table.ChildRelations["FK_tblUsers_Security"] == null)
				{
					return new SecurityRow[0];
				}
				else
				{
					return (SecurityRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblUsers_Security"]);
				}
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class CustomersRow : System.Data.DataRow
		{
			private CustomersDataTable tableCustomers;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal CustomersRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableCustomers = (CustomersDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int CustomerID
			{
				get
				{
					return Convert.ToInt32(this[this.tableCustomers.CustomerIDColumn]);
				}
				set
				{
					this[this.tableCustomers.CustomerIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string CustomerName
			{
				get
				{
					if (this.IsCustomerNameNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableCustomers.CustomerNameColumn] == null ? null : Convert.ToString(this[this.tableCustomers.CustomerNameColumn]));
					}
				}
				set
				{
					this[this.tableCustomers.CustomerNameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string CustomerContact
			{
				get
				{
					if (this.IsCustomerContactNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableCustomers.CustomerContactColumn] == null ? null : Convert.ToString(this[this.tableCustomers.CustomerContactColumn]));
					}
				}
				set
				{
					this[this.tableCustomers.CustomerContactColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string CustomerPhone
			{
				get
				{
					if (this.IsCustomerPhoneNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableCustomers.CustomerPhoneColumn] == null ? null : Convert.ToString(this[this.tableCustomers.CustomerPhoneColumn]));
					}
				}
				set
				{
					this[this.tableCustomers.CustomerPhoneColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string CustomerEmail
			{
				get
				{
					if (this.IsCustomerEmailNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableCustomers.CustomerEmailColumn] == null ? null : Convert.ToString(this[this.tableCustomers.CustomerEmailColumn]));
					}
				}
				set
				{
					this[this.tableCustomers.CustomerEmailColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string CustomerFax
			{
				get
				{
					if (this.IsCustomerFaxNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableCustomers.CustomerFaxColumn] == null ? null : Convert.ToString(this[this.tableCustomers.CustomerFaxColumn]));
					}
				}
				set
				{
					this[this.tableCustomers.CustomerFaxColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string CustomerNote
			{
				get
				{
					if (this.IsCustomerNoteNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableCustomers.CustomerNoteColumn] == null ? null : Convert.ToString(this[this.tableCustomers.CustomerNoteColumn]));
					}
				}
				set
				{
					this[this.tableCustomers.CustomerNoteColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strEnteredBy
			{
				get
				{
					if (this.IsstrEnteredByNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableCustomers.strEnteredByColumn] == null ? null : Convert.ToString(this[this.tableCustomers.strEnteredByColumn]));
					}
				}
				set
				{
					this[this.tableCustomers.strEnteredByColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime dtmEnteredOn
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableCustomers.dtmEnteredOnColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'dtmEnteredOn' in table 'Customers' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableCustomers.dtmEnteredOnColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableCustomers.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'Customers' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableCustomers.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Address
			{
				get
				{
					if (this.IsAddressNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableCustomers.AddressColumn] == null ? null : Convert.ToString(this[this.tableCustomers.AddressColumn]));
					}
				}
				set
				{
					this[this.tableCustomers.AddressColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string City
			{
				get
				{
					if (this.IsCityNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableCustomers.CityColumn] == null ? null : Convert.ToString(this[this.tableCustomers.CityColumn]));
					}
				}
				set
				{
					this[this.tableCustomers.CityColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string State
			{
				get
				{
					if (this.IsStateNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableCustomers.StateColumn] == null ? null : Convert.ToString(this[this.tableCustomers.StateColumn]));
					}
				}
				set
				{
					this[this.tableCustomers.StateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ZipCode
			{
				get
				{
					if (this.IsZipCodeNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableCustomers.ZipCodeColumn] == null ? null : Convert.ToString(this[this.tableCustomers.ZipCodeColumn]));
					}
				}
				set
				{
					this[this.tableCustomers.ZipCodeColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool Inactive
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableCustomers.InactiveColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'Inactive' in table 'Customers' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableCustomers.InactiveColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCustomerNameNull()
			{
				return this.IsNull(this.tableCustomers.CustomerNameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCustomerNameNull()
			{
				this[this.tableCustomers.CustomerNameColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCustomerContactNull()
			{
				return this.IsNull(this.tableCustomers.CustomerContactColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCustomerContactNull()
			{
				this[this.tableCustomers.CustomerContactColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCustomerPhoneNull()
			{
				return this.IsNull(this.tableCustomers.CustomerPhoneColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCustomerPhoneNull()
			{
				this[this.tableCustomers.CustomerPhoneColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCustomerEmailNull()
			{
				return this.IsNull(this.tableCustomers.CustomerEmailColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCustomerEmailNull()
			{
				this[this.tableCustomers.CustomerEmailColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCustomerFaxNull()
			{
				return this.IsNull(this.tableCustomers.CustomerFaxColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCustomerFaxNull()
			{
				this[this.tableCustomers.CustomerFaxColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCustomerNoteNull()
			{
				return this.IsNull(this.tableCustomers.CustomerNoteColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCustomerNoteNull()
			{
				this[this.tableCustomers.CustomerNoteColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrEnteredByNull()
			{
				return this.IsNull(this.tableCustomers.strEnteredByColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrEnteredByNull()
			{
				this[this.tableCustomers.strEnteredByColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdtmEnteredOnNull()
			{
				return this.IsNull(this.tableCustomers.dtmEnteredOnColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdtmEnteredOnNull()
			{
				this[this.tableCustomers.dtmEnteredOnColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableCustomers.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableCustomers.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsAddressNull()
			{
				return this.IsNull(this.tableCustomers.AddressColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetAddressNull()
			{
				this[this.tableCustomers.AddressColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCityNull()
			{
				return this.IsNull(this.tableCustomers.CityColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCityNull()
			{
				this[this.tableCustomers.CityColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsStateNull()
			{
				return this.IsNull(this.tableCustomers.StateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetStateNull()
			{
				this[this.tableCustomers.StateColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsZipCodeNull()
			{
				return this.IsNull(this.tableCustomers.ZipCodeColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetZipCodeNull()
			{
				this[this.tableCustomers.ZipCodeColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsInactiveNull()
			{
				return this.IsNull(this.tableCustomers.InactiveColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetInactiveNull()
			{
				this[this.tableCustomers.InactiveColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow[] GetItemsRows()
			{
				if (this.Table.ChildRelations["FK_tblItems_tblCustomers"] == null)
				{
					return new ItemsRow[0];
				}
				else
				{
					return (ItemsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblItems_tblCustomers"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingsRow[] GetReceivingsRows()
			{
				if (this.Table.ChildRelations["FK_tblReceivMain_tblCustomers"] == null)
				{
					return new ReceivingsRow[0];
				}
				else
				{
					return (ReceivingsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblReceivMain_tblCustomers"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingsRow[] GetShippingsRows()
			{
				if (this.Table.ChildRelations["FK_tblShipMain_tblCustomers"] == null)
				{
					return new ShippingsRow[0];
				}
				else
				{
					return (ShippingsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblShipMain_tblCustomers"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryAdjustmentRow[] GetInventoryAdjustmentRows()
			{
				if (this.Table.ChildRelations["FK_tblInventoryAdjustment_Customer"] == null)
				{
					return new InventoryAdjustmentRow[0];
				}
				else
				{
					return (InventoryAdjustmentRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblInventoryAdjustment_Customer"]);
				}
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class ItemsRow : System.Data.DataRow
		{
			private ItemsDataTable tableItems;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ItemsRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableItems = (ItemsDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ItemID
			{
				get
				{
					return Convert.ToInt32(this[this.tableItems.ItemIDColumn]);
				}
				set
				{
					this[this.tableItems.ItemIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ItemCode
			{
				get
				{
					if (this.IsItemCodeNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableItems.ItemCodeColumn] == null ? null : Convert.ToString(this[this.tableItems.ItemCodeColumn]));
					}
				}
				set
				{
					this[this.tableItems.ItemCodeColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ItemDescription
			{
				get
				{
					if (this.IsItemDescriptionNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableItems.ItemDescriptionColumn] == null ? null : Convert.ToString(this[this.tableItems.ItemDescriptionColumn]));
					}
				}
				set
				{
					this[this.tableItems.ItemDescriptionColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ItemType
			{
				get
				{
					if (this.IsItemTypeNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableItems.ItemTypeColumn] == null ? null : Convert.ToString(this[this.tableItems.ItemTypeColumn]));
					}
				}
				set
				{
					this[this.tableItems.ItemTypeColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ItemCustomerID
			{
				get
				{
					if (this.IsItemCustomerIDNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableItems.ItemCustomerIDColumn]);
					}
				}
				set
				{
					this[this.tableItems.ItemCustomerIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ItemDefaultMachine
			{
				get
				{
					if (this.IsItemDefaultMachineNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableItems.ItemDefaultMachineColumn]);
					}
				}
				set
				{
					this[this.tableItems.ItemDefaultMachineColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ItemPicture
			{
				get
				{
					if (this.IsItemPictureNull())
					{
						return null;
					}
					else
					{
						return (byte[])this[this.tableItems.ItemPictureColumn];
					}
				}
				set
				{
					this[this.tableItems.ItemPictureColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double dblPrice
			{
				get
				{
					if (this.IsdblPriceNull())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableItems.dblPriceColumn]);
					}
				}
				set
				{
					this[this.tableItems.dblPriceColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float sngRebate
			{
				get
				{
					if (this.IssngRebateNull())
					{
						return 0F;
					}
					else
					{
						return Convert.ToSingle(this[this.tableItems.sngRebateColumn]);
					}
				}
				set
				{
					this[this.tableItems.sngRebateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strUnitOfMeasure
			{
				get
				{
					if (this.IsstrUnitOfMeasureNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableItems.strUnitOfMeasureColumn] == null ? null : Convert.ToString(this[this.tableItems.strUnitOfMeasureColumn]));
					}
				}
				set
				{
					this[this.tableItems.strUnitOfMeasureColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double intQtyPerUnit
			{
				get
				{
					if (this.IsintQtyPerUnitNull())
					{
						return 1D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableItems.intQtyPerUnitColumn]);
					}
				}
				set
				{
					this[this.tableItems.intQtyPerUnitColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strEnteredBy
			{
				get
				{
					if (this.IsstrEnteredByNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableItems.strEnteredByColumn] == null ? null : Convert.ToString(this[this.tableItems.strEnteredByColumn]));
					}
				}
				set
				{
					this[this.tableItems.strEnteredByColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime dtmEnteredOn
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableItems.dtmEnteredOnColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'dtmEnteredOn' in table 'Items' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableItems.dtmEnteredOnColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double dblFreight
			{
				get
				{
					if (this.IsdblFreightNull())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableItems.dblFreightColumn]);
					}
				}
				set
				{
					this[this.tableItems.dblFreightColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double dblFilm
			{
				get
				{
					if (this.IsdblFilmNull())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableItems.dblFilmColumn]);
					}
				}
				set
				{
					this[this.tableItems.dblFilmColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double dblBoxes
			{
				get
				{
					if (this.IsdblBoxesNull())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableItems.dblBoxesColumn]);
					}
				}
				set
				{
					this[this.tableItems.dblBoxesColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double dblStretchWrap
			{
				get
				{
					if (this.IsdblStretchWrapNull())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableItems.dblStretchWrapColumn]);
					}
				}
				set
				{
					this[this.tableItems.dblStretchWrapColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double dblPallets
			{
				get
				{
					if (this.IsdblPalletsNull())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableItems.dblPalletsColumn]);
					}
				}
				set
				{
					this[this.tableItems.dblPalletsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double dblOther1
			{
				get
				{
					if (this.IsdblOther1Null())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableItems.dblOther1Column]);
					}
				}
				set
				{
					this[this.tableItems.dblOther1Column] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double dblOther2
			{
				get
				{
					if (this.IsdblOther2Null())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableItems.dblOther2Column]);
					}
				}
				set
				{
					this[this.tableItems.dblOther2Column] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double dblOther3
			{
				get
				{
					if (this.IsdblOther3Null())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableItems.dblOther3Column]);
					}
				}
				set
				{
					this[this.tableItems.dblOther3Column] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double dblOther4
			{
				get
				{
					if (this.IsdblOther4Null())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableItems.dblOther4Column]);
					}
				}
				set
				{
					this[this.tableItems.dblOther4Column] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double dblOther5
			{
				get
				{
					if (this.IsdblOther5Null())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableItems.dblOther5Column]);
					}
				}
				set
				{
					this[this.tableItems.dblOther5Column] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double intUnitsPerCase
			{
				get
				{
					if (this.IsintUnitsPerCaseNull())
					{
						return 1D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableItems.intUnitsPerCaseColumn]);
					}
				}
				set
				{
					this[this.tableItems.intUnitsPerCaseColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int intCasesPerPallet
			{
				get
				{
					if (this.IsintCasesPerPalletNull())
					{
						return 1;
					}
					else
					{
						return Convert.ToInt32(this[this.tableItems.intCasesPerPalletColumn]);
					}
				}
				set
				{
					this[this.tableItems.intCasesPerPalletColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableItems.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'Items' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableItems.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float sngQuantityOnHand
			{
				get
				{
					if (this.IssngQuantityOnHandNull())
					{
						return 0F;
					}
					else
					{
						return Convert.ToSingle(this[this.tableItems.sngQuantityOnHandColumn]);
					}
				}
				set
				{
					this[this.tableItems.sngQuantityOnHandColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int intUnitsPerPallet
			{
				get
				{
					if (this.IsintUnitsPerPalletNull())
					{
						return 1;
					}
					else
					{
						return Convert.ToInt32(this[this.tableItems.intUnitsPerPalletColumn]);
					}
				}
				set
				{
					this[this.tableItems.intUnitsPerPalletColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double CaseGrossWeight
			{
				get
				{
					if (this.IsCaseGrossWeightNull())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableItems.CaseGrossWeightColumn]);
					}
				}
				set
				{
					this[this.tableItems.CaseGrossWeightColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string PackageCode
			{
				get
				{
					if (this.IsPackageCodeNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableItems.PackageCodeColumn] == null ? null : Convert.ToString(this[this.tableItems.PackageCodeColumn]));
					}
				}
				set
				{
					this[this.tableItems.PackageCodeColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string CaseCode
			{
				get
				{
					if (this.IsCaseCodeNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableItems.CaseCodeColumn] == null ? null : Convert.ToString(this[this.tableItems.CaseCodeColumn]));
					}
				}
				set
				{
					this[this.tableItems.CaseCodeColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string RequiredWeight
			{
				get
				{
					if (this.IsRequiredWeightNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableItems.RequiredWeightColumn] == null ? null : Convert.ToString(this[this.tableItems.RequiredWeightColumn]));
					}
				}
				set
				{
					this[this.tableItems.RequiredWeightColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string MAV
			{
				get
				{
					if (this.IsMAVNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableItems.MAVColumn] == null ? null : Convert.ToString(this[this.tableItems.MAVColumn]));
					}
				}
				set
				{
					this[this.tableItems.MAVColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string CasesPerLayer
			{
				get
				{
					if (this.IsCasesPerLayerNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableItems.CasesPerLayerColumn] == null ? null : Convert.ToString(this[this.tableItems.CasesPerLayerColumn]));
					}
				}
				set
				{
					this[this.tableItems.CasesPerLayerColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string LayersPerPallet
			{
				get
				{
					if (this.IsLayersPerPalletNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableItems.LayersPerPalletColumn] == null ? null : Convert.ToString(this[this.tableItems.LayersPerPalletColumn]));
					}
				}
				set
				{
					this[this.tableItems.LayersPerPalletColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ShelfLife
			{
				get
				{
					if (this.IsShelfLifeNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableItems.ShelfLifeColumn] == null ? null : Convert.ToString(this[this.tableItems.ShelfLifeColumn]));
					}
				}
				set
				{
					this[this.tableItems.ShelfLifeColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Instructions
			{
				get
				{
					if (this.IsInstructionsNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableItems.InstructionsColumn] == null ? null : Convert.ToString(this[this.tableItems.InstructionsColumn]));
					}
				}
				set
				{
					this[this.tableItems.InstructionsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string PalletPattern
			{
				get
				{
					if (this.IsPalletPatternNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableItems.PalletPatternColumn] == null ? null : Convert.ToString(this[this.tableItems.PalletPatternColumn]));
					}
				}
				set
				{
					this[this.tableItems.PalletPatternColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool Inactive
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableItems.InactiveColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'Inactive' in table 'Items' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableItems.InactiveColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double Packers
			{
				get
				{
					try
					{
						return Convert.ToDouble(this[this.tableItems.PackersColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'Packers' in table 'Items' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableItems.PackersColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double ItemProdStandard
			{
				get
				{
					try
					{
						return Convert.ToDouble(this[this.tableItems.ItemProdStandardColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ItemProdStandard' in table 'Items' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableItems.ItemProdStandardColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string UPC
			{
				get
				{
					try
					{
						return (this[this.tableItems.UPCColumn] == null ? null : Convert.ToString(this[this.tableItems.UPCColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'UPC' in table 'Items' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableItems.UPCColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CustomersRow CustomersRow
			{
				get
				{
					return (CustomersRow)this.GetParentRow(this.Table.ParentRelations["FK_tblItems_tblCustomers"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblItems_tblCustomers"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsItemCodeNull()
			{
				return this.IsNull(this.tableItems.ItemCodeColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetItemCodeNull()
			{
				this[this.tableItems.ItemCodeColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsItemDescriptionNull()
			{
				return this.IsNull(this.tableItems.ItemDescriptionColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetItemDescriptionNull()
			{
				this[this.tableItems.ItemDescriptionColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsItemTypeNull()
			{
				return this.IsNull(this.tableItems.ItemTypeColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetItemTypeNull()
			{
				this[this.tableItems.ItemTypeColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsItemCustomerIDNull()
			{
				return this.IsNull(this.tableItems.ItemCustomerIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetItemCustomerIDNull()
			{
				this[this.tableItems.ItemCustomerIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsItemDefaultMachineNull()
			{
				return this.IsNull(this.tableItems.ItemDefaultMachineColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetItemDefaultMachineNull()
			{
				this[this.tableItems.ItemDefaultMachineColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsItemPictureNull()
			{
				return this.IsNull(this.tableItems.ItemPictureColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetItemPictureNull()
			{
				this[this.tableItems.ItemPictureColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdblPriceNull()
			{
				return this.IsNull(this.tableItems.dblPriceColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdblPriceNull()
			{
				this[this.tableItems.dblPriceColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IssngRebateNull()
			{
				return this.IsNull(this.tableItems.sngRebateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetsngRebateNull()
			{
				this[this.tableItems.sngRebateColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrUnitOfMeasureNull()
			{
				return this.IsNull(this.tableItems.strUnitOfMeasureColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrUnitOfMeasureNull()
			{
				this[this.tableItems.strUnitOfMeasureColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsintQtyPerUnitNull()
			{
				return this.IsNull(this.tableItems.intQtyPerUnitColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetintQtyPerUnitNull()
			{
				this[this.tableItems.intQtyPerUnitColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrEnteredByNull()
			{
				return this.IsNull(this.tableItems.strEnteredByColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrEnteredByNull()
			{
				this[this.tableItems.strEnteredByColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdtmEnteredOnNull()
			{
				return this.IsNull(this.tableItems.dtmEnteredOnColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdtmEnteredOnNull()
			{
				this[this.tableItems.dtmEnteredOnColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdblFreightNull()
			{
				return this.IsNull(this.tableItems.dblFreightColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdblFreightNull()
			{
				this[this.tableItems.dblFreightColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdblFilmNull()
			{
				return this.IsNull(this.tableItems.dblFilmColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdblFilmNull()
			{
				this[this.tableItems.dblFilmColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdblBoxesNull()
			{
				return this.IsNull(this.tableItems.dblBoxesColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdblBoxesNull()
			{
				this[this.tableItems.dblBoxesColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdblStretchWrapNull()
			{
				return this.IsNull(this.tableItems.dblStretchWrapColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdblStretchWrapNull()
			{
				this[this.tableItems.dblStretchWrapColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdblPalletsNull()
			{
				return this.IsNull(this.tableItems.dblPalletsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdblPalletsNull()
			{
				this[this.tableItems.dblPalletsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdblOther1Null()
			{
				return this.IsNull(this.tableItems.dblOther1Column);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdblOther1Null()
			{
				this[this.tableItems.dblOther1Column] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdblOther2Null()
			{
				return this.IsNull(this.tableItems.dblOther2Column);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdblOther2Null()
			{
				this[this.tableItems.dblOther2Column] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdblOther3Null()
			{
				return this.IsNull(this.tableItems.dblOther3Column);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdblOther3Null()
			{
				this[this.tableItems.dblOther3Column] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdblOther4Null()
			{
				return this.IsNull(this.tableItems.dblOther4Column);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdblOther4Null()
			{
				this[this.tableItems.dblOther4Column] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdblOther5Null()
			{
				return this.IsNull(this.tableItems.dblOther5Column);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdblOther5Null()
			{
				this[this.tableItems.dblOther5Column] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsintUnitsPerCaseNull()
			{
				return this.IsNull(this.tableItems.intUnitsPerCaseColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetintUnitsPerCaseNull()
			{
				this[this.tableItems.intUnitsPerCaseColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsintCasesPerPalletNull()
			{
				return this.IsNull(this.tableItems.intCasesPerPalletColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetintCasesPerPalletNull()
			{
				this[this.tableItems.intCasesPerPalletColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableItems.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableItems.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IssngQuantityOnHandNull()
			{
				return this.IsNull(this.tableItems.sngQuantityOnHandColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetsngQuantityOnHandNull()
			{
				this[this.tableItems.sngQuantityOnHandColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsintUnitsPerPalletNull()
			{
				return this.IsNull(this.tableItems.intUnitsPerPalletColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetintUnitsPerPalletNull()
			{
				this[this.tableItems.intUnitsPerPalletColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCaseGrossWeightNull()
			{
				return this.IsNull(this.tableItems.CaseGrossWeightColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCaseGrossWeightNull()
			{
				this[this.tableItems.CaseGrossWeightColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsPackageCodeNull()
			{
				return this.IsNull(this.tableItems.PackageCodeColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetPackageCodeNull()
			{
				this[this.tableItems.PackageCodeColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCaseCodeNull()
			{
				return this.IsNull(this.tableItems.CaseCodeColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCaseCodeNull()
			{
				this[this.tableItems.CaseCodeColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsRequiredWeightNull()
			{
				return this.IsNull(this.tableItems.RequiredWeightColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetRequiredWeightNull()
			{
				this[this.tableItems.RequiredWeightColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsMAVNull()
			{
				return this.IsNull(this.tableItems.MAVColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetMAVNull()
			{
				this[this.tableItems.MAVColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCasesPerLayerNull()
			{
				return this.IsNull(this.tableItems.CasesPerLayerColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCasesPerLayerNull()
			{
				this[this.tableItems.CasesPerLayerColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsLayersPerPalletNull()
			{
				return this.IsNull(this.tableItems.LayersPerPalletColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetLayersPerPalletNull()
			{
				this[this.tableItems.LayersPerPalletColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShelfLifeNull()
			{
				return this.IsNull(this.tableItems.ShelfLifeColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShelfLifeNull()
			{
				this[this.tableItems.ShelfLifeColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsInstructionsNull()
			{
				return this.IsNull(this.tableItems.InstructionsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetInstructionsNull()
			{
				this[this.tableItems.InstructionsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsPalletPatternNull()
			{
				return this.IsNull(this.tableItems.PalletPatternColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetPalletPatternNull()
			{
				this[this.tableItems.PalletPatternColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsInactiveNull()
			{
				return this.IsNull(this.tableItems.InactiveColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetInactiveNull()
			{
				this[this.tableItems.InactiveColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsPackersNull()
			{
				return this.IsNull(this.tableItems.PackersColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetPackersNull()
			{
				this[this.tableItems.PackersColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsItemProdStandardNull()
			{
				return this.IsNull(this.tableItems.ItemProdStandardColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetItemProdStandardNull()
			{
				this[this.tableItems.ItemProdStandardColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsUPCNull()
			{
				return this.IsNull(this.tableItems.UPCColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetUPCNull()
			{
				this[this.tableItems.UPCColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingDetailsRow[] GetReceivingDetailsRows()
			{
				if (this.Table.ChildRelations["FK_tblItems_tblReceivDet"] == null)
				{
					return new ReceivingDetailsRow[0];
				}
				else
				{
					return (ReceivingDetailsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblItems_tblReceivDet"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ProductionRow[] GetProductionRows()
			{
				if (this.Table.ChildRelations["FK_tblItems_tblProdMain"] == null)
				{
					return new ProductionRow[0];
				}
				else
				{
					return (ProductionRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblItems_tblProdMain"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingDetailsRow[] GetShippingDetailsRows()
			{
				if (this.Table.ChildRelations["FK_tblItems_tblShipDet"] == null)
				{
					return new ShippingDetailsRow[0];
				}
				else
				{
					return (ShippingDetailsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblItems_tblShipDet"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public BOMRow[] GetBOMRowsByFK_tblBOMs_tblItems()
			{
				if (this.Table.ChildRelations["FK_tblBOMs_tblItems"] == null)
				{
					return new BOMRow[0];
				}
				else
				{
					return (BOMRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblBOMs_tblItems"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public BOMRow[] GetBOMRowsByFK_tblItems_tblBOMs()
			{
				if (this.Table.ChildRelations["FK_tblItems_tblBOMs"] == null)
				{
					return new BOMRow[0];
				}
				else
				{
					return (BOMRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblItems_tblBOMs"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReturnDetRow[] GetReturnDetRows()
			{
				if (this.Table.ChildRelations["FK_tblItems_tblReturnDet"] == null)
				{
					return new ReturnDetRow[0];
				}
				else
				{
					return (ReturnDetRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblItems_tblReturnDet"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingReturnDetailsRow[] GetShippingReturnDetailsRows()
			{
				if (this.Table.ChildRelations["FK_tblItems_tblShipReturnDet"] == null)
				{
					return new ShippingReturnDetailsRow[0];
				}
				else
				{
					return (ShippingReturnDetailsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblItems_tblShipReturnDet"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryBOMsRow[] GetInventoryBOMsRows()
			{
				if (this.Table.ChildRelations["FK_tblItems_tblInventoryBOMs"] == null)
				{
					return new InventoryBOMsRow[0];
				}
				else
				{
					return (InventoryBOMsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblItems_tblInventoryBOMs"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryRow[] GetInventoryRows()
			{
				if (this.Table.ChildRelations["FK_tblInventory_InventoryItemID"] == null)
				{
					return new InventoryRow[0];
				}
				else
				{
					return (InventoryRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblInventory_InventoryItemID"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryAdjustmentRow[] GetInventoryAdjustmentRows()
			{
				if (this.Table.ChildRelations["FK_tblInventoryAdjustment_Item"] == null)
				{
					return new InventoryAdjustmentRow[0];
				}
				else
				{
					return (InventoryAdjustmentRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblInventoryAdjustment_Item"]);
				}
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class ReceivingDetailsRow : System.Data.DataRow
		{
			private ReceivingDetailsDataTable tableReceivingDetails;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ReceivingDetailsRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableReceivingDetails = (ReceivingDetailsDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReceivDetID
			{
				get
				{
					return Convert.ToInt32(this[this.tableReceivingDetails.ReceivDetIDColumn]);
				}
				set
				{
					this[this.tableReceivingDetails.ReceivDetIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReceivMainID
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableReceivingDetails.ReceivMainIDColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ReceivMainID' in table 'ReceivingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivingDetails.ReceivMainIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReceivDetItemID
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableReceivingDetails.ReceivDetItemIDColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ReceivDetItemID' in table 'ReceivingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivingDetails.ReceivDetItemIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ReceivDetLot
			{
				get
				{
					if (this.IsReceivDetLotNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableReceivingDetails.ReceivDetLotColumn] == null ? null : Convert.ToString(this[this.tableReceivingDetails.ReceivDetLotColumn]));
					}
				}
				set
				{
					this[this.tableReceivingDetails.ReceivDetLotColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReceivDetQty
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableReceivingDetails.ReceivDetQtyColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ReceivDetQty' in table 'ReceivingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivingDetails.ReceivDetQtyColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int intUnits
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableReceivingDetails.intUnitsColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'intUnits' in table 'ReceivingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivingDetails.intUnitsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableReceivingDetails.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'ReceivingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivingDetails.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime ExpirationDate
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableReceivingDetails.ExpirationDateColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ExpirationDate' in table 'ReceivingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivingDetails.ExpirationDateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReceivDetLPN
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableReceivingDetails.ReceivDetLPNColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ReceivDetLPN' in table 'ReceivingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivingDetails.ReceivDetLPNColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow ItemsRow
			{
				get
				{
					return (ItemsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblItems_tblReceivDet"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblItems_tblReceivDet"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingsRow ReceivingsRow
			{
				get
				{
					return (ReceivingsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblReceivDet_tblReceivMain"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblReceivDet_tblReceivMain"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReceivMainIDNull()
			{
				return this.IsNull(this.tableReceivingDetails.ReceivMainIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReceivMainIDNull()
			{
				this[this.tableReceivingDetails.ReceivMainIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReceivDetItemIDNull()
			{
				return this.IsNull(this.tableReceivingDetails.ReceivDetItemIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReceivDetItemIDNull()
			{
				this[this.tableReceivingDetails.ReceivDetItemIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReceivDetLotNull()
			{
				return this.IsNull(this.tableReceivingDetails.ReceivDetLotColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReceivDetLotNull()
			{
				this[this.tableReceivingDetails.ReceivDetLotColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReceivDetQtyNull()
			{
				return this.IsNull(this.tableReceivingDetails.ReceivDetQtyColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReceivDetQtyNull()
			{
				this[this.tableReceivingDetails.ReceivDetQtyColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsintUnitsNull()
			{
				return this.IsNull(this.tableReceivingDetails.intUnitsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetintUnitsNull()
			{
				this[this.tableReceivingDetails.intUnitsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableReceivingDetails.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableReceivingDetails.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsExpirationDateNull()
			{
				return this.IsNull(this.tableReceivingDetails.ExpirationDateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetExpirationDateNull()
			{
				this[this.tableReceivingDetails.ExpirationDateColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReceivDetLPNNull()
			{
				return this.IsNull(this.tableReceivingDetails.ReceivDetLPNColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReceivDetLPNNull()
			{
				this[this.tableReceivingDetails.ReceivDetLPNColumn] = Convert.DBNull;
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class ReceivingsRow : System.Data.DataRow
		{
			private ReceivingsDataTable tableReceivings;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ReceivingsRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableReceivings = (ReceivingsDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReceivID
			{
				get
				{
					return Convert.ToInt32(this[this.tableReceivings.ReceivIDColumn]);
				}
				set
				{
					this[this.tableReceivings.ReceivIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime ReceivDate
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableReceivings.ReceivDateColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ReceivDate' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.ReceivDateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReceivCarrierID
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableReceivings.ReceivCarrierIDColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ReceivCarrierID' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.ReceivCarrierIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReceivCustID
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableReceivings.ReceivCustIDColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ReceivCustID' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.ReceivCustIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ReceivBOL
			{
				get
				{
					return (this[this.tableReceivings.ReceivBOLColumn] == null ? null : Convert.ToString(this[this.tableReceivings.ReceivBOLColumn]));
				}
				set
				{
					this[this.tableReceivings.ReceivBOLColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strEnteredBy
			{
				get
				{
					try
					{
						return (this[this.tableReceivings.strEnteredByColumn] == null ? null : Convert.ToString(this[this.tableReceivings.strEnteredByColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'strEnteredBy' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.strEnteredByColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime dtmEnteredOn
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableReceivings.dtmEnteredOnColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'dtmEnteredOn' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.dtmEnteredOnColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int strVendor
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableReceivings.strVendorColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'strVendor' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.strVendorColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float sngSkits
			{
				get
				{
					try
					{
						return Convert.ToSingle(this[this.tableReceivings.sngSkitsColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'sngSkits' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.sngSkitsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float sngTotalPallets
			{
				get
				{
					try
					{
						return Convert.ToSingle(this[this.tableReceivings.sngTotalPalletsColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'sngTotalPallets' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.sngTotalPalletsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strPO
			{
				get
				{
					if (this.IsstrPONull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableReceivings.strPOColumn] == null ? null : Convert.ToString(this[this.tableReceivings.strPOColumn]));
					}
				}
				set
				{
					this[this.tableReceivings.strPOColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int intShiftID
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableReceivings.intShiftIDColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'intShiftID' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.intShiftIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strTrailer
			{
				get
				{
					if (this.IsstrTrailerNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableReceivings.strTrailerColumn] == null ? null : Convert.ToString(this[this.tableReceivings.strTrailerColumn]));
					}
				}
				set
				{
					this[this.tableReceivings.strTrailerColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strSeal
			{
				get
				{
					if (this.IsstrSealNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableReceivings.strSealColumn] == null ? null : Convert.ToString(this[this.tableReceivings.strSealColumn]));
					}
				}
				set
				{
					this[this.tableReceivings.strSealColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableReceivings.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Notes
			{
				get
				{
					if (this.IsNotesNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableReceivings.NotesColumn] == null ? null : Convert.ToString(this[this.tableReceivings.NotesColumn]));
					}
				}
				set
				{
					this[this.tableReceivings.NotesColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int UnloadedBy
			{
				get
				{
					if (this.IsUnloadedByNull())
					{
						return -1;
					}
					else
					{
						return Convert.ToInt32(this[this.tableReceivings.UnloadedByColumn]);
					}
				}
				set
				{
					this[this.tableReceivings.UnloadedByColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int CheckedBy
			{
				get
				{
					if (this.IsCheckedByNull())
					{
						return -1;
					}
					else
					{
						return Convert.ToInt32(this[this.tableReceivings.CheckedByColumn]);
					}
				}
				set
				{
					this[this.tableReceivings.CheckedByColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int PhysicalCondition
			{
				get
				{
					if (this.IsPhysicalConditionNull())
					{
						return -1;
					}
					else
					{
						return Convert.ToInt32(this[this.tableReceivings.PhysicalConditionColumn]);
					}
				}
				set
				{
					this[this.tableReceivings.PhysicalConditionColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int LoadCondition
			{
				get
				{
					if (this.IsLoadConditionNull())
					{
						return -1;
					}
					else
					{
						return Convert.ToInt32(this[this.tableReceivings.LoadConditionColumn]);
					}
				}
				set
				{
					this[this.tableReceivings.LoadConditionColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime StartTime
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableReceivings.StartTimeColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'StartTime' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.StartTimeColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime FinishTime
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableReceivings.FinishTimeColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'FinishTime' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.FinishTimeColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double Temparature
			{
				get
				{
					try
					{
						return Convert.ToDouble(this[this.tableReceivings.TemparatureColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'Temparature' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.TemparatureColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int WheelsChocked
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableReceivings.WheelsChockedColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'WheelsChocked' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.WheelsChockedColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ForeignSubstance
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableReceivings.ForeignSubstanceColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ForeignSubstance' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.ForeignSubstanceColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int InsectActivity
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableReceivings.InsectActivityColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'InsectActivity' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.InsectActivityColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int CorrectPallets
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableReceivings.CorrectPalletsColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'CorrectPallets' in table 'Receivings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReceivings.CorrectPalletsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CustomersRow CustomersRow
			{
				get
				{
					return (CustomersRow)this.GetParentRow(this.Table.ParentRelations["FK_tblReceivMain_tblCustomers"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblReceivMain_tblCustomers"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CarriersRow CarriersRow
			{
				get
				{
					return (CarriersRow)this.GetParentRow(this.Table.ParentRelations["FK_tblReceivMain_tblCarriers"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblReceivMain_tblCarriers"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShiftsRow ShiftsRow
			{
				get
				{
					return (ShiftsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblReceivMain_intShiftID"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblReceivMain_intShiftID"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReceivDateNull()
			{
				return this.IsNull(this.tableReceivings.ReceivDateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReceivDateNull()
			{
				this[this.tableReceivings.ReceivDateColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReceivCarrierIDNull()
			{
				return this.IsNull(this.tableReceivings.ReceivCarrierIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReceivCarrierIDNull()
			{
				this[this.tableReceivings.ReceivCarrierIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReceivCustIDNull()
			{
				return this.IsNull(this.tableReceivings.ReceivCustIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReceivCustIDNull()
			{
				this[this.tableReceivings.ReceivCustIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrEnteredByNull()
			{
				return this.IsNull(this.tableReceivings.strEnteredByColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrEnteredByNull()
			{
				this[this.tableReceivings.strEnteredByColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdtmEnteredOnNull()
			{
				return this.IsNull(this.tableReceivings.dtmEnteredOnColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdtmEnteredOnNull()
			{
				this[this.tableReceivings.dtmEnteredOnColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrVendorNull()
			{
				return this.IsNull(this.tableReceivings.strVendorColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrVendorNull()
			{
				this[this.tableReceivings.strVendorColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IssngSkitsNull()
			{
				return this.IsNull(this.tableReceivings.sngSkitsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetsngSkitsNull()
			{
				this[this.tableReceivings.sngSkitsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IssngTotalPalletsNull()
			{
				return this.IsNull(this.tableReceivings.sngTotalPalletsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetsngTotalPalletsNull()
			{
				this[this.tableReceivings.sngTotalPalletsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrPONull()
			{
				return this.IsNull(this.tableReceivings.strPOColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrPONull()
			{
				this[this.tableReceivings.strPOColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsintShiftIDNull()
			{
				return this.IsNull(this.tableReceivings.intShiftIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetintShiftIDNull()
			{
				this[this.tableReceivings.intShiftIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrTrailerNull()
			{
				return this.IsNull(this.tableReceivings.strTrailerColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrTrailerNull()
			{
				this[this.tableReceivings.strTrailerColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrSealNull()
			{
				return this.IsNull(this.tableReceivings.strSealColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrSealNull()
			{
				this[this.tableReceivings.strSealColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableReceivings.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableReceivings.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsNotesNull()
			{
				return this.IsNull(this.tableReceivings.NotesColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetNotesNull()
			{
				this[this.tableReceivings.NotesColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsUnloadedByNull()
			{
				return this.IsNull(this.tableReceivings.UnloadedByColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetUnloadedByNull()
			{
				this[this.tableReceivings.UnloadedByColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCheckedByNull()
			{
				return this.IsNull(this.tableReceivings.CheckedByColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCheckedByNull()
			{
				this[this.tableReceivings.CheckedByColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsPhysicalConditionNull()
			{
				return this.IsNull(this.tableReceivings.PhysicalConditionColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetPhysicalConditionNull()
			{
				this[this.tableReceivings.PhysicalConditionColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsLoadConditionNull()
			{
				return this.IsNull(this.tableReceivings.LoadConditionColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetLoadConditionNull()
			{
				this[this.tableReceivings.LoadConditionColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsStartTimeNull()
			{
				return this.IsNull(this.tableReceivings.StartTimeColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetStartTimeNull()
			{
				this[this.tableReceivings.StartTimeColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsFinishTimeNull()
			{
				return this.IsNull(this.tableReceivings.FinishTimeColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetFinishTimeNull()
			{
				this[this.tableReceivings.FinishTimeColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsTemparatureNull()
			{
				return this.IsNull(this.tableReceivings.TemparatureColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetTemparatureNull()
			{
				this[this.tableReceivings.TemparatureColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsWheelsChockedNull()
			{
				return this.IsNull(this.tableReceivings.WheelsChockedColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetWheelsChockedNull()
			{
				this[this.tableReceivings.WheelsChockedColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsForeignSubstanceNull()
			{
				return this.IsNull(this.tableReceivings.ForeignSubstanceColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetForeignSubstanceNull()
			{
				this[this.tableReceivings.ForeignSubstanceColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsInsectActivityNull()
			{
				return this.IsNull(this.tableReceivings.InsectActivityColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetInsectActivityNull()
			{
				this[this.tableReceivings.InsectActivityColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCorrectPalletsNull()
			{
				return this.IsNull(this.tableReceivings.CorrectPalletsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCorrectPalletsNull()
			{
				this[this.tableReceivings.CorrectPalletsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingDetailsRow[] GetReceivingDetailsRows()
			{
				if (this.Table.ChildRelations["FK_tblReceivDet_tblReceivMain"] == null)
				{
					return new ReceivingDetailsRow[0];
				}
				else
				{
					return (ReceivingDetailsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblReceivDet_tblReceivMain"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReturnDetRow[] GetReturnDetRows()
			{
				if (this.Table.ChildRelations["FK_tblReturnDet_tblReceivMain"] == null)
				{
					return new ReturnDetRow[0];
				}
				else
				{
					return (ReturnDetRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblReturnDet_tblReceivMain"]);
				}
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class ProductionRow : System.Data.DataRow
		{
			private ProductionDataTable tableProduction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ProductionRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableProduction = (ProductionDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ProdMainID
			{
				get
				{
					return Convert.ToInt32(this[this.tableProduction.ProdMainIDColumn]);
				}
				set
				{
					this[this.tableProduction.ProdMainIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime ProdMainDate
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableProduction.ProdMainDateColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ProdMainDate' in table 'Production' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableProduction.ProdMainDateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ProdMainShift
			{
				get
				{
					if (this.IsProdMainShiftNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableProduction.ProdMainShiftColumn]);
					}
				}
				set
				{
					this[this.tableProduction.ProdMainShiftColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ProdMainItemID
			{
				get
				{
					if (this.IsProdMainItemIDNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableProduction.ProdMainItemIDColumn]);
					}
				}
				set
				{
					this[this.tableProduction.ProdMainItemIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ProdMainLot
			{
				get
				{
					if (this.IsProdMainLotNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableProduction.ProdMainLotColumn] == null ? null : Convert.ToString(this[this.tableProduction.ProdMainLotColumn]));
					}
				}
				set
				{
					this[this.tableProduction.ProdMainLotColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float ProdMainQuantity
			{
				get
				{
					if (this.IsProdMainQuantityNull())
					{
						return 0F;
					}
					else
					{
						return Convert.ToSingle(this[this.tableProduction.ProdMainQuantityColumn]);
					}
				}
				set
				{
					this[this.tableProduction.ProdMainQuantityColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ProdMainMachineLine
			{
				get
				{
					if (this.IsProdMainMachineLineNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableProduction.ProdMainMachineLineColumn]);
					}
				}
				set
				{
					this[this.tableProduction.ProdMainMachineLineColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime ProdMainTimeStart
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableProduction.ProdMainTimeStartColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ProdMainTimeStart' in table 'Production' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableProduction.ProdMainTimeStartColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime ProdMainTimeStop
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableProduction.ProdMainTimeStopColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ProdMainTimeStop' in table 'Production' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableProduction.ProdMainTimeStopColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float ProdMainPackers
			{
				get
				{
					if (this.IsProdMainPackersNull())
					{
						return 0F;
					}
					else
					{
						return Convert.ToSingle(this[this.tableProduction.ProdMainPackersColumn]);
					}
				}
				set
				{
					this[this.tableProduction.ProdMainPackersColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float ProdMainOperators
			{
				get
				{
					if (this.IsProdMainOperatorsNull())
					{
						return 0F;
					}
					else
					{
						return Convert.ToSingle(this[this.tableProduction.ProdMainOperatorsColumn]);
					}
				}
				set
				{
					this[this.tableProduction.ProdMainOperatorsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float ProdMainSupers
			{
				get
				{
					if (this.IsProdMainSupersNull())
					{
						return 0F;
					}
					else
					{
						return Convert.ToSingle(this[this.tableProduction.ProdMainSupersColumn]);
					}
				}
				set
				{
					this[this.tableProduction.ProdMainSupersColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int intMachineSpeed
			{
				get
				{
					if (this.IsintMachineSpeedNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableProduction.intMachineSpeedColumn]);
					}
				}
				set
				{
					this[this.tableProduction.intMachineSpeedColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strEnteredBy
			{
				get
				{
					try
					{
						return (this[this.tableProduction.strEnteredByColumn] == null ? null : Convert.ToString(this[this.tableProduction.strEnteredByColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'strEnteredBy' in table 'Production' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableProduction.strEnteredByColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime dtmEnteredOn
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableProduction.dtmEnteredOnColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'dtmEnteredOn' in table 'Production' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableProduction.dtmEnteredOnColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableProduction.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'Production' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableProduction.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow ItemsRow
			{
				get
				{
					return (ItemsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblItems_tblProdMain"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblItems_tblProdMain"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public MachineLinesRow MachineLinesRow
			{
				get
				{
					return (MachineLinesRow)this.GetParentRow(this.Table.ParentRelations["FK_tblProdMain_tblMachineLine"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblProdMain_tblMachineLine"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShiftsRow ShiftsRow
			{
				get
				{
					return (ShiftsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblProdMain_tblShifts"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblProdMain_tblShifts"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsProdMainDateNull()
			{
				return this.IsNull(this.tableProduction.ProdMainDateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetProdMainDateNull()
			{
				this[this.tableProduction.ProdMainDateColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsProdMainShiftNull()
			{
				return this.IsNull(this.tableProduction.ProdMainShiftColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetProdMainShiftNull()
			{
				this[this.tableProduction.ProdMainShiftColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsProdMainItemIDNull()
			{
				return this.IsNull(this.tableProduction.ProdMainItemIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetProdMainItemIDNull()
			{
				this[this.tableProduction.ProdMainItemIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsProdMainLotNull()
			{
				return this.IsNull(this.tableProduction.ProdMainLotColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetProdMainLotNull()
			{
				this[this.tableProduction.ProdMainLotColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsProdMainQuantityNull()
			{
				return this.IsNull(this.tableProduction.ProdMainQuantityColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetProdMainQuantityNull()
			{
				this[this.tableProduction.ProdMainQuantityColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsProdMainMachineLineNull()
			{
				return this.IsNull(this.tableProduction.ProdMainMachineLineColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetProdMainMachineLineNull()
			{
				this[this.tableProduction.ProdMainMachineLineColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsProdMainTimeStartNull()
			{
				return this.IsNull(this.tableProduction.ProdMainTimeStartColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetProdMainTimeStartNull()
			{
				this[this.tableProduction.ProdMainTimeStartColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsProdMainTimeStopNull()
			{
				return this.IsNull(this.tableProduction.ProdMainTimeStopColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetProdMainTimeStopNull()
			{
				this[this.tableProduction.ProdMainTimeStopColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsProdMainPackersNull()
			{
				return this.IsNull(this.tableProduction.ProdMainPackersColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetProdMainPackersNull()
			{
				this[this.tableProduction.ProdMainPackersColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsProdMainOperatorsNull()
			{
				return this.IsNull(this.tableProduction.ProdMainOperatorsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetProdMainOperatorsNull()
			{
				this[this.tableProduction.ProdMainOperatorsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsProdMainSupersNull()
			{
				return this.IsNull(this.tableProduction.ProdMainSupersColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetProdMainSupersNull()
			{
				this[this.tableProduction.ProdMainSupersColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsintMachineSpeedNull()
			{
				return this.IsNull(this.tableProduction.intMachineSpeedColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetintMachineSpeedNull()
			{
				this[this.tableProduction.intMachineSpeedColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrEnteredByNull()
			{
				return this.IsNull(this.tableProduction.strEnteredByColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrEnteredByNull()
			{
				this[this.tableProduction.strEnteredByColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdtmEnteredOnNull()
			{
				return this.IsNull(this.tableProduction.dtmEnteredOnColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdtmEnteredOnNull()
			{
				this[this.tableProduction.dtmEnteredOnColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableProduction.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableProduction.tsColumn] = Convert.DBNull;
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class ShippingsRow : System.Data.DataRow
		{
			private ShippingsDataTable tableShippings;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ShippingsRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableShippings = (ShippingsDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ShipMainID
			{
				get
				{
					return Convert.ToInt32(this[this.tableShippings.ShipMainIDColumn]);
				}
				set
				{
					this[this.tableShippings.ShipMainIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime ShipMainDate
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableShippings.ShipMainDateColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ShipMainDate' in table 'Shippings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippings.ShipMainDateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ShipMainCarrierID
			{
				get
				{
					if (this.IsShipMainCarrierIDNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableShippings.ShipMainCarrierIDColumn]);
					}
				}
				set
				{
					this[this.tableShippings.ShipMainCarrierIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ShipMainCustID
			{
				get
				{
					if (this.IsShipMainCustIDNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableShippings.ShipMainCustIDColumn]);
					}
				}
				set
				{
					this[this.tableShippings.ShipMainCustIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strEnteredBy
			{
				get
				{
					try
					{
						return (this[this.tableShippings.strEnteredByColumn] == null ? null : Convert.ToString(this[this.tableShippings.strEnteredByColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'strEnteredBy' in table 'Shippings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippings.strEnteredByColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime dtmEnteredOn
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableShippings.dtmEnteredOnColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'dtmEnteredOn' in table 'Shippings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippings.dtmEnteredOnColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strPO
			{
				get
				{
					if (this.IsstrPONull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippings.strPOColumn] == null ? null : Convert.ToString(this[this.tableShippings.strPOColumn]));
					}
				}
				set
				{
					this[this.tableShippings.strPOColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strTrailer
			{
				get
				{
					if (this.IsstrTrailerNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippings.strTrailerColumn] == null ? null : Convert.ToString(this[this.tableShippings.strTrailerColumn]));
					}
				}
				set
				{
					this[this.tableShippings.strTrailerColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float sngSkits
			{
				get
				{
					if (this.IssngSkitsNull())
					{
						return 0F;
					}
					else
					{
						return Convert.ToSingle(this[this.tableShippings.sngSkitsColumn]);
					}
				}
				set
				{
					this[this.tableShippings.sngSkitsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float sngTotalPallets
			{
				get
				{
					if (this.IssngTotalPalletsNull())
					{
						return 0F;
					}
					else
					{
						return Convert.ToSingle(this[this.tableShippings.sngTotalPalletsColumn]);
					}
				}
				set
				{
					this[this.tableShippings.sngTotalPalletsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strSeal
			{
				get
				{
					if (this.IsstrSealNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippings.strSealColumn] == null ? null : Convert.ToString(this[this.tableShippings.strSealColumn]));
					}
				}
				set
				{
					this[this.tableShippings.strSealColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strRoute
			{
				get
				{
					if (this.IsstrRouteNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippings.strRouteColumn] == null ? null : Convert.ToString(this[this.tableShippings.strRouteColumn]));
					}
				}
				set
				{
					this[this.tableShippings.strRouteColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strDeliveryNote
			{
				get
				{
					if (this.IsstrDeliveryNoteNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippings.strDeliveryNoteColumn] == null ? null : Convert.ToString(this[this.tableShippings.strDeliveryNoteColumn]));
					}
				}
				set
				{
					this[this.tableShippings.strDeliveryNoteColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableShippings.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'Shippings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippings.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int intDestination
			{
				get
				{
					if (this.IsintDestinationNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableShippings.intDestinationColumn]);
					}
				}
				set
				{
					this[this.tableShippings.intDestinationColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double TotalGrossWeight
			{
				get
				{
					if (this.IsTotalGrossWeightNull())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableShippings.TotalGrossWeightColumn]);
					}
				}
				set
				{
					this[this.tableShippings.TotalGrossWeightColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool Shipper
			{
				get
				{
					if (this.IsShipperNull())
					{
						return false;
					}
					else
					{
						return Convert.ToBoolean(this[this.tableShippings.ShipperColumn]);
					}
				}
				set
				{
					this[this.tableShippings.ShipperColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Comments
			{
				get
				{
					if (this.IsCommentsNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippings.CommentsColumn] == null ? null : Convert.ToString(this[this.tableShippings.CommentsColumn]));
					}
				}
				set
				{
					this[this.tableShippings.CommentsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int Shift
			{
				get
				{
					if (this.IsShiftNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableShippings.ShiftColumn]);
					}
				}
				set
				{
					this[this.tableShippings.ShiftColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool Freight
			{
				get
				{
					if (this.IsFreightNull())
					{
						return true;
					}
					else
					{
						return Convert.ToBoolean(this[this.tableShippings.FreightColumn]);
					}
				}
				set
				{
					this[this.tableShippings.FreightColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string DeliveryNoteNumber
			{
				get
				{
					if (this.IsDeliveryNoteNumberNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippings.DeliveryNoteNumberColumn] == null ? null : Convert.ToString(this[this.tableShippings.DeliveryNoteNumberColumn]));
					}
				}
				set
				{
					this[this.tableShippings.DeliveryNoteNumberColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int LoadedBy
			{
				get
				{
					if (this.IsLoadedByNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableShippings.LoadedByColumn]);
					}
				}
				set
				{
					this[this.tableShippings.LoadedByColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int CheckedBy
			{
				get
				{
					if (this.IsCheckedByNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableShippings.CheckedByColumn]);
					}
				}
				set
				{
					this[this.tableShippings.CheckedByColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int PhysicalCondition
			{
				get
				{
					if (this.IsPhysicalConditionNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableShippings.PhysicalConditionColumn]);
					}
				}
				set
				{
					this[this.tableShippings.PhysicalConditionColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int LoadCondition
			{
				get
				{
					if (this.IsLoadConditionNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableShippings.LoadConditionColumn]);
					}
				}
				set
				{
					this[this.tableShippings.LoadConditionColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime StartTime
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableShippings.StartTimeColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'StartTime' in table 'Shippings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippings.StartTimeColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime FinishTime
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableShippings.FinishTimeColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'FinishTime' in table 'Shippings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippings.FinishTimeColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double Temparature
			{
				get
				{
					if (this.IsTemparatureNull())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableShippings.TemparatureColumn]);
					}
				}
				set
				{
					this[this.tableShippings.TemparatureColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ShipMainBOL
			{
				get
				{
					return Convert.ToInt32(this[this.tableShippings.ShipMainBOLColumn]);
				}
				set
				{
					this[this.tableShippings.ShipMainBOLColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int CorrectPallets
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableShippings.CorrectPalletsColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'CorrectPallets' in table 'Shippings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippings.CorrectPalletsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int InsectActivity
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableShippings.InsectActivityColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'InsectActivity' in table 'Shippings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippings.InsectActivityColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ForeignSubstance
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableShippings.ForeignSubstanceColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ForeignSubstance' in table 'Shippings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippings.ForeignSubstanceColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int WheelsChocked
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableShippings.WheelsChockedColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'WheelsChocked' in table 'Shippings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippings.WheelsChockedColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CustomersRow CustomersRow
			{
				get
				{
					return (CustomersRow)this.GetParentRow(this.Table.ParentRelations["FK_tblShipMain_tblCustomers"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblShipMain_tblCustomers"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CarriersRow CarriersRow
			{
				get
				{
					return (CarriersRow)this.GetParentRow(this.Table.ParentRelations["FK_tblShipMain_tblCarrier"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblShipMain_tblCarrier"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingAddressesRow ShippingAddressesRow
			{
				get
				{
					return (ShippingAddressesRow)this.GetParentRow(this.Table.ParentRelations["FK_tblShipMain_intDestination"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblShipMain_intDestination"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShiftsRow ShiftsRow
			{
				get
				{
					return (ShiftsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblShipMain_Shift"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblShipMain_Shift"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShipMainDateNull()
			{
				return this.IsNull(this.tableShippings.ShipMainDateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShipMainDateNull()
			{
				this[this.tableShippings.ShipMainDateColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShipMainCarrierIDNull()
			{
				return this.IsNull(this.tableShippings.ShipMainCarrierIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShipMainCarrierIDNull()
			{
				this[this.tableShippings.ShipMainCarrierIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShipMainCustIDNull()
			{
				return this.IsNull(this.tableShippings.ShipMainCustIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShipMainCustIDNull()
			{
				this[this.tableShippings.ShipMainCustIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrEnteredByNull()
			{
				return this.IsNull(this.tableShippings.strEnteredByColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrEnteredByNull()
			{
				this[this.tableShippings.strEnteredByColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdtmEnteredOnNull()
			{
				return this.IsNull(this.tableShippings.dtmEnteredOnColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdtmEnteredOnNull()
			{
				this[this.tableShippings.dtmEnteredOnColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrPONull()
			{
				return this.IsNull(this.tableShippings.strPOColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrPONull()
			{
				this[this.tableShippings.strPOColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrTrailerNull()
			{
				return this.IsNull(this.tableShippings.strTrailerColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrTrailerNull()
			{
				this[this.tableShippings.strTrailerColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IssngSkitsNull()
			{
				return this.IsNull(this.tableShippings.sngSkitsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetsngSkitsNull()
			{
				this[this.tableShippings.sngSkitsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IssngTotalPalletsNull()
			{
				return this.IsNull(this.tableShippings.sngTotalPalletsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetsngTotalPalletsNull()
			{
				this[this.tableShippings.sngTotalPalletsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrSealNull()
			{
				return this.IsNull(this.tableShippings.strSealColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrSealNull()
			{
				this[this.tableShippings.strSealColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrRouteNull()
			{
				return this.IsNull(this.tableShippings.strRouteColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrRouteNull()
			{
				this[this.tableShippings.strRouteColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrDeliveryNoteNull()
			{
				return this.IsNull(this.tableShippings.strDeliveryNoteColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrDeliveryNoteNull()
			{
				this[this.tableShippings.strDeliveryNoteColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableShippings.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableShippings.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsintDestinationNull()
			{
				return this.IsNull(this.tableShippings.intDestinationColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetintDestinationNull()
			{
				this[this.tableShippings.intDestinationColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsTotalGrossWeightNull()
			{
				return this.IsNull(this.tableShippings.TotalGrossWeightColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetTotalGrossWeightNull()
			{
				this[this.tableShippings.TotalGrossWeightColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShipperNull()
			{
				return this.IsNull(this.tableShippings.ShipperColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShipperNull()
			{
				this[this.tableShippings.ShipperColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCommentsNull()
			{
				return this.IsNull(this.tableShippings.CommentsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCommentsNull()
			{
				this[this.tableShippings.CommentsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShiftNull()
			{
				return this.IsNull(this.tableShippings.ShiftColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShiftNull()
			{
				this[this.tableShippings.ShiftColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsFreightNull()
			{
				return this.IsNull(this.tableShippings.FreightColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetFreightNull()
			{
				this[this.tableShippings.FreightColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsDeliveryNoteNumberNull()
			{
				return this.IsNull(this.tableShippings.DeliveryNoteNumberColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetDeliveryNoteNumberNull()
			{
				this[this.tableShippings.DeliveryNoteNumberColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsLoadedByNull()
			{
				return this.IsNull(this.tableShippings.LoadedByColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetLoadedByNull()
			{
				this[this.tableShippings.LoadedByColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCheckedByNull()
			{
				return this.IsNull(this.tableShippings.CheckedByColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCheckedByNull()
			{
				this[this.tableShippings.CheckedByColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsPhysicalConditionNull()
			{
				return this.IsNull(this.tableShippings.PhysicalConditionColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetPhysicalConditionNull()
			{
				this[this.tableShippings.PhysicalConditionColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsLoadConditionNull()
			{
				return this.IsNull(this.tableShippings.LoadConditionColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetLoadConditionNull()
			{
				this[this.tableShippings.LoadConditionColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsStartTimeNull()
			{
				return this.IsNull(this.tableShippings.StartTimeColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetStartTimeNull()
			{
				this[this.tableShippings.StartTimeColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsFinishTimeNull()
			{
				return this.IsNull(this.tableShippings.FinishTimeColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetFinishTimeNull()
			{
				this[this.tableShippings.FinishTimeColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsTemparatureNull()
			{
				return this.IsNull(this.tableShippings.TemparatureColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetTemparatureNull()
			{
				this[this.tableShippings.TemparatureColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCorrectPalletsNull()
			{
				return this.IsNull(this.tableShippings.CorrectPalletsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCorrectPalletsNull()
			{
				this[this.tableShippings.CorrectPalletsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsInsectActivityNull()
			{
				return this.IsNull(this.tableShippings.InsectActivityColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetInsectActivityNull()
			{
				this[this.tableShippings.InsectActivityColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsForeignSubstanceNull()
			{
				return this.IsNull(this.tableShippings.ForeignSubstanceColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetForeignSubstanceNull()
			{
				this[this.tableShippings.ForeignSubstanceColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsWheelsChockedNull()
			{
				return this.IsNull(this.tableShippings.WheelsChockedColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetWheelsChockedNull()
			{
				this[this.tableShippings.WheelsChockedColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingDetailsRow[] GetShippingDetailsRows()
			{
				if (this.Table.ChildRelations["FK_tblShipDet_tblShipMain"] == null)
				{
					return new ShippingDetailsRow[0];
				}
				else
				{
					return (ShippingDetailsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblShipDet_tblShipMain"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingReturnDetailsRow[] GetShippingReturnDetailsRows()
			{
				if (this.Table.ChildRelations["FK_tblShipReturnDet_tblShipMain"] == null)
				{
					return new ShippingReturnDetailsRow[0];
				}
				else
				{
					return (ShippingReturnDetailsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblShipReturnDet_tblShipMain"]);
				}
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class MachineLinesRow : System.Data.DataRow
		{
			private MachineLinesDataTable tableMachineLines;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal MachineLinesRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableMachineLines = (MachineLinesDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int MachineLineID
			{
				get
				{
					return Convert.ToInt32(this[this.tableMachineLines.MachineLineIDColumn]);
				}
				set
				{
					this[this.tableMachineLines.MachineLineIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string MachineLineName
			{
				get
				{
					try
					{
						return (this[this.tableMachineLines.MachineLineNameColumn] == null ? null : Convert.ToString(this[this.tableMachineLines.MachineLineNameColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'MachineLineName' in table 'MachineLines' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableMachineLines.MachineLineNameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableMachineLines.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'MachineLines' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableMachineLines.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsMachineLineNameNull()
			{
				return this.IsNull(this.tableMachineLines.MachineLineNameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetMachineLineNameNull()
			{
				this[this.tableMachineLines.MachineLineNameColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableMachineLines.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableMachineLines.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ProductionRow[] GetProductionRows()
			{
				if (this.Table.ChildRelations["FK_tblProdMain_tblMachineLine"] == null)
				{
					return new ProductionRow[0];
				}
				else
				{
					return (ProductionRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblProdMain_tblMachineLine"]);
				}
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class ShippingDetailsRow : System.Data.DataRow
		{
			private ShippingDetailsDataTable tableShippingDetails;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ShippingDetailsRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableShippingDetails = (ShippingDetailsDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ShipDetDetID
			{
				get
				{
					return Convert.ToInt32(this[this.tableShippingDetails.ShipDetDetIDColumn]);
				}
				set
				{
					this[this.tableShippingDetails.ShipDetDetIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ShipDetMainID
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableShippingDetails.ShipDetMainIDColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ShipDetMainID' in table 'ShippingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippingDetails.ShipDetMainIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ShipDetItemID
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableShippingDetails.ShipDetItemIDColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ShipDetItemID' in table 'ShippingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippingDetails.ShipDetItemIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ShipDetLot
			{
				get
				{
					if (this.IsShipDetLotNull())
					{
						return string.Empty;
					}
					else
					{
						return (this[this.tableShippingDetails.ShipDetLotColumn] == null ? null : Convert.ToString(this[this.tableShippingDetails.ShipDetLotColumn]));
					}
				}
				set
				{
					this[this.tableShippingDetails.ShipDetLotColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ShipDetDetQty
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableShippingDetails.ShipDetDetQtyColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ShipDetDetQty' in table 'ShippingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippingDetails.ShipDetDetQtyColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float sngPackages
			{
				get
				{
					try
					{
						return Convert.ToSingle(this[this.tableShippingDetails.sngPackagesColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'sngPackages' in table 'ShippingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippingDetails.sngPackagesColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float sngPallets
			{
				get
				{
					try
					{
						return Convert.ToSingle(this[this.tableShippingDetails.sngPalletsColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'sngPallets' in table 'ShippingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippingDetails.sngPalletsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableShippingDetails.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'ShippingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippingDetails.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Note
			{
				get
				{
					try
					{
						return (this[this.tableShippingDetails.NoteColumn] == null ? null : Convert.ToString(this[this.tableShippingDetails.NoteColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'Note' in table 'ShippingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippingDetails.NoteColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime ExpirationDate
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableShippingDetails.ExpirationDateColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ExpirationDate' in table 'ShippingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippingDetails.ExpirationDateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string FullLPNNumber
			{
				get
				{
					try
					{
						return (this[this.tableShippingDetails.FullLPNNumberColumn] == null ? null : Convert.ToString(this[this.tableShippingDetails.FullLPNNumberColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'FullLPNNumber' in table 'ShippingDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippingDetails.FullLPNNumberColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow ItemsRow
			{
				get
				{
					return (ItemsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblItems_tblShipDet"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblItems_tblShipDet"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingsRow ShippingsRow
			{
				get
				{
					return (ShippingsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblShipDet_tblShipMain"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblShipDet_tblShipMain"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShipDetMainIDNull()
			{
				return this.IsNull(this.tableShippingDetails.ShipDetMainIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShipDetMainIDNull()
			{
				this[this.tableShippingDetails.ShipDetMainIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShipDetItemIDNull()
			{
				return this.IsNull(this.tableShippingDetails.ShipDetItemIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShipDetItemIDNull()
			{
				this[this.tableShippingDetails.ShipDetItemIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShipDetLotNull()
			{
				return this.IsNull(this.tableShippingDetails.ShipDetLotColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShipDetLotNull()
			{
				this[this.tableShippingDetails.ShipDetLotColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShipDetDetQtyNull()
			{
				return this.IsNull(this.tableShippingDetails.ShipDetDetQtyColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShipDetDetQtyNull()
			{
				this[this.tableShippingDetails.ShipDetDetQtyColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IssngPackagesNull()
			{
				return this.IsNull(this.tableShippingDetails.sngPackagesColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetsngPackagesNull()
			{
				this[this.tableShippingDetails.sngPackagesColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IssngPalletsNull()
			{
				return this.IsNull(this.tableShippingDetails.sngPalletsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetsngPalletsNull()
			{
				this[this.tableShippingDetails.sngPalletsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableShippingDetails.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableShippingDetails.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsNoteNull()
			{
				return this.IsNull(this.tableShippingDetails.NoteColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetNoteNull()
			{
				this[this.tableShippingDetails.NoteColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsExpirationDateNull()
			{
				return this.IsNull(this.tableShippingDetails.ExpirationDateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetExpirationDateNull()
			{
				this[this.tableShippingDetails.ExpirationDateColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsFullLPNNumberNull()
			{
				return this.IsNull(this.tableShippingDetails.FullLPNNumberColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetFullLPNNumberNull()
			{
				this[this.tableShippingDetails.FullLPNNumberColumn] = Convert.DBNull;
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class BOMRow : System.Data.DataRow
		{
			private BOMDataTable tableBOM;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal BOMRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableBOM = (BOMDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int BOMID
			{
				get
				{
					return Convert.ToInt32(this[this.tableBOM.BOMIDColumn]);
				}
				set
				{
					this[this.tableBOM.BOMIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int BOMRawMatID
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableBOM.BOMRawMatIDColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'BOMRawMatID' in table 'BOM' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableBOM.BOMRawMatIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int BOMFiniGoodID
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableBOM.BOMFiniGoodIDColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'BOMFiniGoodID' in table 'BOM' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableBOM.BOMFiniGoodIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableBOM.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'BOM' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableBOM.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float BOMQuantity
			{
				get
				{
					try
					{
						return Convert.ToSingle(this[this.tableBOM.BOMQuantityColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'BOMQuantity' in table 'BOM' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableBOM.BOMQuantityColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double ScrapFactor
			{
				get
				{
					if (this.IsScrapFactorNull())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableBOM.ScrapFactorColumn]);
					}
				}
				set
				{
					this[this.tableBOM.ScrapFactorColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string BOMRawMatCode
			{
				get
				{
					try
					{
						return (this[this.tableBOM.BOMRawMatCodeColumn] == null ? null : Convert.ToString(this[this.tableBOM.BOMRawMatCodeColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'BOMRawMatCode' in table 'BOM' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableBOM.BOMRawMatCodeColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow ItemsRowByFK_tblBOMs_tblItems
			{
				get
				{
					return (ItemsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblBOMs_tblItems"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblBOMs_tblItems"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow ItemsRowByFK_tblItems_tblBOMs
			{
				get
				{
					return (ItemsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblItems_tblBOMs"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblItems_tblBOMs"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsBOMRawMatIDNull()
			{
				return this.IsNull(this.tableBOM.BOMRawMatIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetBOMRawMatIDNull()
			{
				this[this.tableBOM.BOMRawMatIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsBOMFiniGoodIDNull()
			{
				return this.IsNull(this.tableBOM.BOMFiniGoodIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetBOMFiniGoodIDNull()
			{
				this[this.tableBOM.BOMFiniGoodIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableBOM.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableBOM.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsBOMQuantityNull()
			{
				return this.IsNull(this.tableBOM.BOMQuantityColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetBOMQuantityNull()
			{
				this[this.tableBOM.BOMQuantityColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsScrapFactorNull()
			{
				return this.IsNull(this.tableBOM.ScrapFactorColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetScrapFactorNull()
			{
				this[this.tableBOM.ScrapFactorColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsBOMRawMatCodeNull()
			{
				return this.IsNull(this.tableBOM.BOMRawMatCodeColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetBOMRawMatCodeNull()
			{
				this[this.tableBOM.BOMRawMatCodeColumn] = Convert.DBNull;
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class ShiftsRow : System.Data.DataRow
		{
			private ShiftsDataTable tableShifts;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ShiftsRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableShifts = (ShiftsDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ShiftID
			{
				get
				{
					return Convert.ToInt32(this[this.tableShifts.ShiftIDColumn]);
				}
				set
				{
					this[this.tableShifts.ShiftIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ShiftName
			{
				get
				{
					try
					{
						return (this[this.tableShifts.ShiftNameColumn] == null ? null : Convert.ToString(this[this.tableShifts.ShiftNameColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ShiftName' in table 'Shifts' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShifts.ShiftNameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableShifts.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'Shifts' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShifts.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShiftNameNull()
			{
				return this.IsNull(this.tableShifts.ShiftNameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShiftNameNull()
			{
				this[this.tableShifts.ShiftNameColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableShifts.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableShifts.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ProductionRow[] GetProductionRows()
			{
				if (this.Table.ChildRelations["FK_tblProdMain_tblShifts"] == null)
				{
					return new ProductionRow[0];
				}
				else
				{
					return (ProductionRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblProdMain_tblShifts"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryRow[] GetInventoryRows()
			{
				if (this.Table.ChildRelations["FK_tblInventory_Shift"] == null)
				{
					return new InventoryRow[0];
				}
				else
				{
					return (InventoryRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblInventory_Shift"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingsRow[] GetReceivingsRows()
			{
				if (this.Table.ChildRelations["FK_tblReceivMain_intShiftID"] == null)
				{
					return new ReceivingsRow[0];
				}
				else
				{
					return (ReceivingsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblReceivMain_intShiftID"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingsRow[] GetShippingsRows()
			{
				if (this.Table.ChildRelations["FK_tblShipMain_Shift"] == null)
				{
					return new ShippingsRow[0];
				}
				else
				{
					return (ShippingsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblShipMain_Shift"]);
				}
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class CarriersRow : System.Data.DataRow
		{
			private CarriersDataTable tableCarriers;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal CarriersRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableCarriers = (CarriersDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int CarrierID
			{
				get
				{
					return Convert.ToInt32(this[this.tableCarriers.CarrierIDColumn]);
				}
				set
				{
					this[this.tableCarriers.CarrierIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string CarrierName
			{
				get
				{
					return (this[this.tableCarriers.CarrierNameColumn] == null ? null : Convert.ToString(this[this.tableCarriers.CarrierNameColumn]));
				}
				set
				{
					this[this.tableCarriers.CarrierNameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableCarriers.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'Carriers' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableCarriers.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ContactFirstName
			{
				get
				{
					if (this.IsContactFirstNameNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableCarriers.ContactFirstNameColumn] == null ? null : Convert.ToString(this[this.tableCarriers.ContactFirstNameColumn]));
					}
				}
				set
				{
					this[this.tableCarriers.ContactFirstNameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ContactLastName
			{
				get
				{
					if (this.IsContactLastNameNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableCarriers.ContactLastNameColumn] == null ? null : Convert.ToString(this[this.tableCarriers.ContactLastNameColumn]));
					}
				}
				set
				{
					this[this.tableCarriers.ContactLastNameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Address
			{
				get
				{
					if (this.IsAddressNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableCarriers.AddressColumn] == null ? null : Convert.ToString(this[this.tableCarriers.AddressColumn]));
					}
				}
				set
				{
					this[this.tableCarriers.AddressColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string City
			{
				get
				{
					if (this.IsCityNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableCarriers.CityColumn] == null ? null : Convert.ToString(this[this.tableCarriers.CityColumn]));
					}
				}
				set
				{
					this[this.tableCarriers.CityColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string State
			{
				get
				{
					if (this.IsStateNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableCarriers.StateColumn] == null ? null : Convert.ToString(this[this.tableCarriers.StateColumn]));
					}
				}
				set
				{
					this[this.tableCarriers.StateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Postal
			{
				get
				{
					if (this.IsPostalNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableCarriers.PostalColumn] == null ? null : Convert.ToString(this[this.tableCarriers.PostalColumn]));
					}
				}
				set
				{
					this[this.tableCarriers.PostalColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Phone
			{
				get
				{
					if (this.IsPhoneNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableCarriers.PhoneColumn] == null ? null : Convert.ToString(this[this.tableCarriers.PhoneColumn]));
					}
				}
				set
				{
					this[this.tableCarriers.PhoneColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Email
			{
				get
				{
					if (this.IsEmailNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableCarriers.EmailColumn] == null ? null : Convert.ToString(this[this.tableCarriers.EmailColumn]));
					}
				}
				set
				{
					this[this.tableCarriers.EmailColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Fax
			{
				get
				{
					if (this.IsFaxNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableCarriers.FaxColumn] == null ? null : Convert.ToString(this[this.tableCarriers.FaxColumn]));
					}
				}
				set
				{
					this[this.tableCarriers.FaxColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Note
			{
				get
				{
					if (this.IsNoteNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableCarriers.NoteColumn] == null ? null : Convert.ToString(this[this.tableCarriers.NoteColumn]));
					}
				}
				set
				{
					this[this.tableCarriers.NoteColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string EnteredBy
			{
				get
				{
					try
					{
						return (this[this.tableCarriers.EnteredByColumn] == null ? null : Convert.ToString(this[this.tableCarriers.EnteredByColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'EnteredBy' in table 'Carriers' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableCarriers.EnteredByColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime EnteredOn
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableCarriers.EnteredOnColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'EnteredOn' in table 'Carriers' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableCarriers.EnteredOnColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableCarriers.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableCarriers.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsContactFirstNameNull()
			{
				return this.IsNull(this.tableCarriers.ContactFirstNameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetContactFirstNameNull()
			{
				this[this.tableCarriers.ContactFirstNameColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsContactLastNameNull()
			{
				return this.IsNull(this.tableCarriers.ContactLastNameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetContactLastNameNull()
			{
				this[this.tableCarriers.ContactLastNameColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsAddressNull()
			{
				return this.IsNull(this.tableCarriers.AddressColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetAddressNull()
			{
				this[this.tableCarriers.AddressColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCityNull()
			{
				return this.IsNull(this.tableCarriers.CityColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCityNull()
			{
				this[this.tableCarriers.CityColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsStateNull()
			{
				return this.IsNull(this.tableCarriers.StateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetStateNull()
			{
				this[this.tableCarriers.StateColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsPostalNull()
			{
				return this.IsNull(this.tableCarriers.PostalColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetPostalNull()
			{
				this[this.tableCarriers.PostalColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsPhoneNull()
			{
				return this.IsNull(this.tableCarriers.PhoneColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetPhoneNull()
			{
				this[this.tableCarriers.PhoneColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsEmailNull()
			{
				return this.IsNull(this.tableCarriers.EmailColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetEmailNull()
			{
				this[this.tableCarriers.EmailColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsFaxNull()
			{
				return this.IsNull(this.tableCarriers.FaxColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetFaxNull()
			{
				this[this.tableCarriers.FaxColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsNoteNull()
			{
				return this.IsNull(this.tableCarriers.NoteColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetNoteNull()
			{
				this[this.tableCarriers.NoteColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsEnteredByNull()
			{
				return this.IsNull(this.tableCarriers.EnteredByColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetEnteredByNull()
			{
				this[this.tableCarriers.EnteredByColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsEnteredOnNull()
			{
				return this.IsNull(this.tableCarriers.EnteredOnColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetEnteredOnNull()
			{
				this[this.tableCarriers.EnteredOnColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingsRow[] GetReceivingsRows()
			{
				if (this.Table.ChildRelations["FK_tblReceivMain_tblCarriers"] == null)
				{
					return new ReceivingsRow[0];
				}
				else
				{
					return (ReceivingsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblReceivMain_tblCarriers"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingsRow[] GetShippingsRows()
			{
				if (this.Table.ChildRelations["FK_tblShipMain_tblCarrier"] == null)
				{
					return new ShippingsRow[0];
				}
				else
				{
					return (ShippingsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblShipMain_tblCarrier"]);
				}
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class CompanySettingsRow : System.Data.DataRow
		{
			private CompanySettingsDataTable tableCompanySettings;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal CompanySettingsRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableCompanySettings = (CompanySettingsDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int PK_ID
			{
				get
				{
					return Convert.ToInt32(this[this.tableCompanySettings.PK_IDColumn]);
				}
				set
				{
					this[this.tableCompanySettings.PK_IDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float dblPackersPay
			{
				get
				{
					if (this.IsdblPackersPayNull())
					{
						return 0F;
					}
					else
					{
						return Convert.ToSingle(this[this.tableCompanySettings.dblPackersPayColumn]);
					}
				}
				set
				{
					this[this.tableCompanySettings.dblPackersPayColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float dblOperatorsPay
			{
				get
				{
					if (this.IsdblOperatorsPayNull())
					{
						return 0F;
					}
					else
					{
						return Convert.ToSingle(this[this.tableCompanySettings.dblOperatorsPayColumn]);
					}
				}
				set
				{
					this[this.tableCompanySettings.dblOperatorsPayColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float dblSupersPay
			{
				get
				{
					if (this.IsdblSupersPayNull())
					{
						return 0F;
					}
					else
					{
						return Convert.ToSingle(this[this.tableCompanySettings.dblSupersPayColumn]);
					}
				}
				set
				{
					this[this.tableCompanySettings.dblSupersPayColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public short intMinPerHour
			{
				get
				{
					if (this.IsintMinPerHourNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt16(this[this.tableCompanySettings.intMinPerHourColumn]);
					}
				}
				set
				{
					this[this.tableCompanySettings.intMinPerHourColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableCompanySettings.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'CompanySettings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableCompanySettings.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int UniversalCustomer
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableCompanySettings.UniversalCustomerColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'UniversalCustomer' in table 'CompanySettings' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableCompanySettings.UniversalCustomerColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string dbVersion
			{
				get
				{
					if (this.IsdbVersionNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableCompanySettings.dbVersionColumn] == null ? null : Convert.ToString(this[this.tableCompanySettings.dbVersionColumn]));
					}
				}
				set
				{
					this[this.tableCompanySettings.dbVersionColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdblPackersPayNull()
			{
				return this.IsNull(this.tableCompanySettings.dblPackersPayColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdblPackersPayNull()
			{
				this[this.tableCompanySettings.dblPackersPayColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdblOperatorsPayNull()
			{
				return this.IsNull(this.tableCompanySettings.dblOperatorsPayColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdblOperatorsPayNull()
			{
				this[this.tableCompanySettings.dblOperatorsPayColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdblSupersPayNull()
			{
				return this.IsNull(this.tableCompanySettings.dblSupersPayColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdblSupersPayNull()
			{
				this[this.tableCompanySettings.dblSupersPayColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsintMinPerHourNull()
			{
				return this.IsNull(this.tableCompanySettings.intMinPerHourColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetintMinPerHourNull()
			{
				this[this.tableCompanySettings.intMinPerHourColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableCompanySettings.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableCompanySettings.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsUniversalCustomerNull()
			{
				return this.IsNull(this.tableCompanySettings.UniversalCustomerColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetUniversalCustomerNull()
			{
				this[this.tableCompanySettings.UniversalCustomerColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdbVersionNull()
			{
				return this.IsNull(this.tableCompanySettings.dbVersionColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdbVersionNull()
			{
				this[this.tableCompanySettings.dbVersionColumn] = Convert.DBNull;
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class ShippingAddressesRow : System.Data.DataRow
		{
			private ShippingAddressesDataTable tableShippingAddresses;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ShippingAddressesRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableShippingAddresses = (ShippingAddressesDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int AddressID
			{
				get
				{
					return Convert.ToInt32(this[this.tableShippingAddresses.AddressIDColumn]);
				}
				set
				{
					this[this.tableShippingAddresses.AddressIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ShippingName
			{
				get
				{
					if (this.IsShippingNameNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippingAddresses.ShippingNameColumn] == null ? null : Convert.ToString(this[this.tableShippingAddresses.ShippingNameColumn]));
					}
				}
				set
				{
					this[this.tableShippingAddresses.ShippingNameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ContactFirstName
			{
				get
				{
					if (this.IsContactFirstNameNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippingAddresses.ContactFirstNameColumn] == null ? null : Convert.ToString(this[this.tableShippingAddresses.ContactFirstNameColumn]));
					}
				}
				set
				{
					this[this.tableShippingAddresses.ContactFirstNameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ContactLastName
			{
				get
				{
					if (this.IsContactLastNameNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippingAddresses.ContactLastNameColumn] == null ? null : Convert.ToString(this[this.tableShippingAddresses.ContactLastNameColumn]));
					}
				}
				set
				{
					this[this.tableShippingAddresses.ContactLastNameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ShippingAddress
			{
				get
				{
					if (this.IsShippingAddressNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippingAddresses.ShippingAddressColumn] == null ? null : Convert.ToString(this[this.tableShippingAddresses.ShippingAddressColumn]));
					}
				}
				set
				{
					this[this.tableShippingAddresses.ShippingAddressColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ShippingCity
			{
				get
				{
					if (this.IsShippingCityNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippingAddresses.ShippingCityColumn] == null ? null : Convert.ToString(this[this.tableShippingAddresses.ShippingCityColumn]));
					}
				}
				set
				{
					this[this.tableShippingAddresses.ShippingCityColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ShippingState
			{
				get
				{
					if (this.IsShippingStateNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippingAddresses.ShippingStateColumn] == null ? null : Convert.ToString(this[this.tableShippingAddresses.ShippingStateColumn]));
					}
				}
				set
				{
					this[this.tableShippingAddresses.ShippingStateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ShippingPostal
			{
				get
				{
					if (this.IsShippingPostalNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippingAddresses.ShippingPostalColumn] == null ? null : Convert.ToString(this[this.tableShippingAddresses.ShippingPostalColumn]));
					}
				}
				set
				{
					this[this.tableShippingAddresses.ShippingPostalColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ShippingPhone
			{
				get
				{
					if (this.IsShippingPhoneNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippingAddresses.ShippingPhoneColumn] == null ? null : Convert.ToString(this[this.tableShippingAddresses.ShippingPhoneColumn]));
					}
				}
				set
				{
					this[this.tableShippingAddresses.ShippingPhoneColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ShippingEmail
			{
				get
				{
					if (this.IsShippingEmailNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippingAddresses.ShippingEmailColumn] == null ? null : Convert.ToString(this[this.tableShippingAddresses.ShippingEmailColumn]));
					}
				}
				set
				{
					this[this.tableShippingAddresses.ShippingEmailColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ShippingFax
			{
				get
				{
					if (this.IsShippingFaxNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippingAddresses.ShippingFaxColumn] == null ? null : Convert.ToString(this[this.tableShippingAddresses.ShippingFaxColumn]));
					}
				}
				set
				{
					this[this.tableShippingAddresses.ShippingFaxColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ShippingNote
			{
				get
				{
					if (this.IsShippingNoteNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippingAddresses.ShippingNoteColumn] == null ? null : Convert.ToString(this[this.tableShippingAddresses.ShippingNoteColumn]));
					}
				}
				set
				{
					this[this.tableShippingAddresses.ShippingNoteColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strEnteredBy
			{
				get
				{
					if (this.IsstrEnteredByNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippingAddresses.strEnteredByColumn] == null ? null : Convert.ToString(this[this.tableShippingAddresses.strEnteredByColumn]));
					}
				}
				set
				{
					this[this.tableShippingAddresses.strEnteredByColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime dtmEnteredOn
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableShippingAddresses.dtmEnteredOnColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'dtmEnteredOn' in table 'ShippingAddresses' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippingAddresses.dtmEnteredOnColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableShippingAddresses.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'ShippingAddresses' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippingAddresses.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShippingNameNull()
			{
				return this.IsNull(this.tableShippingAddresses.ShippingNameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShippingNameNull()
			{
				this[this.tableShippingAddresses.ShippingNameColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsContactFirstNameNull()
			{
				return this.IsNull(this.tableShippingAddresses.ContactFirstNameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetContactFirstNameNull()
			{
				this[this.tableShippingAddresses.ContactFirstNameColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsContactLastNameNull()
			{
				return this.IsNull(this.tableShippingAddresses.ContactLastNameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetContactLastNameNull()
			{
				this[this.tableShippingAddresses.ContactLastNameColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShippingAddressNull()
			{
				return this.IsNull(this.tableShippingAddresses.ShippingAddressColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShippingAddressNull()
			{
				this[this.tableShippingAddresses.ShippingAddressColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShippingCityNull()
			{
				return this.IsNull(this.tableShippingAddresses.ShippingCityColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShippingCityNull()
			{
				this[this.tableShippingAddresses.ShippingCityColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShippingStateNull()
			{
				return this.IsNull(this.tableShippingAddresses.ShippingStateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShippingStateNull()
			{
				this[this.tableShippingAddresses.ShippingStateColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShippingPostalNull()
			{
				return this.IsNull(this.tableShippingAddresses.ShippingPostalColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShippingPostalNull()
			{
				this[this.tableShippingAddresses.ShippingPostalColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShippingPhoneNull()
			{
				return this.IsNull(this.tableShippingAddresses.ShippingPhoneColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShippingPhoneNull()
			{
				this[this.tableShippingAddresses.ShippingPhoneColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShippingEmailNull()
			{
				return this.IsNull(this.tableShippingAddresses.ShippingEmailColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShippingEmailNull()
			{
				this[this.tableShippingAddresses.ShippingEmailColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShippingFaxNull()
			{
				return this.IsNull(this.tableShippingAddresses.ShippingFaxColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShippingFaxNull()
			{
				this[this.tableShippingAddresses.ShippingFaxColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShippingNoteNull()
			{
				return this.IsNull(this.tableShippingAddresses.ShippingNoteColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShippingNoteNull()
			{
				this[this.tableShippingAddresses.ShippingNoteColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrEnteredByNull()
			{
				return this.IsNull(this.tableShippingAddresses.strEnteredByColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrEnteredByNull()
			{
				this[this.tableShippingAddresses.strEnteredByColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdtmEnteredOnNull()
			{
				return this.IsNull(this.tableShippingAddresses.dtmEnteredOnColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdtmEnteredOnNull()
			{
				this[this.tableShippingAddresses.dtmEnteredOnColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableShippingAddresses.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableShippingAddresses.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingsRow[] GetShippingsRows()
			{
				if (this.Table.ChildRelations["FK_tblShipMain_intDestination"] == null)
				{
					return new ShippingsRow[0];
				}
				else
				{
					return (ShippingsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblShipMain_intDestination"]);
				}
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class InventoryRow : System.Data.DataRow
		{
			private InventoryDataTable tableInventory;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal InventoryRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableInventory = (InventoryDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int InventoryID
			{
				get
				{
					return Convert.ToInt32(this[this.tableInventory.InventoryIDColumn]);
				}
				set
				{
					this[this.tableInventory.InventoryIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime InventoryDate
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableInventory.InventoryDateColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'InventoryDate' in table 'Inventory' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventory.InventoryDateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int InventoryItemID
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableInventory.InventoryItemIDColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'InventoryItemID' in table 'Inventory' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventory.InventoryItemIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int InventoryQuantity
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableInventory.InventoryQuantityColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'InventoryQuantity' in table 'Inventory' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventory.InventoryQuantityColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float InventoryPallets
			{
				get
				{
					try
					{
						return Convert.ToSingle(this[this.tableInventory.InventoryPalletsColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'InventoryPallets' in table 'Inventory' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventory.InventoryPalletsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableInventory.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'Inventory' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventory.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strEnteredBy
			{
				get
				{
					try
					{
						return (this[this.tableInventory.strEnteredByColumn] == null ? null : Convert.ToString(this[this.tableInventory.strEnteredByColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'strEnteredBy' in table 'Inventory' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventory.strEnteredByColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime dtmEnteredOn
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableInventory.dtmEnteredOnColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'dtmEnteredOn' in table 'Inventory' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventory.dtmEnteredOnColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string PO
			{
				get
				{
					if (this.IsPONull())
					{
						return null;
					}
					else
					{
						return (this[this.tableInventory.POColumn] == null ? null : Convert.ToString(this[this.tableInventory.POColumn]));
					}
				}
				set
				{
					this[this.tableInventory.POColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Lot
			{
				get
				{
					if (this.IsLotNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableInventory.LotColumn] == null ? null : Convert.ToString(this[this.tableInventory.LotColumn]));
					}
				}
				set
				{
					this[this.tableInventory.LotColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int Shift
			{
				get
				{
					if (this.IsShiftNull())
					{
						return -1;
					}
					else
					{
						return Convert.ToInt32(this[this.tableInventory.ShiftColumn]);
					}
				}
				set
				{
					this[this.tableInventory.ShiftColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int Pallet
			{
				get
				{
					if (this.IsPalletNull())
					{
						return -1;
					}
					else
					{
						return Convert.ToInt32(this[this.tableInventory.PalletColumn]);
					}
				}
				set
				{
					this[this.tableInventory.PalletColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int LPNNumber
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableInventory.LPNNumberColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'LPNNumber' in table 'Inventory' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventory.LPNNumberColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime ExpirationDate
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableInventory.ExpirationDateColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ExpirationDate' in table 'Inventory' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventory.ExpirationDateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow ItemsRow
			{
				get
				{
					return (ItemsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblInventory_InventoryItemID"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblInventory_InventoryItemID"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShiftsRow ShiftsRow
			{
				get
				{
					return (ShiftsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblInventory_Shift"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblInventory_Shift"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsInventoryDateNull()
			{
				return this.IsNull(this.tableInventory.InventoryDateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetInventoryDateNull()
			{
				this[this.tableInventory.InventoryDateColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsInventoryItemIDNull()
			{
				return this.IsNull(this.tableInventory.InventoryItemIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetInventoryItemIDNull()
			{
				this[this.tableInventory.InventoryItemIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsInventoryQuantityNull()
			{
				return this.IsNull(this.tableInventory.InventoryQuantityColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetInventoryQuantityNull()
			{
				this[this.tableInventory.InventoryQuantityColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsInventoryPalletsNull()
			{
				return this.IsNull(this.tableInventory.InventoryPalletsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetInventoryPalletsNull()
			{
				this[this.tableInventory.InventoryPalletsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableInventory.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableInventory.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrEnteredByNull()
			{
				return this.IsNull(this.tableInventory.strEnteredByColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrEnteredByNull()
			{
				this[this.tableInventory.strEnteredByColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdtmEnteredOnNull()
			{
				return this.IsNull(this.tableInventory.dtmEnteredOnColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdtmEnteredOnNull()
			{
				this[this.tableInventory.dtmEnteredOnColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsPONull()
			{
				return this.IsNull(this.tableInventory.POColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetPONull()
			{
				this[this.tableInventory.POColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsLotNull()
			{
				return this.IsNull(this.tableInventory.LotColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetLotNull()
			{
				this[this.tableInventory.LotColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShiftNull()
			{
				return this.IsNull(this.tableInventory.ShiftColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShiftNull()
			{
				this[this.tableInventory.ShiftColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsPalletNull()
			{
				return this.IsNull(this.tableInventory.PalletColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetPalletNull()
			{
				this[this.tableInventory.PalletColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsLPNNumberNull()
			{
				return this.IsNull(this.tableInventory.LPNNumberColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetLPNNumberNull()
			{
				this[this.tableInventory.LPNNumberColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsExpirationDateNull()
			{
				return this.IsNull(this.tableInventory.ExpirationDateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetExpirationDateNull()
			{
				this[this.tableInventory.ExpirationDateColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryBOMsRow[] GetInventoryBOMsRows()
			{
				if (this.Table.ChildRelations["FK_tblInventoryBOMs_tblInventory"] == null)
				{
					return new InventoryBOMsRow[0];
				}
				else
				{
					return (InventoryBOMsRow[])base.GetChildRows(this.Table.ChildRelations["FK_tblInventoryBOMs_tblInventory"]);
				}
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class UserPermissionsRow : System.Data.DataRow
		{
			private UserPermissionsDataTable tableUserPermissions;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal UserPermissionsRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableUserPermissions = (UserPermissionsDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int UserPermissionID
			{
				get
				{
					return Convert.ToInt32(this[this.tableUserPermissions.UserPermissionIDColumn]);
				}
				set
				{
					this[this.tableUserPermissions.UserPermissionIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string UserName
			{
				get
				{
					return (this[this.tableUserPermissions.UserNameColumn] == null ? null : Convert.ToString(this[this.tableUserPermissions.UserNameColumn]));
				}
				set
				{
					this[this.tableUserPermissions.UserNameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string PermissionObject
			{
				get
				{
					return (this[this.tableUserPermissions.PermissionObjectColumn] == null ? null : Convert.ToString(this[this.tableUserPermissions.PermissionObjectColumn]));
				}
				set
				{
					this[this.tableUserPermissions.PermissionObjectColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string PermissionLevel
			{
				get
				{
					return (this[this.tableUserPermissions.PermissionLevelColumn] == null ? null : Convert.ToString(this[this.tableUserPermissions.PermissionLevelColumn]));
				}
				set
				{
					this[this.tableUserPermissions.PermissionLevelColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableUserPermissions.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'UserPermissions' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableUserPermissions.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableUserPermissions.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableUserPermissions.tsColumn] = Convert.DBNull;
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class ReportsRow : System.Data.DataRow
		{
			private ReportsDataTable tableReports;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ReportsRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableReports = (ReportsDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReportID
			{
				get
				{
					return Convert.ToInt32(this[this.tableReports.ReportIDColumn]);
				}
				set
				{
					this[this.tableReports.ReportIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Name
			{
				get
				{
					return (this[this.tableReports.NameColumn] == null ? null : Convert.ToString(this[this.tableReports.NameColumn]));
				}
				set
				{
					this[this.tableReports.NameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string CodeName
			{
				get
				{
					return (this[this.tableReports.CodeNameColumn] == null ? null : Convert.ToString(this[this.tableReports.CodeNameColumn]));
				}
				set
				{
					this[this.tableReports.CodeNameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ModuleName
			{
				get
				{
					try
					{
						return (this[this.tableReports.ModuleNameColumn] == null ? null : Convert.ToString(this[this.tableReports.ModuleNameColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ModuleName' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.ModuleNameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Type
			{
				get
				{
					try
					{
						return (this[this.tableReports.TypeColumn] == null ? null : Convert.ToString(this[this.tableReports.TypeColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'Type' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.TypeColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool FilterReport
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableReports.FilterReportColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'FilterReport' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.FilterReportColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool DateFilter
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableReports.DateFilterColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'DateFilter' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.DateFilterColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool MachineFilter
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableReports.MachineFilterColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'MachineFilter' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.MachineFilterColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ShiftFilter
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableReports.ShiftFilterColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ShiftFilter' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.ShiftFilterColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool CustomerFilter
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableReports.CustomerFilterColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'CustomerFilter' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.CustomerFilterColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool LotFilter
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableReports.LotFilterColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'LotFilter' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.LotFilterColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool POFilter
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableReports.POFilterColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'POFilter' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.POFilterColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ItemFilter
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableReports.ItemFilterColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ItemFilter' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.ItemFilterColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool BOLFilter
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableReports.BOLFilterColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'BOLFilter' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.BOLFilterColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool DNFilter
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableReports.DNFilterColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'DNFilter' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.DNFilterColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool DestinationFilter
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableReports.DestinationFilterColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'DestinationFilter' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.DestinationFilterColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool CarrierFilter
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableReports.CarrierFilterColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'CarrierFilter' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.CarrierFilterColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool VendorFilter
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableReports.VendorFilterColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'VendorFilter' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.VendorFilterColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool itemtypeFilter
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableReports.itemtypeFilterColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'itemtypeFilter' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.itemtypeFilterColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool stockFilter
			{
				get
				{
					try
					{
						return Convert.ToBoolean(this[this.tableReports.stockFilterColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'stockFilter' in table 'Reports' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReports.stockFilterColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsModuleNameNull()
			{
				return this.IsNull(this.tableReports.ModuleNameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetModuleNameNull()
			{
				this[this.tableReports.ModuleNameColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsTypeNull()
			{
				return this.IsNull(this.tableReports.TypeColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetTypeNull()
			{
				this[this.tableReports.TypeColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsFilterReportNull()
			{
				return this.IsNull(this.tableReports.FilterReportColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetFilterReportNull()
			{
				this[this.tableReports.FilterReportColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsDateFilterNull()
			{
				return this.IsNull(this.tableReports.DateFilterColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetDateFilterNull()
			{
				this[this.tableReports.DateFilterColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsMachineFilterNull()
			{
				return this.IsNull(this.tableReports.MachineFilterColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetMachineFilterNull()
			{
				this[this.tableReports.MachineFilterColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShiftFilterNull()
			{
				return this.IsNull(this.tableReports.ShiftFilterColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShiftFilterNull()
			{
				this[this.tableReports.ShiftFilterColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCustomerFilterNull()
			{
				return this.IsNull(this.tableReports.CustomerFilterColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCustomerFilterNull()
			{
				this[this.tableReports.CustomerFilterColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsLotFilterNull()
			{
				return this.IsNull(this.tableReports.LotFilterColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetLotFilterNull()
			{
				this[this.tableReports.LotFilterColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsPOFilterNull()
			{
				return this.IsNull(this.tableReports.POFilterColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetPOFilterNull()
			{
				this[this.tableReports.POFilterColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsItemFilterNull()
			{
				return this.IsNull(this.tableReports.ItemFilterColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetItemFilterNull()
			{
				this[this.tableReports.ItemFilterColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsBOLFilterNull()
			{
				return this.IsNull(this.tableReports.BOLFilterColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetBOLFilterNull()
			{
				this[this.tableReports.BOLFilterColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsDNFilterNull()
			{
				return this.IsNull(this.tableReports.DNFilterColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetDNFilterNull()
			{
				this[this.tableReports.DNFilterColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsDestinationFilterNull()
			{
				return this.IsNull(this.tableReports.DestinationFilterColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetDestinationFilterNull()
			{
				this[this.tableReports.DestinationFilterColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCarrierFilterNull()
			{
				return this.IsNull(this.tableReports.CarrierFilterColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCarrierFilterNull()
			{
				this[this.tableReports.CarrierFilterColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsVendorFilterNull()
			{
				return this.IsNull(this.tableReports.VendorFilterColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetVendorFilterNull()
			{
				this[this.tableReports.VendorFilterColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsitemtypeFilterNull()
			{
				return this.IsNull(this.tableReports.itemtypeFilterColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetitemtypeFilterNull()
			{
				this[this.tableReports.itemtypeFilterColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstockFilterNull()
			{
				return this.IsNull(this.tableReports.stockFilterColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstockFilterNull()
			{
				this[this.tableReports.stockFilterColumn] = Convert.DBNull;
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class ReturnDetRow : System.Data.DataRow
		{
			private ReturnDetDataTable tableReturnDet;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ReturnDetRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableReturnDet = (ReturnDetDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReturnDetID
			{
				get
				{
					return Convert.ToInt32(this[this.tableReturnDet.ReturnDetIDColumn]);
				}
				set
				{
					this[this.tableReturnDet.ReturnDetIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReceiveMainID
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableReturnDet.ReceiveMainIDColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ReceiveMainID' in table 'ReturnDet' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReturnDet.ReceiveMainIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReturnDetItemID
			{
				get
				{
					if (this.IsReturnDetItemIDNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableReturnDet.ReturnDetItemIDColumn]);
					}
				}
				set
				{
					this[this.tableReturnDet.ReturnDetItemIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ReturnDetLot
			{
				get
				{
					if (this.IsReturnDetLotNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableReturnDet.ReturnDetLotColumn] == null ? null : Convert.ToString(this[this.tableReturnDet.ReturnDetLotColumn]));
					}
				}
				set
				{
					this[this.tableReturnDet.ReturnDetLotColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReturnDetQty
			{
				get
				{
					if (this.IsReturnDetQtyNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableReturnDet.ReturnDetQtyColumn]);
					}
				}
				set
				{
					this[this.tableReturnDet.ReturnDetQtyColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int intUnits
			{
				get
				{
					if (this.IsintUnitsNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableReturnDet.intUnitsColumn]);
					}
				}
				set
				{
					this[this.tableReturnDet.intUnitsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float sngPallets
			{
				get
				{
					if (this.IssngPalletsNull())
					{
						return 0F;
					}
					else
					{
						return Convert.ToSingle(this[this.tableReturnDet.sngPalletsColumn]);
					}
				}
				set
				{
					this[this.tableReturnDet.sngPalletsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Reason
			{
				get
				{
					if (this.IsReasonNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableReturnDet.ReasonColumn] == null ? null : Convert.ToString(this[this.tableReturnDet.ReasonColumn]));
					}
				}
				set
				{
					this[this.tableReturnDet.ReasonColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableReturnDet.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'ReturnDet' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReturnDet.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime ExpirationDate
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableReturnDet.ExpirationDateColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ExpirationDate' in table 'ReturnDet' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableReturnDet.ExpirationDateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow ItemsRow
			{
				get
				{
					return (ItemsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblItems_tblReturnDet"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblItems_tblReturnDet"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingsRow ReceivingsRow
			{
				get
				{
					return (ReceivingsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblReturnDet_tblReceivMain"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblReturnDet_tblReceivMain"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReceiveMainIDNull()
			{
				return this.IsNull(this.tableReturnDet.ReceiveMainIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReceiveMainIDNull()
			{
				this[this.tableReturnDet.ReceiveMainIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReturnDetItemIDNull()
			{
				return this.IsNull(this.tableReturnDet.ReturnDetItemIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReturnDetItemIDNull()
			{
				this[this.tableReturnDet.ReturnDetItemIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReturnDetLotNull()
			{
				return this.IsNull(this.tableReturnDet.ReturnDetLotColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReturnDetLotNull()
			{
				this[this.tableReturnDet.ReturnDetLotColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReturnDetQtyNull()
			{
				return this.IsNull(this.tableReturnDet.ReturnDetQtyColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReturnDetQtyNull()
			{
				this[this.tableReturnDet.ReturnDetQtyColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsintUnitsNull()
			{
				return this.IsNull(this.tableReturnDet.intUnitsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetintUnitsNull()
			{
				this[this.tableReturnDet.intUnitsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IssngPalletsNull()
			{
				return this.IsNull(this.tableReturnDet.sngPalletsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetsngPalletsNull()
			{
				this[this.tableReturnDet.sngPalletsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReasonNull()
			{
				return this.IsNull(this.tableReturnDet.ReasonColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReasonNull()
			{
				this[this.tableReturnDet.ReasonColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableReturnDet.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableReturnDet.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsExpirationDateNull()
			{
				return this.IsNull(this.tableReturnDet.ExpirationDateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetExpirationDateNull()
			{
				this[this.tableReturnDet.ExpirationDateColumn] = Convert.DBNull;
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class ShippingReturnDetailsRow : System.Data.DataRow
		{
			private ShippingReturnDetailsDataTable tableShippingReturnDetails;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal ShippingReturnDetailsRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableShippingReturnDetails = (ShippingReturnDetailsDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReturnDetID
			{
				get
				{
					return Convert.ToInt32(this[this.tableShippingReturnDetails.ReturnDetIDColumn]);
				}
				set
				{
					this[this.tableShippingReturnDetails.ReturnDetIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ShipMainID
			{
				get
				{
					if (this.IsShipMainIDNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableShippingReturnDetails.ShipMainIDColumn]);
					}
				}
				set
				{
					this[this.tableShippingReturnDetails.ShipMainIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReturnDetItemID
			{
				get
				{
					if (this.IsReturnDetItemIDNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableShippingReturnDetails.ReturnDetItemIDColumn]);
					}
				}
				set
				{
					this[this.tableShippingReturnDetails.ReturnDetItemIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string ReturnDetLot
			{
				get
				{
					if (this.IsReturnDetLotNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippingReturnDetails.ReturnDetLotColumn] == null ? null : Convert.ToString(this[this.tableShippingReturnDetails.ReturnDetLotColumn]));
					}
				}
				set
				{
					this[this.tableShippingReturnDetails.ReturnDetLotColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ReturnDetQty
			{
				get
				{
					if (this.IsReturnDetQtyNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableShippingReturnDetails.ReturnDetQtyColumn]);
					}
				}
				set
				{
					this[this.tableShippingReturnDetails.ReturnDetQtyColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int intUnits
			{
				get
				{
					if (this.IsintUnitsNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableShippingReturnDetails.intUnitsColumn]);
					}
				}
				set
				{
					this[this.tableShippingReturnDetails.intUnitsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float sngPallets
			{
				get
				{
					if (this.IssngPalletsNull())
					{
						return 0F;
					}
					else
					{
						return Convert.ToSingle(this[this.tableShippingReturnDetails.sngPalletsColumn]);
					}
				}
				set
				{
					this[this.tableShippingReturnDetails.sngPalletsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Reason
			{
				get
				{
					if (this.IsReasonNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableShippingReturnDetails.ReasonColumn] == null ? null : Convert.ToString(this[this.tableShippingReturnDetails.ReasonColumn]));
					}
				}
				set
				{
					this[this.tableShippingReturnDetails.ReasonColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableShippingReturnDetails.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'ShippingReturnDetails' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableShippingReturnDetails.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime ExpirationDate
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableShippingReturnDetails.ExpirationDateColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ExpirationDate' in table 'ShippingReturnDetails' is DBNull." + "", e);
					}
				}
				set
				{
					this[this.tableShippingReturnDetails.ExpirationDateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow ItemsRow
			{
				get
				{
					return (ItemsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblItems_tblShipReturnDet"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblItems_tblShipReturnDet"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingsRow ShippingsRow
			{
				get
				{
					return (ShippingsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblShipReturnDet_tblShipMain"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblShipReturnDet_tblShipMain"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsShipMainIDNull()
			{
				return this.IsNull(this.tableShippingReturnDetails.ShipMainIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetShipMainIDNull()
			{
				this[this.tableShippingReturnDetails.ShipMainIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReturnDetItemIDNull()
			{
				return this.IsNull(this.tableShippingReturnDetails.ReturnDetItemIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReturnDetItemIDNull()
			{
				this[this.tableShippingReturnDetails.ReturnDetItemIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReturnDetLotNull()
			{
				return this.IsNull(this.tableShippingReturnDetails.ReturnDetLotColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReturnDetLotNull()
			{
				this[this.tableShippingReturnDetails.ReturnDetLotColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReturnDetQtyNull()
			{
				return this.IsNull(this.tableShippingReturnDetails.ReturnDetQtyColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReturnDetQtyNull()
			{
				this[this.tableShippingReturnDetails.ReturnDetQtyColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsintUnitsNull()
			{
				return this.IsNull(this.tableShippingReturnDetails.intUnitsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetintUnitsNull()
			{
				this[this.tableShippingReturnDetails.intUnitsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IssngPalletsNull()
			{
				return this.IsNull(this.tableShippingReturnDetails.sngPalletsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetsngPalletsNull()
			{
				this[this.tableShippingReturnDetails.sngPalletsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReasonNull()
			{
				return this.IsNull(this.tableShippingReturnDetails.ReasonColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReasonNull()
			{
				this[this.tableShippingReturnDetails.ReasonColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableShippingReturnDetails.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableShippingReturnDetails.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsExpirationDateNull()
			{
				return this.IsNull(this.tableShippingReturnDetails.ExpirationDateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetExpirationDateNull()
			{
				this[this.tableShippingReturnDetails.ExpirationDateColumn] = Convert.DBNull;
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class InventoryAdjustmentRow : System.Data.DataRow
		{
			private InventoryAdjustmentDataTable tableInventoryAdjustment;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal InventoryAdjustmentRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableInventoryAdjustment = (InventoryAdjustmentDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int AdjustmentID
			{
				get
				{
					return Convert.ToInt32(this[this.tableInventoryAdjustment.AdjustmentIDColumn]);
				}
				set
				{
					this[this.tableInventoryAdjustment.AdjustmentIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime AdjustmentDate
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableInventoryAdjustment.AdjustmentDateColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'AdjustmentDate' in table 'InventoryAdjustment' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventoryAdjustment.AdjustmentDateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int Customer
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableInventoryAdjustment.CustomerColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'Customer' in table 'InventoryAdjustment' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventoryAdjustment.CustomerColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int ItemID
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableInventoryAdjustment.ItemIDColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ItemID' in table 'InventoryAdjustment' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventoryAdjustment.ItemIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float OriginalQuantity
			{
				get
				{
					try
					{
						return Convert.ToSingle(this[this.tableInventoryAdjustment.OriginalQuantityColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'OriginalQuantity' in table 'InventoryAdjustment' is DBNull." + "", e);
					}
				}
				set
				{
					this[this.tableInventoryAdjustment.OriginalQuantityColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float NewCount
			{
				get
				{
					try
					{
						return Convert.ToSingle(this[this.tableInventoryAdjustment.NewCountColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'NewCount' in table 'InventoryAdjustment' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventoryAdjustment.NewCountColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string Reason
			{
				get
				{
					try
					{
						return (this[this.tableInventoryAdjustment.ReasonColumn] == null ? null : Convert.ToString(this[this.tableInventoryAdjustment.ReasonColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'Reason' in table 'InventoryAdjustment' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventoryAdjustment.ReasonColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] rv
			{
				get
				{
					try
					{
						return (byte[])this[this.tableInventoryAdjustment.rvColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'rv' in table 'InventoryAdjustment' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventoryAdjustment.rvColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string strEnteredBy
			{
				get
				{
					try
					{
						return (this[this.tableInventoryAdjustment.strEnteredByColumn] == null ? null : Convert.ToString(this[this.tableInventoryAdjustment.strEnteredByColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'strEnteredBy' in table 'InventoryAdjustment' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventoryAdjustment.strEnteredByColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime dtmEnteredOn
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableInventoryAdjustment.dtmEnteredOnColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'dtmEnteredOn' in table 'InventoryAdjustment' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventoryAdjustment.dtmEnteredOnColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string OriginalLot
			{
				get
				{
					try
					{
						return (this[this.tableInventoryAdjustment.OriginalLotColumn] == null ? null : Convert.ToString(this[this.tableInventoryAdjustment.OriginalLotColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'OriginalLot' in table 'InventoryAdjustment' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventoryAdjustment.OriginalLotColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string NewLot
			{
				get
				{
					try
					{
						return (this[this.tableInventoryAdjustment.NewLotColumn] == null ? null : Convert.ToString(this[this.tableInventoryAdjustment.NewLotColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'NewLot' in table 'InventoryAdjustment' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventoryAdjustment.NewLotColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int LPN
			{
				get
				{
					try
					{
						return Convert.ToInt32(this[this.tableInventoryAdjustment.LPNColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'LPN' in table 'InventoryAdjustment' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventoryAdjustment.LPNColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow ItemsRow
			{
				get
				{
					return (ItemsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblInventoryAdjustment_Item"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblInventoryAdjustment_Item"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CustomersRow CustomersRow
			{
				get
				{
					return (CustomersRow)this.GetParentRow(this.Table.ParentRelations["FK_tblInventoryAdjustment_Customer"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblInventoryAdjustment_Customer"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsAdjustmentDateNull()
			{
				return this.IsNull(this.tableInventoryAdjustment.AdjustmentDateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetAdjustmentDateNull()
			{
				this[this.tableInventoryAdjustment.AdjustmentDateColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsCustomerNull()
			{
				return this.IsNull(this.tableInventoryAdjustment.CustomerColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetCustomerNull()
			{
				this[this.tableInventoryAdjustment.CustomerColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsItemIDNull()
			{
				return this.IsNull(this.tableInventoryAdjustment.ItemIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetItemIDNull()
			{
				this[this.tableInventoryAdjustment.ItemIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsOriginalQuantityNull()
			{
				return this.IsNull(this.tableInventoryAdjustment.OriginalQuantityColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetOriginalQuantityNull()
			{
				this[this.tableInventoryAdjustment.OriginalQuantityColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsNewCountNull()
			{
				return this.IsNull(this.tableInventoryAdjustment.NewCountColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetNewCountNull()
			{
				this[this.tableInventoryAdjustment.NewCountColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsReasonNull()
			{
				return this.IsNull(this.tableInventoryAdjustment.ReasonColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetReasonNull()
			{
				this[this.tableInventoryAdjustment.ReasonColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsrvNull()
			{
				return this.IsNull(this.tableInventoryAdjustment.rvColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetrvNull()
			{
				this[this.tableInventoryAdjustment.rvColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsstrEnteredByNull()
			{
				return this.IsNull(this.tableInventoryAdjustment.strEnteredByColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetstrEnteredByNull()
			{
				this[this.tableInventoryAdjustment.strEnteredByColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsdtmEnteredOnNull()
			{
				return this.IsNull(this.tableInventoryAdjustment.dtmEnteredOnColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetdtmEnteredOnNull()
			{
				this[this.tableInventoryAdjustment.dtmEnteredOnColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsOriginalLotNull()
			{
				return this.IsNull(this.tableInventoryAdjustment.OriginalLotColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetOriginalLotNull()
			{
				this[this.tableInventoryAdjustment.OriginalLotColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsNewLotNull()
			{
				return this.IsNull(this.tableInventoryAdjustment.NewLotColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetNewLotNull()
			{
				this[this.tableInventoryAdjustment.NewLotColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsLPNNull()
			{
				return this.IsNull(this.tableInventoryAdjustment.LPNColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetLPNNull()
			{
				this[this.tableInventoryAdjustment.LPNColumn] = Convert.DBNull;
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class AuditTrailRow : System.Data.DataRow
		{
			private AuditTrailDataTable tableAuditTrail;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal AuditTrailRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableAuditTrail = (AuditTrailDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int PK_ID
			{
				get
				{
					return Convert.ToInt32(this[this.tableAuditTrail.PK_IDColumn]);
				}
				set
				{
					this[this.tableAuditTrail.PK_IDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int RecordID
			{
				get
				{
					if (this.IsRecordIDNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableAuditTrail.RecordIDColumn]);
					}
				}
				set
				{
					this[this.tableAuditTrail.RecordIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string RecordType
			{
				get
				{
					if (this.IsRecordTypeNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableAuditTrail.RecordTypeColumn] == null ? null : Convert.ToString(this[this.tableAuditTrail.RecordTypeColumn]));
					}
				}
				set
				{
					this[this.tableAuditTrail.RecordTypeColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string RecordChanges
			{
				get
				{
					if (this.IsRecordChangesNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableAuditTrail.RecordChangesColumn] == null ? null : Convert.ToString(this[this.tableAuditTrail.RecordChangesColumn]));
					}
				}
				set
				{
					this[this.tableAuditTrail.RecordChangesColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public DateTime ChangeDate
			{
				get
				{
					try
					{
						return Convert.ToDateTime(this[this.tableAuditTrail.ChangeDateColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ChangeDate' in table 'AuditTrail' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableAuditTrail.ChangeDateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public string UserID
			{
				get
				{
					if (this.IsUserIDNull())
					{
						return null;
					}
					else
					{
						return (this[this.tableAuditTrail.UserIDColumn] == null ? null : Convert.ToString(this[this.tableAuditTrail.UserIDColumn]));
					}
				}
				set
				{
					this[this.tableAuditTrail.UserIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsRecordIDNull()
			{
				return this.IsNull(this.tableAuditTrail.RecordIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetRecordIDNull()
			{
				this[this.tableAuditTrail.RecordIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsRecordTypeNull()
			{
				return this.IsNull(this.tableAuditTrail.RecordTypeColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetRecordTypeNull()
			{
				this[this.tableAuditTrail.RecordTypeColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsRecordChangesNull()
			{
				return this.IsNull(this.tableAuditTrail.RecordChangesColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetRecordChangesNull()
			{
				this[this.tableAuditTrail.RecordChangesColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsChangeDateNull()
			{
				return this.IsNull(this.tableAuditTrail.ChangeDateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetChangeDateNull()
			{
				this[this.tableAuditTrail.ChangeDateColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsUserIDNull()
			{
				return this.IsNull(this.tableAuditTrail.UserIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetUserIDNull()
			{
				this[this.tableAuditTrail.UserIDColumn] = Convert.DBNull;
			}
		}

		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class InventoryBOMsRow : System.Data.DataRow
		{
			private InventoryBOMsDataTable tableInventoryBOMs;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal InventoryBOMsRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tableInventoryBOMs = (InventoryBOMsDataTable)this.Table;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int InventoryBOMID
			{
				get
				{
					return Convert.ToInt32(this[this.tableInventoryBOMs.InventoryBOMIDColumn]);
				}
				set
				{
					this[this.tableInventoryBOMs.InventoryBOMIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int InventoryBOMRawMatID
			{
				get
				{
					if (this.IsInventoryBOMRawMatIDNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableInventoryBOMs.InventoryBOMRawMatIDColumn]);
					}
				}
				set
				{
					this[this.tableInventoryBOMs.InventoryBOMRawMatIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public int InventoryBOMInventoryID
			{
				get
				{
					if (this.IsInventoryBOMInventoryIDNull())
					{
						return 0;
					}
					else
					{
						return Convert.ToInt32(this[this.tableInventoryBOMs.InventoryBOMInventoryIDColumn]);
					}
				}
				set
				{
					this[this.tableInventoryBOMs.InventoryBOMInventoryIDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public float InventoryBOMQuantity
			{
				get
				{
					if (this.IsInventoryBOMQuantityNull())
					{
						return 0F;
					}
					else
					{
						return Convert.ToSingle(this[this.tableInventoryBOMs.InventoryBOMQuantityColumn]);
					}
				}
				set
				{
					this[this.tableInventoryBOMs.InventoryBOMQuantityColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public byte[] ts
			{
				get
				{
					try
					{
						return (byte[])this[this.tableInventoryBOMs.tsColumn];
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column 'ts' in table 'InventoryBOMs' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableInventoryBOMs.tsColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public double ScrapFactor
			{
				get
				{
					if (this.IsScrapFactorNull())
					{
						return 0D;
					}
					else
					{
						return Convert.ToDouble(this[this.tableInventoryBOMs.ScrapFactorColumn]);
					}
				}
				set
				{
					this[this.tableInventoryBOMs.ScrapFactorColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryRow InventoryRow
			{
				get
				{
					return (InventoryRow)this.GetParentRow(this.Table.ParentRelations["FK_tblInventoryBOMs_tblInventory"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblInventoryBOMs_tblInventory"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow ItemsRow
			{
				get
				{
					return (ItemsRow)this.GetParentRow(this.Table.ParentRelations["FK_tblItems_tblInventoryBOMs"]);
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_tblItems_tblInventoryBOMs"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsInventoryBOMRawMatIDNull()
			{
				return this.IsNull(this.tableInventoryBOMs.InventoryBOMRawMatIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetInventoryBOMRawMatIDNull()
			{
				this[this.tableInventoryBOMs.InventoryBOMRawMatIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsInventoryBOMInventoryIDNull()
			{
				return this.IsNull(this.tableInventoryBOMs.InventoryBOMInventoryIDColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetInventoryBOMInventoryIDNull()
			{
				this[this.tableInventoryBOMs.InventoryBOMInventoryIDColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsInventoryBOMQuantityNull()
			{
				return this.IsNull(this.tableInventoryBOMs.InventoryBOMQuantityColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetInventoryBOMQuantityNull()
			{
				this[this.tableInventoryBOMs.InventoryBOMQuantityColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IstsNull()
			{
				return this.IsNull(this.tableInventoryBOMs.tsColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SettsNull()
			{
				this[this.tableInventoryBOMs.tsColumn] = Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool IsScrapFactorNull()
			{
				return this.IsNull(this.tableInventoryBOMs.ScrapFactorColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public void SetScrapFactorNull()
			{
				this[this.tableInventoryBOMs.ScrapFactorColumn] = Convert.DBNull;
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class SecurityRowChangeEvent : System.EventArgs
		{
			private SecurityRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public SecurityRowChangeEvent(SecurityRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public SecurityRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class UsersRowChangeEvent : System.EventArgs
		{
			private UsersRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UsersRowChangeEvent(UsersRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UsersRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class CustomersRowChangeEvent : System.EventArgs
		{
			private CustomersRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CustomersRowChangeEvent(CustomersRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CustomersRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class ItemsRowChangeEvent : System.EventArgs
		{
			private ItemsRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRowChangeEvent(ItemsRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class ReceivingDetailsRowChangeEvent : System.EventArgs
		{
			private ReceivingDetailsRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingDetailsRowChangeEvent(ReceivingDetailsRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingDetailsRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class ReceivingsRowChangeEvent : System.EventArgs
		{
			private ReceivingsRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingsRowChangeEvent(ReceivingsRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingsRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class ProductionRowChangeEvent : System.EventArgs
		{
			private ProductionRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ProductionRowChangeEvent(ProductionRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ProductionRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class ShippingsRowChangeEvent : System.EventArgs
		{
			private ShippingsRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingsRowChangeEvent(ShippingsRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingsRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class MachineLinesRowChangeEvent : System.EventArgs
		{
			private MachineLinesRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public MachineLinesRowChangeEvent(MachineLinesRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public MachineLinesRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class ShippingDetailsRowChangeEvent : System.EventArgs
		{
			private ShippingDetailsRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingDetailsRowChangeEvent(ShippingDetailsRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingDetailsRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class BOMRowChangeEvent : System.EventArgs
		{
			private BOMRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public BOMRowChangeEvent(BOMRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public BOMRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class ShiftsRowChangeEvent : System.EventArgs
		{
			private ShiftsRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShiftsRowChangeEvent(ShiftsRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShiftsRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class CarriersRowChangeEvent : System.EventArgs
		{
			private CarriersRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CarriersRowChangeEvent(CarriersRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CarriersRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class CompanySettingsRowChangeEvent : System.EventArgs
		{
			private CompanySettingsRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CompanySettingsRowChangeEvent(CompanySettingsRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CompanySettingsRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class ShippingAddressesRowChangeEvent : System.EventArgs
		{
			private ShippingAddressesRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingAddressesRowChangeEvent(ShippingAddressesRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingAddressesRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class InventoryRowChangeEvent : System.EventArgs
		{
			private InventoryRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryRowChangeEvent(InventoryRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class UserPermissionsRowChangeEvent : System.EventArgs
		{
			private UserPermissionsRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UserPermissionsRowChangeEvent(UserPermissionsRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UserPermissionsRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class ReportsRowChangeEvent : System.EventArgs
		{
			private ReportsRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReportsRowChangeEvent(ReportsRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReportsRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class ReturnDetRowChangeEvent : System.EventArgs
		{
			private ReturnDetRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReturnDetRowChangeEvent(ReturnDetRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReturnDetRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class ShippingReturnDetailsRowChangeEvent : System.EventArgs
		{
			private ShippingReturnDetailsRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingReturnDetailsRowChangeEvent(ShippingReturnDetailsRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingReturnDetailsRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class InventoryAdjustmentRowChangeEvent : System.EventArgs
		{
			private InventoryAdjustmentRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryAdjustmentRowChangeEvent(InventoryAdjustmentRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryAdjustmentRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class AuditTrailRowChangeEvent : System.EventArgs
		{
			private AuditTrailRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public AuditTrailRowChangeEvent(AuditTrailRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public AuditTrailRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
		public class InventoryBOMsRowChangeEvent : System.EventArgs
		{
			private InventoryBOMsRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryBOMsRowChangeEvent(InventoryBOMsRow row, global::System.Data.DataRowAction action) : base()
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryBOMsRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
	}

	namespace SPGTableAdapters
	{

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class SecurityTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public SecurityTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Security";
				tableMapping.ColumnMappings.Add("strUser", "strUser");
				tableMapping.ColumnMappings.Add("AdvancedTabs", "AdvancedTabs");
				tableMapping.ColumnMappings.Add("ProductionReport", "ProductionReport");
				tableMapping.ColumnMappings.Add("CostingReport", "CostingReport");
				tableMapping.ColumnMappings.Add("ItemsForm", "ItemsForm");
				tableMapping.ColumnMappings.Add("ProductionForm", "ProductionForm");
				tableMapping.ColumnMappings.Add("CustomersForm", "CustomersForm");
				tableMapping.ColumnMappings.Add("ShippingForm", "ShippingForm");
				tableMapping.ColumnMappings.Add("ReceivingForm", "ReceivingForm");
				tableMapping.ColumnMappings.Add("FinancialTabs", "FinancialTabs");
				tableMapping.ColumnMappings.Add("ts", "ts");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblSecurity] WHERE (([strUser] = @Original_strUser) AND ((@IsNull_ts"+
					" = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblSecurity] ([strUser], [AdvancedTabs], [ProductionReport], [Costin"+
					"gReport], [ItemsForm], [ProductionForm], [CustomersForm], [ShippingForm], [Recei"+
					"vingForm], [FinancialTabs]) VALUES (@strUser, @AdvancedTabs, @ProductionReport, "+
					"@CostingReport, @ItemsForm, @ProductionForm, @CustomersForm, @ShippingForm, @Rec"+
					"eivingForm, @FinancialTabs);" + "\r" + "\n" + "SELECT strUser, AdvancedTabs, ProductionReport, Co"+
					"stingReport, ItemsForm, ProductionForm, CustomersForm, ShippingForm, ReceivingFo"+
					"rm, FinancialTabs, ts FROM tblSecurity WHERE (strUser = @strUser)";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdvancedTabs", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdvancedTabs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductionReport", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductionReport", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CostingReport", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostingReport", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemsForm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemsForm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductionForm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductionForm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomersForm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomersForm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingForm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingForm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivingForm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivingForm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinancialTabs", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinancialTabs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblSecurity] SET [strUser] = @strUser, [AdvancedTabs] = @AdvancedTabs, [P"+
					"roductionReport] = @ProductionReport, [CostingReport] = @CostingReport, [ItemsFo"+
					"rm] = @ItemsForm, [ProductionForm] = @ProductionForm, [CustomersForm] = @Custome"+
					"rsForm, [ShippingForm] = @ShippingForm, [ReceivingForm] = @ReceivingForm, [Finan"+
					"cialTabs] = @FinancialTabs WHERE (([strUser] = @Original_strUser) AND ((@IsNull_"+
					"ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)));" + "\r" + "\n" + "SELECT strUser, AdvancedTa"+
					"bs, ProductionReport, CostingReport, ItemsForm, ProductionForm, CustomersForm, S"+
					"hippingForm, ReceivingForm, FinancialTabs, ts FROM tblSecurity WHERE (strUser = "+
					"@strUser)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdvancedTabs", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdvancedTabs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductionReport", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductionReport", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CostingReport", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostingReport", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemsForm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemsForm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductionForm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductionForm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomersForm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomersForm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingForm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingForm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivingForm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivingForm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinancialTabs", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinancialTabs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        strUser, AdvancedTabs, ProductionReport, CostingReport, ItemsForm, "+
					"ProductionForm, CustomersForm, ShippingForm, ReceivingForm, FinancialTabs, " + "\r" + "\n" + "   "+
					"                      ts" + "\r" + "\n" + "FROM            tblSecurity";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT        strUser, AdvancedTabs, ProductionReport, CostingReport, ItemsForm, "+
					"ProductionForm, CustomersForm, ShippingForm, ReceivingForm, FinancialTabs, " + "\r" + "\n" + "   "+
					"                      ts" + "\r" + "\n" + "FROM            tblSecurity" + "\r" + "\n" + "WHERE        (strUser = @"+
					"UserName)";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "strUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
			public virtual int Fill(SPG.SecurityDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.SecurityDataTable GetSecuritySettings()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.SecurityDataTable dataTable = new SPG.SecurityDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillByUserName(SPG.SecurityDataTable dataTable, string UserName)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				if (UserName == null)
				{
					throw new global::System.ArgumentNullException("UserName");
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToString(UserName);
				}
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.SecurityDataTable GetSecuritySettingsByUserName(string UserName)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				if (UserName == null)
				{
					throw new global::System.ArgumentNullException("UserName");
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToString(UserName);
				}
				SPG.SecurityDataTable dataTable = new SPG.SecurityDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.SecurityDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "Security");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(string Original_strUser, byte[] Original_ts)
			{
				if (Original_strUser == null)
				{
					throw new global::System.ArgumentNullException("Original_strUser");
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[0].Value = Convert.ToString(Original_strUser);
				}
				if (Original_ts == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(string strUser, bool AdvancedTabs, bool ProductionReport, bool CostingReport, bool ItemsForm, bool ProductionForm, bool CustomersForm, bool ShippingForm, bool ReceivingForm, bool FinancialTabs)
			{
				if (strUser == null)
				{
					throw new global::System.ArgumentNullException("strUser");
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = Convert.ToString(strUser);
				}
				this.Adapter.InsertCommand.Parameters[1].Value = Convert.ToBoolean(AdvancedTabs);
				this.Adapter.InsertCommand.Parameters[2].Value = Convert.ToBoolean(ProductionReport);
				this.Adapter.InsertCommand.Parameters[3].Value = Convert.ToBoolean(CostingReport);
				this.Adapter.InsertCommand.Parameters[4].Value = Convert.ToBoolean(ItemsForm);
				this.Adapter.InsertCommand.Parameters[5].Value = Convert.ToBoolean(ProductionForm);
				this.Adapter.InsertCommand.Parameters[6].Value = Convert.ToBoolean(CustomersForm);
				this.Adapter.InsertCommand.Parameters[7].Value = Convert.ToBoolean(ShippingForm);
				this.Adapter.InsertCommand.Parameters[8].Value = Convert.ToBoolean(ReceivingForm);
				this.Adapter.InsertCommand.Parameters[9].Value = Convert.ToBoolean(FinancialTabs);
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(string strUser, bool AdvancedTabs, bool ProductionReport, bool CostingReport, bool ItemsForm, bool ProductionForm, bool CustomersForm, bool ShippingForm, bool ReceivingForm, bool FinancialTabs, string Original_strUser, byte[] Original_ts)
			{
				if (strUser == null)
				{
					throw new global::System.ArgumentNullException("strUser");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = Convert.ToString(strUser);
				}
				this.Adapter.UpdateCommand.Parameters[1].Value = Convert.ToBoolean(AdvancedTabs);
				this.Adapter.UpdateCommand.Parameters[2].Value = Convert.ToBoolean(ProductionReport);
				this.Adapter.UpdateCommand.Parameters[3].Value = Convert.ToBoolean(CostingReport);
				this.Adapter.UpdateCommand.Parameters[4].Value = Convert.ToBoolean(ItemsForm);
				this.Adapter.UpdateCommand.Parameters[5].Value = Convert.ToBoolean(ProductionForm);
				this.Adapter.UpdateCommand.Parameters[6].Value = Convert.ToBoolean(CustomersForm);
				this.Adapter.UpdateCommand.Parameters[7].Value = Convert.ToBoolean(ShippingForm);
				this.Adapter.UpdateCommand.Parameters[8].Value = Convert.ToBoolean(ReceivingForm);
				this.Adapter.UpdateCommand.Parameters[9].Value = Convert.ToBoolean(FinancialTabs);
				if (Original_strUser == null)
				{
					throw new global::System.ArgumentNullException("Original_strUser");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = Convert.ToString(Original_strUser);
				}
				if (Original_ts == null)
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[12].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(bool AdvancedTabs, bool ProductionReport, bool CostingReport, bool ItemsForm, bool ProductionForm, bool CustomersForm, bool ShippingForm, bool ReceivingForm, bool FinancialTabs, string Original_strUser, byte[] Original_ts)
			{
				return this.Update(Original_strUser, AdvancedTabs, ProductionReport, CostingReport, ItemsForm, ProductionForm, CustomersForm, ShippingForm, ReceivingForm, FinancialTabs, Original_strUser, Original_ts);
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class UsersTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UsersTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Users";
				tableMapping.ColumnMappings.Add("strUserName", "strUserName");
				tableMapping.ColumnMappings.Add("strPassword", "strPassword");
				tableMapping.ColumnMappings.Add("strSecurityLevel", "strSecurityLevel");
				tableMapping.ColumnMappings.Add("ts", "ts");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblUsers] WHERE (([strUserName] = @Original_strUserName) AND ((@IsNu"+
					"ll_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strUserName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblUsers] ([strUserName], [strPassword], [strSecurityLevel]) VALUES "+
					"(@strUserName, @strPassword, @strSecurityLevel);" + "\r" + "\n" + "SELECT strUserName, strPasswor"+
					"d, strSecurityLevel, ts FROM tblUsers WHERE (strUserName = @strUserName)";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strUserName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strPassword", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strSecurityLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strSecurityLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblUsers] SET [strUserName] = @strUserName, [strPassword] = @strPassword,"+
					" [strSecurityLevel] = @strSecurityLevel WHERE (([strUserName] = @Original_strUse"+
					"rName) AND ((@IsNull_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)));" + "\r" + "\n" + "SELEC"+
					"T strUserName, strPassword, strSecurityLevel, ts FROM tblUsers WHERE (strUserNam"+
					"e = @strUserName)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strUserName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strPassword", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strSecurityLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strSecurityLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strUserName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        strUserName, strPassword, strSecurityLevel, ts" + "\r" + "\n" + "FROM            tbl"+
					"Users";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT        strUserName, strPassword, strSecurityLevel, ts" + "\r" + "\n" + "FROM            tbl"+
					"Users" + "\r" + "\n" + "WHERE strUserName = @UserName";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "strUserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT        strPassword" + "\r" + "\n" + "FROM            tblUsers" + "\r" + "\n" + "WHERE        (strUserName = "+
					"@UserName)";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "strUserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "SELECT        strSecurityLevel" + "\r" + "\n" + "FROM            tblUsers" + "\r" + "\n" + "WHERE        (strUserNa"+
					"me = @UserName) AND (strPassword = @strPassword)";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "strUserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strPassword", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "strPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
			public virtual int Fill(SPG.UsersDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.UsersDataTable GetUsers()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.UsersDataTable dataTable = new SPG.UsersDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillByUserName(SPG.UsersDataTable dataTable, string UserName)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				if (UserName == null)
				{
					throw new global::System.ArgumentNullException("UserName");
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToString(UserName);
				}
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.UsersDataTable GetUserByName(string UserName)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				if (UserName == null)
				{
					throw new global::System.ArgumentNullException("UserName");
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToString(UserName);
				}
				SPG.UsersDataTable dataTable = new SPG.UsersDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.UsersDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "Users");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(string Original_strUserName, byte[] Original_ts)
			{
				if (Original_strUserName == null)
				{
					throw new global::System.ArgumentNullException("Original_strUserName");
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[0].Value = Convert.ToString(Original_strUserName);
				}
				if (Original_ts == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(string strUserName, string strPassword, string strSecurityLevel)
			{
				if (strUserName == null)
				{
					throw new global::System.ArgumentNullException("strUserName");
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = Convert.ToString(strUserName);
				}
				if (strPassword == null)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = Convert.ToString(strPassword);
				}
				if (strSecurityLevel == null)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = Convert.ToString(strSecurityLevel);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(string strUserName, string strPassword, string strSecurityLevel, string Original_strUserName, byte[] Original_ts)
			{
				if (strUserName == null)
				{
					throw new global::System.ArgumentNullException("strUserName");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = Convert.ToString(strUserName);
				}
				if (strPassword == null)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = Convert.ToString(strPassword);
				}
				if (strSecurityLevel == null)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = Convert.ToString(strSecurityLevel);
				}
				if (Original_strUserName == null)
				{
					throw new global::System.ArgumentNullException("Original_strUserName");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = Convert.ToString(Original_strUserName);
				}
				if (Original_ts == null)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[5].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(string strPassword, string strSecurityLevel, string Original_strUserName, byte[] Original_ts)
			{
				return this.Update(Original_strUserName, strPassword, strSecurityLevel, Original_strUserName, Original_ts);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual string GetUserPassword(string UserName)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
				if (UserName == null)
				{
					throw new global::System.ArgumentNullException("UserName");
				}
				else
				{
					command.Parameters[0].Value = Convert.ToString(UserName);
				}
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				object returnValue = null;
				try
				{
					returnValue = command.ExecuteScalar();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				if ((returnValue == null) || (returnValue.GetType() == typeof(global::System.DBNull)))
				{
					return null;
				}
				else
				{
					return (returnValue == null ? null : Convert.ToString(returnValue));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual string GetUserSecurityLevel(string UserName, string strPassword)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
				if (UserName == null)
				{
					throw new global::System.ArgumentNullException("UserName");
				}
				else
				{
					command.Parameters[0].Value = Convert.ToString(UserName);
				}
				if (strPassword == null)
				{
					command.Parameters[1].Value = global::System.DBNull.Value;
				}
				else
				{
					command.Parameters[1].Value = Convert.ToString(strPassword);
				}
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				object returnValue = null;
				try
				{
					returnValue = command.ExecuteScalar();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				if ((returnValue == null) || (returnValue.GetType() == typeof(global::System.DBNull)))
				{
					return null;
				}
				else
				{
					return (returnValue == null ? null : Convert.ToString(returnValue));
				}
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class CustomersTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CustomersTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Customers";
				tableMapping.ColumnMappings.Add("CustomerID", "CustomerID");
				tableMapping.ColumnMappings.Add("CustomerName", "CustomerName");
				tableMapping.ColumnMappings.Add("CustomerContact", "CustomerContact");
				tableMapping.ColumnMappings.Add("CustomerPhone", "CustomerPhone");
				tableMapping.ColumnMappings.Add("CustomerEmail", "CustomerEmail");
				tableMapping.ColumnMappings.Add("CustomerFax", "CustomerFax");
				tableMapping.ColumnMappings.Add("CustomerNote", "CustomerNote");
				tableMapping.ColumnMappings.Add("strEnteredBy", "strEnteredBy");
				tableMapping.ColumnMappings.Add("dtmEnteredOn", "dtmEnteredOn");
				tableMapping.ColumnMappings.Add("ts", "ts");
				tableMapping.ColumnMappings.Add("Address", "Address");
				tableMapping.ColumnMappings.Add("City", "City");
				tableMapping.ColumnMappings.Add("State", "State");
				tableMapping.ColumnMappings.Add("ZipCode", "ZipCode");
				tableMapping.ColumnMappings.Add("Inactive", "Inactive");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblCustomers] WHERE (([CustomerID] = @Original_CustomerID) AND ((@Is"+
					"Null_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblCustomers] ([CustomerID], [CustomerName], [CustomerContact], [Cus"+
					"tomerPhone], [CustomerEmail], [CustomerFax], [CustomerNote], [strEnteredBy], [dt"+
					"mEnteredOn], [Address], [City], [State], [ZipCode], [Inactive]) VALUES (@Custome"+
					"rID, @CustomerName, @CustomerContact, @CustomerPhone, @CustomerEmail, @CustomerF"+
					"ax, @CustomerNote, @strEnteredBy, @dtmEnteredOn, @Address, @City, @State, @ZipCo"+
					"de, @Inactive);" + "\r" + "\n" + "SELECT CustomerID, CustomerName, CustomerContact, CustomerPhone"+
					", CustomerEmail, CustomerFax, CustomerNote, strEnteredBy, dtmEnteredOn, Address,"+
					" City, State, ZipCode, ts, Inactive FROM tblCustomers WHERE (CustomerID = @Custo"+
					"merID)";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerContact", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerContact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerPhone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerEmail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerFax", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerNote", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerNote", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZipCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZipCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblCustomers] SET [CustomerID] = @CustomerID, [CustomerName] = @CustomerN"+
					"ame, [CustomerContact] = @CustomerContact, [CustomerPhone] = @CustomerPhone, [Cu"+
					"stomerEmail] = @CustomerEmail, [CustomerFax] = @CustomerFax, [CustomerNote] = @C"+
					"ustomerNote, [strEnteredBy] = @strEnteredBy, [dtmEnteredOn] = @dtmEnteredOn, [Ad"+
					"dress] = @Address, [City] = @City, [State] = @State, [ZipCode] = @ZipCode, [Inac"+
					"tive] = @Inactive WHERE (([CustomerID] = @Original_CustomerID) AND ((@IsNull_ts "+
					"= 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)));" + "\r" + "\n" + "SELECT CustomerID, CustomerNa"+
					"me, CustomerContact, CustomerPhone, CustomerEmail, CustomerFax, CustomerNote, st"+
					"rEnteredBy, dtmEnteredOn, Address, City, State, ZipCode, ts, Inactive FROM tblCu"+
					"stomers WHERE (CustomerID = @CustomerID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerContact", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerContact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerPhone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerEmail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerFax", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerNote", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerNote", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZipCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZipCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        CustomerID, CustomerName, CustomerContact, CustomerPhone, CustomerE"+
					"mail, CustomerFax, CustomerNote, strEnteredBy, dtmEnteredOn, Address, City, " + "\r" + "\n" + "  "+
					"                       State, ZipCode, ts, Inactive" + "\r" + "\n" + "FROM            tblCustomer"+
					"s";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT Address, City, CustomerContact, CustomerEmail, CustomerFax, CustomerID, Cu"+
					"stomerName, CustomerNote, CustomerPhone, Inactive, State, ZipCode, dtmEnteredOn,"+
					" strEnteredBy, ts FROM tblCustomers WHERE (CustomerID = @CustomerID)";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT        CustomerID, CustomerName" + "\r" + "\n" + "FROM            tblCustomers" + "\r" + "\n" + "WHERE Inact"+
					"ive = ISNULL (@Inactive, Inactive)" + "\r" + "\n" + "ORDER BY CustomerName";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "UPDATE       tblCustomers" + "\r" + "\n" + "SET                Inactive = - 1" + "\r" + "\n" + "WHERE        (Custo"+
					"merID = @CustomerID)";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
			public virtual int FillCustomers(SPG.CustomersDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.CustomersDataTable GetCustomers()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.CustomersDataTable dataTable = new SPG.CustomersDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillByID(SPG.CustomersDataTable dataTable, int CustomerID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)CustomerID;
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.CustomersDataTable GetCustomerByID(int CustomerID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)CustomerID;
				SPG.CustomersDataTable dataTable = new SPG.CustomersDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.CustomersDataTable GetCustomerNameAndIDS(bool? Inactive)
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				if (Inactive.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToBoolean(Inactive.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.CustomersDataTable dataTable = new SPG.CustomersDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.CustomersDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "Customers");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_CustomerID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_CustomerID;
				if (Original_ts == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(int CustomerID, string CustomerName, string CustomerContact, string CustomerPhone, string CustomerEmail, string CustomerFax, string CustomerNote, string strEnteredBy, DateTime? dtmEnteredOn, string Address, string City, string State, string ZipCode, bool? Inactive)
			{
				this.Adapter.InsertCommand.Parameters[0].Value = (int)CustomerID;
				if (CustomerName == null)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = Convert.ToString(CustomerName);
				}
				if (CustomerContact == null)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = Convert.ToString(CustomerContact);
				}
				if (CustomerPhone == null)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = Convert.ToString(CustomerPhone);
				}
				if (CustomerEmail == null)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = Convert.ToString(CustomerEmail);
				}
				if (CustomerFax == null)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = Convert.ToString(CustomerFax);
				}
				if (CustomerNote == null)
				{
					this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[6].Value = Convert.ToString(CustomerNote);
				}
				if (strEnteredBy == null)
				{
					this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[7].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[8].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				if (Address == null)
				{
					this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[9].Value = Convert.ToString(Address);
				}
				if (City == null)
				{
					this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[10].Value = Convert.ToString(City);
				}
				if (State == null)
				{
					this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[11].Value = Convert.ToString(State);
				}
				if (ZipCode == null)
				{
					this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[12].Value = Convert.ToString(ZipCode);
				}
				if (Inactive.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[13].Value = Convert.ToBoolean(Inactive.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int CustomerID, string CustomerName, string CustomerContact, string CustomerPhone, string CustomerEmail, string CustomerFax, string CustomerNote, string strEnteredBy, DateTime? dtmEnteredOn, string Address, string City, string State, string ZipCode, bool? Inactive, int Original_CustomerID, byte[] Original_ts)
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = (int)CustomerID;
				if (CustomerName == null)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = Convert.ToString(CustomerName);
				}
				if (CustomerContact == null)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = Convert.ToString(CustomerContact);
				}
				if (CustomerPhone == null)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = Convert.ToString(CustomerPhone);
				}
				if (CustomerEmail == null)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = Convert.ToString(CustomerEmail);
				}
				if (CustomerFax == null)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = Convert.ToString(CustomerFax);
				}
				if (CustomerNote == null)
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = Convert.ToString(CustomerNote);
				}
				if (strEnteredBy == null)
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				if (Address == null)
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = Convert.ToString(Address);
				}
				if (City == null)
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = Convert.ToString(City);
				}
				if (State == null)
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = Convert.ToString(State);
				}
				if (ZipCode == null)
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = Convert.ToString(ZipCode);
				}
				if (Inactive.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = Convert.ToBoolean(Inactive.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[14].Value = (int)Original_CustomerID;
				if (Original_ts == null)
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[16].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(string CustomerName, string CustomerContact, string CustomerPhone, string CustomerEmail, string CustomerFax, string CustomerNote, string strEnteredBy, DateTime? dtmEnteredOn, string Address, string City, string State, string ZipCode, bool? Inactive, int Original_CustomerID, byte[] Original_ts)
			{
				return this.Update(Original_CustomerID, CustomerName, CustomerContact, CustomerPhone, CustomerEmail, CustomerFax, CustomerNote, strEnteredBy, dtmEnteredOn, Address, City, State, ZipCode, Inactive, Original_CustomerID, Original_ts);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
			public virtual int InactivateCustomer(int CustomerID)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
				command.Parameters[0].Value = (int)CustomerID;
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				int returnValue = 0;
				try
				{
					returnValue = command.ExecuteNonQuery();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				return returnValue;
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class ItemsTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ItemsTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Items";
				tableMapping.ColumnMappings.Add("ItemID", "ItemID");
				tableMapping.ColumnMappings.Add("ItemCode", "ItemCode");
				tableMapping.ColumnMappings.Add("ItemDescription", "ItemDescription");
				tableMapping.ColumnMappings.Add("ItemType", "ItemType");
				tableMapping.ColumnMappings.Add("ItemCustomerID", "ItemCustomerID");
				tableMapping.ColumnMappings.Add("ItemDefaultMachine", "ItemDefaultMachine");
				tableMapping.ColumnMappings.Add("ItemPicture", "ItemPicture");
				tableMapping.ColumnMappings.Add("dblPrice", "dblPrice");
				tableMapping.ColumnMappings.Add("sngRebate", "sngRebate");
				tableMapping.ColumnMappings.Add("strUnitOfMeasure", "strUnitOfMeasure");
				tableMapping.ColumnMappings.Add("intQtyPerUnit", "intQtyPerUnit");
				tableMapping.ColumnMappings.Add("strEnteredBy", "strEnteredBy");
				tableMapping.ColumnMappings.Add("dtmEnteredOn", "dtmEnteredOn");
				tableMapping.ColumnMappings.Add("dblFreight", "dblFreight");
				tableMapping.ColumnMappings.Add("dblFilm", "dblFilm");
				tableMapping.ColumnMappings.Add("dblBoxes", "dblBoxes");
				tableMapping.ColumnMappings.Add("dblStretchWrap", "dblStretchWrap");
				tableMapping.ColumnMappings.Add("dblPallets", "dblPallets");
				tableMapping.ColumnMappings.Add("dblOther1", "dblOther1");
				tableMapping.ColumnMappings.Add("dblOther2", "dblOther2");
				tableMapping.ColumnMappings.Add("dblOther3", "dblOther3");
				tableMapping.ColumnMappings.Add("dblOther4", "dblOther4");
				tableMapping.ColumnMappings.Add("dblOther5", "dblOther5");
				tableMapping.ColumnMappings.Add("intUnitsPerCase", "intUnitsPerCase");
				tableMapping.ColumnMappings.Add("intCasesPerPallet", "intCasesPerPallet");
				tableMapping.ColumnMappings.Add("ts", "ts");
				tableMapping.ColumnMappings.Add("sngQuantityOnHand", "sngQuantityOnHand");
				tableMapping.ColumnMappings.Add("intUnitsPerPallet", "intUnitsPerPallet");
				tableMapping.ColumnMappings.Add("CaseGrossWeight", "CaseGrossWeight");
				tableMapping.ColumnMappings.Add("PackageCode", "PackageCode");
				tableMapping.ColumnMappings.Add("CaseCode", "CaseCode");
				tableMapping.ColumnMappings.Add("RequiredWeight", "RequiredWeight");
				tableMapping.ColumnMappings.Add("MAV", "MAV");
				tableMapping.ColumnMappings.Add("CasesPerLayer", "CasesPerLayer");
				tableMapping.ColumnMappings.Add("LayersPerPallet", "LayersPerPallet");
				tableMapping.ColumnMappings.Add("ShelfLife", "ShelfLife");
				tableMapping.ColumnMappings.Add("Instructions", "Instructions");
				tableMapping.ColumnMappings.Add("PalletPattern", "PalletPattern");
				tableMapping.ColumnMappings.Add("Inactive", "Inactive");
				tableMapping.ColumnMappings.Add("Packers", "Packers");
				tableMapping.ColumnMappings.Add("ItemProdStandard", "ItemProdStandard");
				tableMapping.ColumnMappings.Add("UPC", "UPC");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblItems] WHERE (([ItemID] = @Original_ItemID) AND ((@IsNull_ts = 1 "+
					"AND [ts] IS NULL) OR ([ts] = @Original_ts)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblItems] ([ItemID], [ItemCode], [ItemDescription], [ItemType], [Ite"+
					"mCustomerID], [ItemDefaultMachine], [ItemPicture], [dblPrice], [sngRebate], [str"+
					"UnitOfMeasure], [intQtyPerUnit], [strEnteredBy], [dtmEnteredOn], [dblFreight], ["+
					"dblFilm], [dblBoxes], [dblStretchWrap], [dblPallets], [dblOther1], [dblOther2], "+
					"[dblOther3], [dblOther4], [dblOther5], [intUnitsPerCase], [intCasesPerPallet], ["+
					"sngQuantityOnHand], [intUnitsPerPallet], [CaseGrossWeight], [PackageCode], [Case"+
					"Code], [RequiredWeight], [MAV], [CasesPerLayer], [LayersPerPallet], [ShelfLife],"+
					" [Instructions], [PalletPattern], [Inactive], [Packers], [ItemProdStandard], [UP"+
					"C]) VALUES (@ItemID, @ItemCode, @ItemDescription, @ItemType, @ItemCustomerID, @I"+
					"temDefaultMachine, @ItemPicture, @dblPrice, @sngRebate, @strUnitOfMeasure, @intQ"+
					"tyPerUnit, @strEnteredBy, @dtmEnteredOn, @dblFreight, @dblFilm, @dblBoxes, @dblS"+
					"tretchWrap, @dblPallets, @dblOther1, @dblOther2, @dblOther3, @dblOther4, @dblOth"+
					"er5, @intUnitsPerCase, @intCasesPerPallet, @sngQuantityOnHand, @intUnitsPerPalle"+
					"t, @CaseGrossWeight, @PackageCode, @CaseCode, @RequiredWeight, @MAV, @CasesPerLa"+
					"yer, @LayersPerPallet, @ShelfLife, @Instructions, @PalletPattern, @Inactive, @Pa"+
					"ckers, @ItemProdStandard, @UPC);" + "\r" + "\n" + "SELECT ItemID, ItemCode, ItemDescription, Item"+
					"Type, ItemCustomerID, ItemDefaultMachine, ItemPicture, dblPrice, sngRebate, strU"+
					"nitOfMeasure, intQtyPerUnit, strEnteredBy, dtmEnteredOn, dblFreight, dblFilm, db"+
					"lBoxes, dblStretchWrap, dblPallets, dblOther1, dblOther2, dblOther3, dblOther4, "+
					"dblOther5, intUnitsPerCase, intCasesPerPallet, sngQuantityOnHand, ts, intUnitsPe"+
					"rPallet, CaseGrossWeight, PackageCode, CaseCode, RequiredWeight, MAV, CasesPerLa"+
					"yer, LayersPerPallet, ShelfLife, Instructions, PalletPattern, Inactive, Packers,"+
					" ItemProdStandard, UPC FROM tblItems WHERE (ItemID = @ItemID) ORDER BY ItemCode";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemCustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemDefaultMachine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDefaultMachine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemPicture", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemPicture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngRebate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngRebate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strUnitOfMeasure", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUnitOfMeasure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intQtyPerUnit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intQtyPerUnit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblFreight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblFreight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblFilm", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblFilm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblBoxes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblBoxes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblStretchWrap", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblStretchWrap", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblPallets", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblOther1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblOther1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblOther2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblOther2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblOther3", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblOther3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblOther4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblOther4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblOther5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblOther5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intUnitsPerCase", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnitsPerCase", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intCasesPerPallet", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCasesPerPallet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngQuantityOnHand", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngQuantityOnHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intUnitsPerPallet", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnitsPerPallet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CaseGrossWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CaseGrossWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackageCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackageCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CaseCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CaseCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequiredWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequiredWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CasesPerLayer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasesPerLayer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LayersPerPallet", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LayersPerPallet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShelfLife", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShelfLife", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Instructions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PalletPattern", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletPattern", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Packers", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Packers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemProdStandard", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemProdStandard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblItems] SET [ItemID] = @ItemID, [ItemCode] = @ItemCode, [ItemDescriptio"+
					"n] = @ItemDescription, [ItemType] = @ItemType, [ItemCustomerID] = @ItemCustomerI"+
					"D, [ItemDefaultMachine] = @ItemDefaultMachine, [ItemPicture] = @ItemPicture, [db"+
					"lPrice] = @dblPrice, [sngRebate] = @sngRebate, [strUnitOfMeasure] = @strUnitOfMe"+
					"asure, [intQtyPerUnit] = @intQtyPerUnit, [strEnteredBy] = @strEnteredBy, [dtmEnt"+
					"eredOn] = @dtmEnteredOn, [dblFreight] = @dblFreight, [dblFilm] = @dblFilm, [dblB"+
					"oxes] = @dblBoxes, [dblStretchWrap] = @dblStretchWrap, [dblPallets] = @dblPallet"+
					"s, [dblOther1] = @dblOther1, [dblOther2] = @dblOther2, [dblOther3] = @dblOther3,"+
					" [dblOther4] = @dblOther4, [dblOther5] = @dblOther5, [intUnitsPerCase] = @intUni"+
					"tsPerCase, [intCasesPerPallet] = @intCasesPerPallet, [sngQuantityOnHand] = @sngQ"+
					"uantityOnHand, [intUnitsPerPallet] = @intUnitsPerPallet, [CaseGrossWeight] = @Ca"+
					"seGrossWeight, [PackageCode] = @PackageCode, [CaseCode] = @CaseCode, [RequiredWe"+
					"ight] = @RequiredWeight, [MAV] = @MAV, [CasesPerLayer] = @CasesPerLayer, [Layers"+
					"PerPallet] = @LayersPerPallet, [ShelfLife] = @ShelfLife, [Instructions] = @Instr"+
					"uctions, [PalletPattern] = @PalletPattern, [Inactive] = @Inactive, [Packers] = @"+
					"Packers, [ItemProdStandard] = @ItemProdStandard, [UPC] = @UPC WHERE (([ItemID] ="+
					" @Original_ItemID) AND ((@IsNull_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_t"+
					"s)));" + "\r" + "\n" + "SELECT ItemID, ItemCode, ItemDescription, ItemType, ItemCustomerID, ItemD"+
					"efaultMachine, ItemPicture, dblPrice, sngRebate, strUnitOfMeasure, intQtyPerUnit"+
					", strEnteredBy, dtmEnteredOn, dblFreight, dblFilm, dblBoxes, dblStretchWrap, dbl"+
					"Pallets, dblOther1, dblOther2, dblOther3, dblOther4, dblOther5, intUnitsPerCase,"+
					" intCasesPerPallet, sngQuantityOnHand, ts, intUnitsPerPallet, CaseGrossWeight, P"+
					"ackageCode, CaseCode, RequiredWeight, MAV, CasesPerLayer, LayersPerPallet, Shelf"+
					"Life, Instructions, PalletPattern, Inactive, Packers, ItemProdStandard, UPC FROM"+
					" tblItems WHERE (ItemID = @ItemID) ORDER BY ItemCode";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemCustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemDefaultMachine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDefaultMachine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemPicture", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemPicture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngRebate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngRebate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strUnitOfMeasure", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUnitOfMeasure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intQtyPerUnit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intQtyPerUnit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblFreight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblFreight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblFilm", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblFilm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblBoxes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblBoxes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblStretchWrap", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblStretchWrap", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblPallets", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblOther1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblOther1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblOther2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblOther2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblOther3", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblOther3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblOther4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblOther4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblOther5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblOther5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intUnitsPerCase", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnitsPerCase", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intCasesPerPallet", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCasesPerPallet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngQuantityOnHand", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngQuantityOnHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intUnitsPerPallet", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnitsPerPallet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CaseGrossWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CaseGrossWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackageCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackageCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CaseCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CaseCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequiredWeight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequiredWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CasesPerLayer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasesPerLayer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LayersPerPallet", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LayersPerPallet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShelfLife", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShelfLife", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Instructions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PalletPattern", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletPattern", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Packers", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Packers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemProdStandard", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemProdStandard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[15];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        ItemID, ItemCode, ItemDescription, ItemType, ItemCustomerID, ItemDe"+
					"faultMachine, ItemPicture, dblPrice, sngRebate, strUnitOfMeasure, intQtyPerUnit,"+
					" strEnteredBy, dtmEnteredOn, dblFreight, dblFilm, dblBoxes, " + "\r" + "\n" + "                  "+
					"       dblStretchWrap, dblPallets, dblOther1, dblOther2, dblOther3, dblOther4, d"+
					"blOther5, intUnitsPerCase, intCasesPerPallet, sngQuantityOnHand, ts, intUnitsPer"+
					"Pallet, CaseGrossWeight, PackageCode, CaseCode, " + "\r" + "\n" + "                         Requi"+
					"redWeight, MAV, CasesPerLayer, LayersPerPallet, ShelfLife, Instructions, PalletP"+
					"attern, Inactive, Packers, ItemProdStandard, UPC" + "\r" + "\n" + "FROM            tblItems" + "\r" + "\n" + "ORDE"+
					"R BY ItemCode";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT        tblItems.ItemDescription, ISNULL(TotalLocationInventory.TotalQuanti"+
					"tyOnHand, 0) as TotalQuantityOnHand, " + "\r" + "\n" + "\t" + "\t" + "\t" + "\t" + "ISNULL(CurrentLocationInventory.Local"+
					"QuantityOnHand, 0) as LocalQuantityOnHand, tblBOMs.BOMQuantity, " + "\r" + "\n" + "\t" + "\t" + "\t" + "\t" + "tblItems.I"+
					"temCode, tblBOMs.BOMRawMatID, tblBOMs.ScrapFactor" + "\r" + "\n" + "FROM            tblItems INNE"+
					"R JOIN" + "\r" + "\n" + "                         tblBOMs ON tblItems.ItemID = tblBOMs.BOMRawMatI"+
					"D LEFT OUTER JOIN" + "\r" + "\n" + "                             (SELECT        LocationInventory"+
					"Item, QuantityOnHand AS LocalQuantityOnHand" + "\r" + "\n" + "                               FROM"+
					"            LocationInventory AS LocationInventory_1" + "\r" + "\n" + "                          "+
					"     WHERE        (Location = @CurrentLocation)) AS CurrentLocationInventory ON "+
					"tblItems.ItemID = CurrentLocationInventory.LocationInventoryItem LEFT OUTER JOIN"+
					"" + "\r" + "\n" + "                             (SELECT        LocationInventoryItem, SUM(Quantit"+
					"yOnHand) AS TotalQuantityOnHand" + "\r" + "\n" + "                               FROM            "+
					"LocationInventory" + "\r" + "\n" + "                               GROUP BY LocationInventoryItem"+
					") AS TotalLocationInventory ON tblItems.ItemID = TotalLocationInventory.Location"+
					"InventoryItem" + "\r" + "\n" + "WHERE        (tblBOMs.BOMFiniGoodID = @ItemID)" + "\r" + "\n" + "UNION" + "\r" + "\n" + "SELECT    "+
					"    ItemPool.PoolDescription, ISNULL(PoolQuantity.TotalPoolQuantityOnHand,0) as "+
					"TotalPoolQuantityOnHand, ISNULL(PoolQuantity.LocalPoolQuantityOnHand,0) as Local"+
					"PoolQuantityOnHand, PoolBom.PoolBomQuantity, ItemPool.PoolCode, ItemPool.OID,  P"+
					"oolBom.ScrapFactor" + "\r" + "\n" + "FROM            PoolBom INNER JOIN" + "\r" + "\n" + "                        "+
					" ItemPool ON PoolBom.ItemPoolID = ItemPool.OID INNER JOIN" + "\r" + "\n" + "                     "+
					"        (SELECT        ItemPoolDetails.ItemPoolID, SUM(CurrentLocationInventory."+
					"LocalQuantityOnHand * ItemPoolDetails.ItemPoolRatio) AS LocalPoolQuantityOnHand,"+
					" " + "\r" + "\n" + "                         SUM(TotalLocationInventory.TotalQuantityOnHand * Ite"+
					"mPoolDetails.ItemPoolRatio) AS TotalPoolQuantityOnHand" + "\r" + "\n" + "FROM            ItemPool"+
					"Details INNER JOIN" + "\r" + "\n" + "                         tblItems ON ItemPoolDetails.ItemID "+
					"= tblItems.ItemID LEFT OUTER JOIN" + "\r" + "\n" + "                             (SELECT        L"+
					"ocationInventoryItem, SUM(QuantityOnHand) AS TotalQuantityOnHand" + "\r" + "\n" + "              "+
					"                 FROM            LocationInventory" + "\r" + "\n" + "                            "+
					"   GROUP BY LocationInventoryItem) AS TotalLocationInventory ON tblItems.ItemID "+
					"= TotalLocationInventory.LocationInventoryItem LEFT OUTER JOIN" + "\r" + "\n" + "                "+
					"             (SELECT        LocationInventoryItem, QuantityOnHand AS LocalQuanti"+
					"tyOnHand" + "\r" + "\n" + "                               FROM            LocationInventory AS Lo"+
					"cationInventory_1" + "\r" + "\n" + "                               WHERE        (Location = @Curr"+
					"entLocation)) AS CurrentLocationInventory ON tblItems.ItemID = CurrentLocationIn"+
					"ventory.LocationInventoryItem" + "\r" + "\n" + "GROUP BY ItemPoolDetails.ItemPoolID) AS PoolQuant"+
					"ity ON ItemPool.OID = PoolQuantity.ItemPoolID" + "\r" + "\n" + "WHERE        (PoolBom.PoolBomFini"+
					"GoodID = @ItemID)";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentLocation", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT        CaseGrossWeight" + "\r" + "\n" + "FROM            tblItems" + "\r" + "\n" + "WHERE        (ItemID = @"+
					"ItemID)";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "SELECT        intCasesPerPallet" + "\r" + "\n" + "FROM            tblItems" + "\r" + "\n" + "WHERE        (ItemID ="+
					" @ItemID)";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[4].Connection = this.Connection;
				this._commandCollection[4].CommandText = "SELECT CaseCode, CaseGrossWeight, CasesPerLayer, Inactive, Instructions, ItemCode"+
					", ItemCustomerID, ItemDefaultMachine, ItemDescription, ItemID, ItemPicture, Item"+
					"ProdStandard, ItemType, LayersPerPallet, MAV, PackageCode, Packers, PalletPatter"+
					"n, RequiredWeight, ShelfLife, UPC, dblBoxes, dblFilm, dblFreight, dblOther1, dbl"+
					"Other2, dblOther3, dblOther4, dblOther5, dblPallets, dblPrice, dblStretchWrap, d"+
					"tmEnteredOn, intCasesPerPallet, intQtyPerUnit, intUnitsPerCase, intUnitsPerPalle"+
					"t, sngQuantityOnHand, sngRebate, strEnteredBy, strUnitOfMeasure, ts FROM tblItem"+
					"s WHERE (ItemID = @ItemID)";
				this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[5].Connection = this.Connection;
				this._commandCollection[5].CommandText = "SELECT CaseCode, CaseGrossWeight, CasesPerLayer, Inactive, Instructions, ItemCode"+
					", ItemCustomerID, ItemDefaultMachine, ItemDescription, ItemID, ItemPicture, Item"+
					"ProdStandard, ItemType, LayersPerPallet, MAV, PackageCode, Packers, PalletPatter"+
					"n, RequiredWeight, ShelfLife, UPC, dblBoxes, dblFilm, dblFreight, dblOther1, dbl"+
					"Other2, dblOther3, dblOther4, dblOther5, dblPallets, dblPrice, dblStretchWrap, d"+
					"tmEnteredOn, intCasesPerPallet, intQtyPerUnit, intUnitsPerCase, intUnitsPerPalle"+
					"t, sngQuantityOnHand, sngRebate, strEnteredBy, strUnitOfMeasure, ts FROM tblItem"+
					"s WHERE (ItemCustomerID = ISNULL(@CustomerID, ItemCustomerID)) AND (ItemType IN "+
					"(SELECT ID FROM dbo.CLRFunction_String_to_Table(@str, '|') AS CLRFunction_String"+
					"_to_Table_1)) ORDER BY ItemCode";
				this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@str", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[6].Connection = this.Connection;
				this._commandCollection[6].CommandText = "SELECT CaseCode, CaseGrossWeight, CasesPerLayer, Inactive, Instructions, ItemCode"+
					", ItemCustomerID, ItemDefaultMachine, ItemDescription, ItemID, ItemPicture, Item"+
					"ProdStandard, ItemType, LayersPerPallet, MAV, PackageCode, Packers, PalletPatter"+
					"n, RequiredWeight, ShelfLife, UPC, dblBoxes, dblFilm, dblFreight, dblOther1, dbl"+
					"Other2, dblOther3, dblOther4, dblOther5, dblPallets, dblPrice, dblStretchWrap, d"+
					"tmEnteredOn, intCasesPerPallet, intQtyPerUnit, intUnitsPerCase, intUnitsPerPalle"+
					"t, sngQuantityOnHand, sngRebate, strEnteredBy, strUnitOfMeasure, ts FROM tblItem"+
					"s WHERE (ItemCustomerID = @CustomerID) ORDER BY ItemCode";
				this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[7].Connection = this.Connection;
				this._commandCollection[7].CommandText = "SELECT CaseCode, CaseGrossWeight, CasesPerLayer, Inactive, Instructions, ItemCode"+
					", ItemCustomerID, ItemDefaultMachine, ItemDescription, ItemID, ItemPicture, Item"+
					"ProdStandard, ItemType, LayersPerPallet, MAV, PackageCode, Packers, PalletPatter"+
					"n, RequiredWeight, ShelfLife, UPC, dblBoxes, dblFilm, dblFreight, dblOther1, dbl"+
					"Other2, dblOther3, dblOther4, dblOther5, dblPallets, dblPrice, dblStretchWrap, d"+
					"tmEnteredOn, intCasesPerPallet, intQtyPerUnit, intUnitsPerCase, intUnitsPerPalle"+
					"t, sngQuantityOnHand, sngRebate, strEnteredBy, strUnitOfMeasure, ts FROM tblItem"+
					"s WHERE (ItemCustomerID = @CustomerID) AND (ItemType IN (SELECT ID FROM dbo.CLRF"+
					"unction_String_to_Table(@str, '|') AS CLRFunction_String_to_Table_1)) ORDER BY I"+
					"temCode";
				this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@str", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[8].Connection = this.Connection;
				this._commandCollection[8].CommandText = "SELECT        tblCustomers.CustomerName, tblCustomers.CustomerID" + "\r" + "\n" + "FROM           "+
					" tblItems INNER JOIN" + "\r" + "\n" + "                         tblCustomers AS tblCustomers ON t"+
					"blItems.ItemCustomerID = tblCustomers.CustomerID" + "\r" + "\n" + "WHERE        (tblItems.ItemID "+
					"= @ItemID)";
				this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[9] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[9].Connection = this.Connection;
				this._commandCollection[9].CommandText = "SELECT CaseCode, CaseGrossWeight, CasesPerLayer, Inactive, Instructions, ItemCode"+
					", ItemCustomerID, ItemDefaultMachine, ItemDescription, ItemID, ItemPicture, Item"+
					"ProdStandard, ItemType, LayersPerPallet, MAV, PackageCode, Packers, PalletPatter"+
					"n, RequiredWeight, ShelfLife, UPC, dblBoxes, dblFilm, dblFreight, dblOther1, dbl"+
					"Other2, dblOther3, dblOther4, dblOther5, dblPallets, dblPrice, dblStretchWrap, d"+
					"tmEnteredOn, intCasesPerPallet, intQtyPerUnit, intUnitsPerCase, intUnitsPerPalle"+
					"t, sngQuantityOnHand, sngRebate, strEnteredBy, strUnitOfMeasure, ts FROM tblItem"+
					"s WHERE (ItemCustomerID = ISNULL(@CustomerID, ItemCustomerID) OR ItemCustomerID "+
					"= ISNULL(@UniversalCustomerID, @UniversalCustomerID)) AND (ItemType IN (SELECT I"+
					"D FROM dbo.CLRFunction_String_to_Table(@str, '|') AS CLRFunction_String_to_Table"+
					"_1)) ORDER BY ItemCode";
				this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UniversalCustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@str", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[10] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[10].Connection = this.Connection;
				this._commandCollection[10].CommandText = "SELECT        tblItems.ItemID, tblItems.ItemCode, tblItems.ItemType, tblCustomers"+
					".CustomerName" + "\r" + "\n" + "FROM            tblItems INNER JOIN" + "\r" + "\n" + "                         tbl"+
					"Customers ON tblItems.ItemCustomerID = tblCustomers.CustomerID" + "\r" + "\n" + "WHERE tblItems.I"+
					"nactive = ISNULL (@Inactive, tblItems.Inactive)" + "\r" + "\n" + "ORDER BY tblItems.ItemCode";
				this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[11] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[11].Connection = this.Connection;
				this._commandCollection[11].CommandText = "SELECT        MIN(DISTINCT ItemID) AS Expr1, strUnitOfMeasure" + "\r" + "\n" + "FROM            tb"+
					"lItems" + "\r" + "\n" + "WHERE        (strUnitOfMeasure IS NOT NULL) AND (strUnitOfMeasure <> '')"+
					"" + "\r" + "\n" + "GROUP BY strUnitOfMeasure" + "\r" + "\n" + "ORDER BY strUnitOfMeasure";
				this._commandCollection[11].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[12] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[12].Connection = this.Connection;
				this._commandCollection[12].CommandText = "SELECT intUnitsPerPallet" + "\r" + "\n" + "FROM tblItems " + "\r" + "\n" + "WHERE (ItemID = @ItemID)" + "\r" + "\n";
				this._commandCollection[12].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[12].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[13] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[13].Connection = this.Connection;
				this._commandCollection[13].CommandText = "SELECT intUnitsPerCase" + "\r" + "\n" + "FROM tblItems " + "\r" + "\n" + "WHERE (ItemID = @ItemID)" + "\r" + "\n";
				this._commandCollection[13].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[14] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[14].Connection = this.Connection;
				this._commandCollection[14].CommandText = "UPDATE tblItems " + "\r" + "\n" + "SET [Inactive] = -1 " + "\r" + "\n" + "WHERE [ItemID] = @ItemID;";
				this._commandCollection[14].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[14].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.ItemsDataTable GetItems()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.ItemsDataTable dataTable = new SPG.ItemsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ItemsDataTable GetAvailabilityByItemID(int? ItemID, int? CurrentLocation)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				if (ItemID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)ItemID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (CurrentLocation.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[1].Value = (int)CurrentLocation.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				SPG.ItemsDataTable dataTable = new SPG.ItemsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ItemsDataTable GetItemByID(int ItemID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[4];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)ItemID;
				SPG.ItemsDataTable dataTable = new SPG.ItemsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ItemsDataTable GetItemCodeAndIDsByTypesAndCustomerID(int? CustomerID, string str)
			{
				this.Adapter.SelectCommand = this.CommandCollection[5];
				if (CustomerID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)CustomerID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (str == null)
				{
					throw new global::System.ArgumentNullException("str");
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[1].Value = Convert.ToString(str);
				}
				SPG.ItemsDataTable dataTable = new SPG.ItemsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ItemsDataTable GetItemsByCustomerID(int? CustomerID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[6];
				if (CustomerID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)CustomerID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.ItemsDataTable dataTable = new SPG.ItemsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ItemsDataTable GetItemsByCustomerIdAndType(int? CustomerID, string str)
			{
				this.Adapter.SelectCommand = this.CommandCollection[7];
				if (CustomerID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)CustomerID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (str == null)
				{
					throw new global::System.ArgumentNullException("str");
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[1].Value = Convert.ToString(str);
				}
				SPG.ItemsDataTable dataTable = new SPG.ItemsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ItemsDataTable GetItemsCustomer(int ItemID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[8];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)ItemID;
				SPG.ItemsDataTable dataTable = new SPG.ItemsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ItemsDataTable GetItemsForCustomer(int? CustomerID, int? UniversalCustomerID, string str)
			{
				this.Adapter.SelectCommand = this.CommandCollection[9];
				if (CustomerID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)CustomerID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (UniversalCustomerID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[1].Value = (int)UniversalCustomerID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (str == null)
				{
					throw new global::System.ArgumentNullException("str");
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[2].Value = Convert.ToString(str);
				}
				SPG.ItemsDataTable dataTable = new SPG.ItemsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ItemsDataTable GetItemsSearch(bool? Inactive)
			{
				this.Adapter.SelectCommand = this.CommandCollection[10];
				if (Inactive.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToBoolean(Inactive.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.ItemsDataTable dataTable = new SPG.ItemsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ItemsDataTable GetItemUOMs()
			{
				this.Adapter.SelectCommand = this.CommandCollection[11];
				SPG.ItemsDataTable dataTable = new SPG.ItemsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.ItemsDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "Items");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_ItemID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_ItemID;
				if (Original_ts == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(int ItemID, string ItemCode, string ItemDescription, string ItemType, int? ItemCustomerID, int? ItemDefaultMachine, byte[] ItemPicture, double? dblPrice, float? sngRebate, string strUnitOfMeasure, double? intQtyPerUnit, string strEnteredBy, DateTime? dtmEnteredOn, double? dblFreight, double? dblFilm, double? dblBoxes, double? dblStretchWrap, double? dblPallets, double? dblOther1, double? dblOther2, double? dblOther3, double? dblOther4, double? dblOther5, double? intUnitsPerCase, int? intCasesPerPallet, float? sngQuantityOnHand, int? intUnitsPerPallet, double? CaseGrossWeight, string PackageCode, string CaseCode, string RequiredWeight, string MAV, string CasesPerLayer, string LayersPerPallet, string ShelfLife, string Instructions, string PalletPattern, bool? Inactive, double? Packers, double? ItemProdStandard, string UPC)
			{
				this.Adapter.InsertCommand.Parameters[0].Value = (int)ItemID;
				if (ItemCode == null)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = Convert.ToString(ItemCode);
				}
				if (ItemDescription == null)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = Convert.ToString(ItemDescription);
				}
				if (ItemType == null)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = Convert.ToString(ItemType);
				}
				if (ItemCustomerID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = (int)ItemCustomerID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (ItemDefaultMachine.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = (int)ItemDefaultMachine.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (ItemPicture == null)
				{
					this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[6].Value = (byte[])ItemPicture;
				}
				if (dblPrice.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[7].Value = (double)dblPrice.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				if (sngRebate.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[8].Value = (float)sngRebate.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				if (strUnitOfMeasure == null)
				{
					this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[9].Value = Convert.ToString(strUnitOfMeasure);
				}
				if (intQtyPerUnit.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[10].Value = (double)intQtyPerUnit.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				if (strEnteredBy == null)
				{
					this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[11].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[12].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				if (dblFreight.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[13].Value = (double)dblFreight.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				if (dblFilm.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[14].Value = (double)dblFilm.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
				}
				if (dblBoxes.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[15].Value = (double)dblBoxes.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
				}
				if (dblStretchWrap.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[16].Value = (double)dblStretchWrap.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
				}
				if (dblPallets.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[17].Value = (double)dblPallets.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
				}
				if (dblOther1.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[18].Value = (double)dblOther1.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
				}
				if (dblOther2.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[19].Value = (double)dblOther2.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
				}
				if (dblOther3.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[20].Value = (double)dblOther3.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
				}
				if (dblOther4.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[21].Value = (double)dblOther4.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
				}
				if (dblOther5.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[22].Value = (double)dblOther5.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
				}
				if (intUnitsPerCase.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[23].Value = (double)intUnitsPerCase.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
				}
				if (intCasesPerPallet.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[24].Value = (int)intCasesPerPallet.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
				}
				if (sngQuantityOnHand.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[25].Value = (float)sngQuantityOnHand.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
				}
				if (intUnitsPerPallet.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[26].Value = (int)intUnitsPerPallet.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
				}
				if (CaseGrossWeight.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[27].Value = (double)CaseGrossWeight.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
				}
				if (PackageCode == null)
				{
					this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[28].Value = Convert.ToString(PackageCode);
				}
				if (CaseCode == null)
				{
					this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[29].Value = Convert.ToString(CaseCode);
				}
				if (RequiredWeight == null)
				{
					this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[30].Value = Convert.ToString(RequiredWeight);
				}
				if (MAV == null)
				{
					this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[31].Value = Convert.ToString(MAV);
				}
				if (CasesPerLayer == null)
				{
					this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[32].Value = Convert.ToString(CasesPerLayer);
				}
				if (LayersPerPallet == null)
				{
					this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[33].Value = Convert.ToString(LayersPerPallet);
				}
				if (ShelfLife == null)
				{
					this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[34].Value = Convert.ToString(ShelfLife);
				}
				if (Instructions == null)
				{
					this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[35].Value = Convert.ToString(Instructions);
				}
				if (PalletPattern == null)
				{
					this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[36].Value = Convert.ToString(PalletPattern);
				}
				if (Inactive.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[37].Value = Convert.ToBoolean(Inactive.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
				}
				if (Packers.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[38].Value = (double)Packers.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
				}
				if (ItemProdStandard.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[39].Value = (double)ItemProdStandard.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
				}
				if (UPC == null)
				{
					this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[40].Value = Convert.ToString(UPC);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int ItemID, string ItemCode, string ItemDescription, string ItemType, int? ItemCustomerID, int? ItemDefaultMachine, byte[] ItemPicture, double? dblPrice, float? sngRebate, string strUnitOfMeasure, double? intQtyPerUnit, string strEnteredBy, DateTime? dtmEnteredOn, double? dblFreight, double? dblFilm, double? dblBoxes, double? dblStretchWrap, double? dblPallets, double? dblOther1, double? dblOther2, double? dblOther3, double? dblOther4, double? dblOther5, double? intUnitsPerCase, int? intCasesPerPallet, float? sngQuantityOnHand, int? intUnitsPerPallet, double? CaseGrossWeight, string PackageCode, string CaseCode, string RequiredWeight, string MAV, string CasesPerLayer, string LayersPerPallet, string ShelfLife, string Instructions, string PalletPattern, bool? Inactive, double? Packers, double? ItemProdStandard, string UPC, int Original_ItemID, byte[] Original_ts)
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = (int)ItemID;
				if (ItemCode == null)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = Convert.ToString(ItemCode);
				}
				if (ItemDescription == null)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = Convert.ToString(ItemDescription);
				}
				if (ItemType == null)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = Convert.ToString(ItemType);
				}
				if (ItemCustomerID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = (int)ItemCustomerID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (ItemDefaultMachine.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = (int)ItemDefaultMachine.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (ItemPicture == null)
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = (byte[])ItemPicture;
				}
				if (dblPrice.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = (double)dblPrice.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				if (sngRebate.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = (float)sngRebate.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				if (strUnitOfMeasure == null)
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = Convert.ToString(strUnitOfMeasure);
				}
				if (intQtyPerUnit.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = (double)intQtyPerUnit.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				if (strEnteredBy == null)
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				if (dblFreight.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = (double)dblFreight.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				if (dblFilm.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[14].Value = (double)dblFilm.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
				}
				if (dblBoxes.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = (double)dblBoxes.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
				}
				if (dblStretchWrap.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[16].Value = (double)dblStretchWrap.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
				}
				if (dblPallets.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[17].Value = (double)dblPallets.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
				}
				if (dblOther1.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[18].Value = (double)dblOther1.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
				}
				if (dblOther2.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[19].Value = (double)dblOther2.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
				}
				if (dblOther3.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[20].Value = (double)dblOther3.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
				}
				if (dblOther4.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[21].Value = (double)dblOther4.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
				}
				if (dblOther5.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[22].Value = (double)dblOther5.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
				}
				if (intUnitsPerCase.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[23].Value = (double)intUnitsPerCase.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
				}
				if (intCasesPerPallet.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[24].Value = (int)intCasesPerPallet.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
				}
				if (sngQuantityOnHand.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[25].Value = (float)sngQuantityOnHand.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
				}
				if (intUnitsPerPallet.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[26].Value = (int)intUnitsPerPallet.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
				}
				if (CaseGrossWeight.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[27].Value = (double)CaseGrossWeight.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
				}
				if (PackageCode == null)
				{
					this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[28].Value = Convert.ToString(PackageCode);
				}
				if (CaseCode == null)
				{
					this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[29].Value = Convert.ToString(CaseCode);
				}
				if (RequiredWeight == null)
				{
					this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[30].Value = Convert.ToString(RequiredWeight);
				}
				if (MAV == null)
				{
					this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[31].Value = Convert.ToString(MAV);
				}
				if (CasesPerLayer == null)
				{
					this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[32].Value = Convert.ToString(CasesPerLayer);
				}
				if (LayersPerPallet == null)
				{
					this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[33].Value = Convert.ToString(LayersPerPallet);
				}
				if (ShelfLife == null)
				{
					this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[34].Value = Convert.ToString(ShelfLife);
				}
				if (Instructions == null)
				{
					this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[35].Value = Convert.ToString(Instructions);
				}
				if (PalletPattern == null)
				{
					this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[36].Value = Convert.ToString(PalletPattern);
				}
				if (Inactive.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[37].Value = Convert.ToBoolean(Inactive.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
				}
				if (Packers.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[38].Value = (double)Packers.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
				}
				if (ItemProdStandard.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[39].Value = (double)ItemProdStandard.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
				}
				if (UPC == null)
				{
					this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[40].Value = Convert.ToString(UPC);
				}
				this.Adapter.UpdateCommand.Parameters[41].Value = (int)Original_ItemID;
				if (Original_ts == null)
				{
					this.Adapter.UpdateCommand.Parameters[42].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[42].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[43].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(string ItemCode, string ItemDescription, string ItemType, int? ItemCustomerID, int? ItemDefaultMachine, byte[] ItemPicture, double? dblPrice, float? sngRebate, string strUnitOfMeasure, double? intQtyPerUnit, string strEnteredBy, DateTime? dtmEnteredOn, double? dblFreight, double? dblFilm, double? dblBoxes, double? dblStretchWrap, double? dblPallets, double? dblOther1, double? dblOther2, double? dblOther3, double? dblOther4, double? dblOther5, double? intUnitsPerCase, int? intCasesPerPallet, float? sngQuantityOnHand, int? intUnitsPerPallet, double? CaseGrossWeight, string PackageCode, string CaseCode, string RequiredWeight, string MAV, string CasesPerLayer, string LayersPerPallet, string ShelfLife, string Instructions, string PalletPattern, bool? Inactive, double? Packers, double? ItemProdStandard, string UPC, int Original_ItemID, byte[] Original_ts)
			{
				return this.Update(Original_ItemID, ItemCode, ItemDescription, ItemType, ItemCustomerID, ItemDefaultMachine, ItemPicture, dblPrice, sngRebate, strUnitOfMeasure, intQtyPerUnit, strEnteredBy, dtmEnteredOn, dblFreight, dblFilm, dblBoxes, dblStretchWrap, dblPallets, dblOther1, dblOther2, dblOther3, dblOther4, dblOther5, intUnitsPerCase, intCasesPerPallet, sngQuantityOnHand, intUnitsPerPallet, CaseGrossWeight, PackageCode, CaseCode, RequiredWeight, MAV, CasesPerLayer, LayersPerPallet, ShelfLife, Instructions, PalletPattern, Inactive, Packers, ItemProdStandard, UPC, Original_ItemID, Original_ts);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual double? GetCaseGrossWeight(int ItemID)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
				command.Parameters[0].Value = (int)ItemID;
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				object returnValue = null;
				try
				{
					returnValue = command.ExecuteScalar();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				if ((returnValue == null) || (returnValue.GetType() == typeof(global::System.DBNull)))
				{
					return new double?();
				}
				else
				{
					return new double?(Convert.ToDouble(returnValue));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual object GetCasesPerPallet(int ItemID)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
				command.Parameters[0].Value = (int)ItemID;
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				object returnValue = null;
				try
				{
					returnValue = command.ExecuteScalar();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				if ((returnValue == null) || (returnValue.GetType() == typeof(global::System.DBNull)))
				{
					return null;
				}
				else
				{
					return (object)returnValue;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int? GetPallets(int ItemID)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[12];
				command.Parameters[0].Value = (int)ItemID;
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				object returnValue = null;
				try
				{
					returnValue = command.ExecuteScalar();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				if ((returnValue == null) || (returnValue.GetType() == typeof(global::System.DBNull)))
				{
					return new int?();
				}
				else
				{
					return new int?(Convert.ToInt32(returnValue));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int? GetUnits(int ItemID)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[13];
				command.Parameters[0].Value = (int)ItemID;
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				object returnValue = null;
				try
				{
					returnValue = command.ExecuteScalar();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				if ((returnValue == null) || (returnValue.GetType() == typeof(global::System.DBNull)))
				{
					return new int?();
				}
				else
				{
					return new int?(Convert.ToInt32(returnValue));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
			public virtual int InactivateItem(int ItemID)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[14];
				command.Parameters[0].Value = (int)ItemID;
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				int returnValue = 0;
				try
				{
					returnValue = command.ExecuteNonQuery();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				return returnValue;
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class ReceivingDetailsTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingDetailsTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "ReceivingDetails";
				tableMapping.ColumnMappings.Add("ReceivDetID", "ReceivDetID");
				tableMapping.ColumnMappings.Add("ReceivMainID", "ReceivMainID");
				tableMapping.ColumnMappings.Add("ReceivDetItemID", "ReceivDetItemID");
				tableMapping.ColumnMappings.Add("ReceivDetLot", "ReceivDetLot");
				tableMapping.ColumnMappings.Add("ReceivDetQty", "ReceivDetQty");
				tableMapping.ColumnMappings.Add("intUnits", "intUnits");
				tableMapping.ColumnMappings.Add("ts", "ts");
				tableMapping.ColumnMappings.Add("ExpirationDate", "ExpirationDate");
				tableMapping.ColumnMappings.Add("ReceivDetLPNFrom", "ReceivDetLPN");
				tableMapping.ColumnMappings.Add("ReceivDetLPN", "ReceivDetLPN");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblReceivDet] WHERE (([ReceivDetID] = @Original_ReceivDetID) AND ([t"+
					"s] = @Original_ts))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivDetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDetID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblReceivDet] ([ReceivMainID], [ReceivDetItemID], [ReceivDetLot], [R"+
					"eceivDetQty], [intUnits], [ExpirationDate], [ReceivDetLPN]) VALUES (@ReceivMainI"+
					"D, @ReceivDetItemID, @ReceivDetLot, @ReceivDetQty, @intUnits, @ExpirationDate, @"+
					"ReceivDetLPN);" + "\r" + "\n" + "SELECT ReceivDetID, ReceivMainID, ReceivDetItemID, ReceivDetLot,"+
					" ReceivDetQty, intUnits, ts, ExpirationDate, ReceivDetLPN FROM tblReceivDet WHER"+
					"E (ReceivDetID = SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivDetItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDetItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivDetLot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDetLot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivDetQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDetQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpirationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpirationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivDetLPN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDetLPN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblReceivDet] SET [ReceivMainID] = @ReceivMainID, [ReceivDetItemID] = @Re"+
					"ceivDetItemID, [ReceivDetLot] = @ReceivDetLot, [ReceivDetQty] = @ReceivDetQty, ["+
					"intUnits] = @intUnits, [ExpirationDate] = @ExpirationDate, [ReceivDetLPN] = @Rec"+
					"eivDetLPN WHERE (([ReceivDetID] = @Original_ReceivDetID) AND ([ts] = @Original_t"+
					"s));" + "\r" + "\n" + "SELECT ReceivDetID, ReceivMainID, ReceivDetItemID, ReceivDetLot, ReceivDet"+
					"Qty, intUnits, ts, ExpirationDate, ReceivDetLPN FROM tblReceivDet WHERE (ReceivD"+
					"etID = @ReceivDetID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivDetItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDetItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivDetLot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDetLot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivDetQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDetQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpirationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpirationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivDetLPN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDetLPN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivDetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDetID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivDetID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDetID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        ReceivDetID, ReceivMainID, ReceivDetItemID, ReceivDetLot, ReceivDet"+
					"Qty, intUnits, ts, ExpirationDate, ReceivDetLPN" + "\r" + "\n" + "FROM            tblReceivDet";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT ExpirationDate, ReceivDetID, ReceivDetItemID, ReceivDetLPN, ReceivDetLot, "+
					"ReceivDetQty, ReceivMainID, intUnits, ts FROM tblReceivDet WHERE (ReceivDetID = "+
					"@DetailID)";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DetailID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDetID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT ExpirationDate, ReceivDetID, ReceivDetItemID, ReceivDetLPN, ReceivDetLot, "+
					"ReceivDetQty, ReceivMainID, intUnits, ts FROM tblReceivDet WHERE (ReceivMainID ="+
					" @ReceivingID)";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivingID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "SELECT        tblReceivDet.ReceivDetID, tblReceivDet.ReceivMainID, tblReceivDet.R"+
					"eceivDetLot, tblReceivDet.ReceivDetQty, tblReceivMain.ReceivDate, tblReceivMain."+
					"ReceivBOL, tblReceivDet.ExpirationDate, " + "\r" + "\n" + "                         tblReceivDet."+
					"intUnits" + "\r" + "\n" + "FROM            tblReceivDet INNER JOIN" + "\r" + "\n" + "                         tblR"+
					"eceivMain ON tblReceivDet.ReceivMainID = tblReceivMain.ReceivID" + "\r" + "\n" + "WHERE        (t"+
					"blReceivDet.ReceivDetItemID = @ItemID)";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDetItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.ReceivingDetailsDataTable GetReceivingDetails()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.ReceivingDetailsDataTable dataTable = new SPG.ReceivingDetailsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ReceivingDetailsDataTable GetDetailsByDetailID(int DetailID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)DetailID;
				SPG.ReceivingDetailsDataTable dataTable = new SPG.ReceivingDetailsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ReceivingDetailsDataTable GetDetailsByReceivingID(int? ReceivingID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				if (ReceivingID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)ReceivingID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.ReceivingDetailsDataTable dataTable = new SPG.ReceivingDetailsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ReceivingDetailsDataTable GetReceivingDetailsByItemID(int? ItemID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				if (ItemID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)ItemID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.ReceivingDetailsDataTable dataTable = new SPG.ReceivingDetailsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.ReceivingDetailsDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "ReceivingDetails");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_ReceivDetID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_ReceivDetID;
				if (Original_ts == null)
				{
					throw new global::System.ArgumentNullException("Original_ts");
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(int? ReceivMainID, int? ReceivDetItemID, string ReceivDetLot, int? ReceivDetQty, int? intUnits, DateTime? ExpirationDate, int ReceivDetLPN)
			{
				if (ReceivMainID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[0].Value = (int)ReceivMainID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (ReceivDetItemID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = (int)ReceivDetItemID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (ReceivDetLot == null)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = Convert.ToString(ReceivDetLot);
				}
				if (ReceivDetQty.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = (int)ReceivDetQty.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (intUnits.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = (int)intUnits.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (ExpirationDate.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = Convert.ToDateTime(ExpirationDate.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				this.Adapter.InsertCommand.Parameters[6].Value = (int)ReceivDetLPN;
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int? ReceivMainID, int? ReceivDetItemID, string ReceivDetLot, int? ReceivDetQty, int? intUnits, DateTime? ExpirationDate, int ReceivDetLPN, int Original_ReceivDetID, byte[] Original_ts, int ReceivDetID)
			{
				if (ReceivMainID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = (int)ReceivMainID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (ReceivDetItemID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = (int)ReceivDetItemID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (ReceivDetLot == null)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = Convert.ToString(ReceivDetLot);
				}
				if (ReceivDetQty.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = (int)ReceivDetQty.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (intUnits.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = (int)intUnits.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (ExpirationDate.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = Convert.ToDateTime(ExpirationDate.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[6].Value = (int)ReceivDetLPN;
				this.Adapter.UpdateCommand.Parameters[7].Value = (int)Original_ReceivDetID;
				if (Original_ts == null)
				{
					throw new global::System.ArgumentNullException("Original_ts");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = (byte[])Original_ts;
				}
				this.Adapter.UpdateCommand.Parameters[9].Value = (int)ReceivDetID;
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int? ReceivMainID, int? ReceivDetItemID, string ReceivDetLot, int? ReceivDetQty, int? intUnits, DateTime? ExpirationDate, int ReceivDetLPN, int Original_ReceivDetID, byte[] Original_ts)
			{
				return this.Update(ReceivMainID, ReceivDetItemID, ReceivDetLot, ReceivDetQty, intUnits, ExpirationDate, ReceivDetLPN, Original_ReceivDetID, Original_ts, Original_ReceivDetID);
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class ReceivingsTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReceivingsTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Receivings";
				tableMapping.ColumnMappings.Add("ReceivID", "ReceivID");
				tableMapping.ColumnMappings.Add("ReceivDate", "ReceivDate");
				tableMapping.ColumnMappings.Add("ReceivCarrierID", "ReceivCarrierID");
				tableMapping.ColumnMappings.Add("ReceivCustID", "ReceivCustID");
				tableMapping.ColumnMappings.Add("ReceivBOL", "ReceivBOL");
				tableMapping.ColumnMappings.Add("strEnteredBy", "strEnteredBy");
				tableMapping.ColumnMappings.Add("dtmEnteredOn", "dtmEnteredOn");
				tableMapping.ColumnMappings.Add("strVendor", "strVendor");
				tableMapping.ColumnMappings.Add("sngSkits", "sngSkits");
				tableMapping.ColumnMappings.Add("sngTotalPallets", "sngTotalPallets");
				tableMapping.ColumnMappings.Add("strPO", "strPO");
				tableMapping.ColumnMappings.Add("intShiftID", "intShiftID");
				tableMapping.ColumnMappings.Add("strTrailer", "strTrailer");
				tableMapping.ColumnMappings.Add("strSeal", "strSeal");
				tableMapping.ColumnMappings.Add("ts", "ts");
				tableMapping.ColumnMappings.Add("Notes", "Notes");
				tableMapping.ColumnMappings.Add("UnloadedBy", "UnloadedBy");
				tableMapping.ColumnMappings.Add("CheckedBy", "CheckedBy");
				tableMapping.ColumnMappings.Add("PhysicalCondition", "PhysicalCondition");
				tableMapping.ColumnMappings.Add("LoadCondition", "LoadCondition");
				tableMapping.ColumnMappings.Add("StartTime", "StartTime");
				tableMapping.ColumnMappings.Add("FinishTime", "FinishTime");
				tableMapping.ColumnMappings.Add("Temparature", "Temparature");
				tableMapping.ColumnMappings.Add("WheelsChocked", "WheelsChocked");
				tableMapping.ColumnMappings.Add("ForeignSubstance", "ForeignSubstance");
				tableMapping.ColumnMappings.Add("InsectActivity", "InsectActivity");
				tableMapping.ColumnMappings.Add("CorrectPallets", "CorrectPallets");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblReceivMain] WHERE (([ReceivID] = @Original_ReceivID) AND ((@IsNul"+
					"l_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblReceivMain] ([ReceivID], [ReceivDate], [ReceivCarrierID], [Receiv"+
					"CustID], [ReceivBOL], [strEnteredBy], [dtmEnteredOn], [strVendor], [sngSkits], ["+
					"sngTotalPallets], [strPO], [intShiftID], [strTrailer], [strSeal], [Notes], [Unlo"+
					"adedBy], [CheckedBy], [PhysicalCondition], [LoadCondition], [StartTime], [Finish"+
					"Time], [Temparature], [WheelsChocked], [ForeignSubstance], [InsectActivity], [Co"+
					"rrectPallets]) VALUES (@ReceivID, @ReceivDate, @ReceivCarrierID, @ReceivCustID, "+
					"@ReceivBOL, @strEnteredBy, @dtmEnteredOn, @strVendor, @sngSkits, @sngTotalPallet"+
					"s, @strPO, @intShiftID, @strTrailer, @strSeal, @Notes, @UnloadedBy, @CheckedBy, "+
					"@PhysicalCondition, @LoadCondition, @StartTime, @FinishTime, @Temparature, @Whee"+
					"lsChocked, @ForeignSubstance, @InsectActivity, @CorrectPallets);" + "\r" + "\n" + "SELECT ReceivI"+
					"D, ReceivDate, ReceivCarrierID, ReceivCustID, ReceivBOL, strEnteredBy, dtmEntere"+
					"dOn, strVendor, sngSkits, sngTotalPallets, strPO, intShiftID, strTrailer, strSea"+
					"l, ts, Notes, UnloadedBy, CheckedBy, PhysicalCondition, LoadCondition, StartTime"+
					", FinishTime, Temparature, WheelsChocked, ForeignSubstance, InsectActivity, Corr"+
					"ectPallets FROM tblReceivMain WHERE (ReceivID = @ReceivID)";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivCarrierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivCarrierID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivCustID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivCustID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivBOL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivBOL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strVendor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strVendor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngSkits", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngSkits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngTotalPallets", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngTotalPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strPO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intShiftID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intShiftID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strTrailer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strTrailer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strSeal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strSeal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnloadedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnloadedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CheckedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhysicalCondition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhysicalCondition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadCondition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadCondition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Temparature", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Temparature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WheelsChocked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WheelsChocked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignSubstance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignSubstance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsectActivity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsectActivity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CorrectPallets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CorrectPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblReceivMain] SET [ReceivID] = @ReceivID, [ReceivDate] = @ReceivDate, [R"+
					"eceivCarrierID] = @ReceivCarrierID, [ReceivCustID] = @ReceivCustID, [ReceivBOL] "+
					"= @ReceivBOL, [strEnteredBy] = @strEnteredBy, [dtmEnteredOn] = @dtmEnteredOn, [s"+
					"trVendor] = @strVendor, [sngSkits] = @sngSkits, [sngTotalPallets] = @sngTotalPal"+
					"lets, [strPO] = @strPO, [intShiftID] = @intShiftID, [strTrailer] = @strTrailer, "+
					"[strSeal] = @strSeal, [Notes] = @Notes, [UnloadedBy] = @UnloadedBy, [CheckedBy] "+
					"= @CheckedBy, [PhysicalCondition] = @PhysicalCondition, [LoadCondition] = @LoadC"+
					"ondition, [StartTime] = @StartTime, [FinishTime] = @FinishTime, [Temparature] = "+
					"@Temparature, [WheelsChocked] = @WheelsChocked, [ForeignSubstance] = @ForeignSub"+
					"stance, [InsectActivity] = @InsectActivity, [CorrectPallets] = @CorrectPallets W"+
					"HERE (([ReceivID] = @Original_ReceivID) AND ((@IsNull_ts = 1 AND [ts] IS NULL) O"+
					"R ([ts] = @Original_ts)));" + "\r" + "\n" + "SELECT ReceivID, ReceivDate, ReceivCarrierID, Receiv"+
					"CustID, ReceivBOL, strEnteredBy, dtmEnteredOn, strVendor, sngSkits, sngTotalPall"+
					"ets, strPO, intShiftID, strTrailer, strSeal, ts, Notes, UnloadedBy, CheckedBy, P"+
					"hysicalCondition, LoadCondition, StartTime, FinishTime, Temparature, WheelsChock"+
					"ed, ForeignSubstance, InsectActivity, CorrectPallets FROM tblReceivMain WHERE (R"+
					"eceivID = @ReceivID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivCarrierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivCarrierID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivCustID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivCustID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivBOL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivBOL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strVendor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strVendor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngSkits", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngSkits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngTotalPallets", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngTotalPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strPO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intShiftID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intShiftID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strTrailer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strTrailer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strSeal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strSeal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnloadedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnloadedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CheckedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhysicalCondition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhysicalCondition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadCondition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadCondition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Temparature", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Temparature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WheelsChocked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WheelsChocked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignSubstance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignSubstance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsectActivity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsectActivity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CorrectPallets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CorrectPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        ReceivID, ReceivDate, ReceivCarrierID, ReceivCustID, ReceivBOL, str"+
					"EnteredBy, dtmEnteredOn, strVendor, sngSkits, sngTotalPallets, strPO, intShiftID"+
					", strTrailer, strSeal, ts, Notes, UnloadedBy, CheckedBy, " + "\r" + "\n" + "                     "+
					"    PhysicalCondition, LoadCondition, StartTime, FinishTime, Temparature, Wheels"+
					"Chocked, ForeignSubstance, InsectActivity, CorrectPallets" + "\r" + "\n" + "FROM            tblRe"+
					"ceivMain";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT CheckedBy, CorrectPallets, FinishTime, ForeignSubstance, InsectActivity, L"+
					"oadCondition, Notes, PhysicalCondition, ReceivBOL, ReceivCarrierID, ReceivCustID"+
					", ReceivDate, ReceivID, StartTime, Temparature, UnloadedBy, WheelsChocked, dtmEn"+
					"teredOn, intShiftID, sngSkits, sngTotalPallets, strEnteredBy, strPO, strSeal, st"+
					"rTrailer, strVendor, ts FROM tblReceivMain WHERE (ReceivCustID = ISNULL(@Custome"+
					"rID, ReceivCustID)) AND (ReceivDate BETWEEN ISNULL(@FromDate, ReceivDate) AND IS"+
					"NULL(@ToDate, ReceivDate))";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivCustID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT CheckedBy, CorrectPallets, FinishTime, ForeignSubstance, InsectActivity, L"+
					"oadCondition, Notes, PhysicalCondition, ReceivBOL, ReceivCarrierID, ReceivCustID"+
					", ReceivDate, ReceivID, StartTime, Temparature, UnloadedBy, WheelsChocked, dtmEn"+
					"teredOn, intShiftID, sngSkits, sngTotalPallets, strEnteredBy, strPO, strSeal, st"+
					"rTrailer, strVendor, ts FROM tblReceivMain WHERE (ReceivCustID = @CustomerID)";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivCustID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "SELECT CheckedBy, CorrectPallets, FinishTime, ForeignSubstance, InsectActivity, L"+
					"oadCondition, Notes, PhysicalCondition, ReceivBOL, ReceivCarrierID, ReceivCustID"+
					", ReceivDate, ReceivID, StartTime, Temparature, UnloadedBy, WheelsChocked, dtmEn"+
					"teredOn, intShiftID, sngSkits, sngTotalPallets, strEnteredBy, strPO, strSeal, st"+
					"rTrailer, strVendor, ts FROM tblReceivMain WHERE (ReceivID = @ReceivID)";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[4].Connection = this.Connection;
				this._commandCollection[4].CommandText = "SELECT        SUM(sngTotalPallets) AS TotalPallets" + "\r" + "\n" + "FROM            tblReceivMain"+
					"" + "\r" + "\n" + "WHERE        (ReceivCustID = @CustomerID)";
				this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivCustID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.ReceivingsDataTable GetReceivings()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.ReceivingsDataTable dataTable = new SPG.ReceivingsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ReceivingsDataTable GetIDAndBOLByCustomerAndDate(int? CustomerID, DateTime? FromDate, DateTime? ToDate)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				if (CustomerID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)CustomerID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (FromDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[1].Value = Convert.ToDateTime(FromDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (ToDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[2].Value = Convert.ToDateTime(ToDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				SPG.ReceivingsDataTable dataTable = new SPG.ReceivingsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ReceivingsDataTable GetReceivingsByCustomerID(int? CustomerID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				if (CustomerID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)CustomerID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.ReceivingsDataTable dataTable = new SPG.ReceivingsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ReceivingsDataTable GetReceivingsByID(int ReceivID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)ReceivID;
				SPG.ReceivingsDataTable dataTable = new SPG.ReceivingsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.ReceivingsDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "Receivings");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_ReceivID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_ReceivID;
				if (Original_ts == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(int ReceivID, DateTime? ReceivDate, int? ReceivCarrierID, int? ReceivCustID, string ReceivBOL, string strEnteredBy, DateTime? dtmEnteredOn, int? strVendor, float? sngSkits, float? sngTotalPallets, string strPO, int? intShiftID, string strTrailer, string strSeal, string Notes, int? UnloadedBy, int? CheckedBy, int? PhysicalCondition, int? LoadCondition, DateTime? StartTime, DateTime? FinishTime, double? Temparature, int? WheelsChocked, int? ForeignSubstance, int? InsectActivity, int? CorrectPallets)
			{
				this.Adapter.InsertCommand.Parameters[0].Value = (int)ReceivID;
				if (ReceivDate.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = Convert.ToDateTime(ReceivDate.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (ReceivCarrierID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = (int)ReceivCarrierID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (ReceivCustID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = (int)ReceivCustID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (ReceivBOL == null)
				{
					throw new global::System.ArgumentNullException("ReceivBOL");
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = Convert.ToString(ReceivBOL);
				}
				if (strEnteredBy == null)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[6].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				if (strVendor.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[7].Value = (int)strVendor.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				if (sngSkits.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[8].Value = (float)sngSkits.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				if (sngTotalPallets.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[9].Value = (float)sngTotalPallets.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				if (strPO == null)
				{
					this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[10].Value = Convert.ToString(strPO);
				}
				if (intShiftID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[11].Value = (int)intShiftID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				if (strTrailer == null)
				{
					this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[12].Value = Convert.ToString(strTrailer);
				}
				if (strSeal == null)
				{
					this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[13].Value = Convert.ToString(strSeal);
				}
				if (Notes == null)
				{
					this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[14].Value = Convert.ToString(Notes);
				}
				if (UnloadedBy.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[15].Value = (int)UnloadedBy.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
				}
				if (CheckedBy.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[16].Value = (int)CheckedBy.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
				}
				if (PhysicalCondition.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[17].Value = (int)PhysicalCondition.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
				}
				if (LoadCondition.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[18].Value = (int)LoadCondition.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
				}
				if (StartTime.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[19].Value = Convert.ToDateTime(StartTime.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
				}
				if (FinishTime.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[20].Value = Convert.ToDateTime(FinishTime.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
				}
				if (Temparature.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[21].Value = (double)Temparature.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
				}
				if (WheelsChocked.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[22].Value = (int)WheelsChocked.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
				}
				if (ForeignSubstance.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[23].Value = (int)ForeignSubstance.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
				}
				if (InsectActivity.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[24].Value = (int)InsectActivity.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
				}
				if (CorrectPallets.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[25].Value = (int)CorrectPallets.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int ReceivID, DateTime? ReceivDate, int? ReceivCarrierID, int? ReceivCustID, string ReceivBOL, string strEnteredBy, DateTime? dtmEnteredOn, int? strVendor, float? sngSkits, float? sngTotalPallets, string strPO, int? intShiftID, string strTrailer, string strSeal, string Notes, int? UnloadedBy, int? CheckedBy, int? PhysicalCondition, int? LoadCondition, DateTime? StartTime, DateTime? FinishTime, double? Temparature, int? WheelsChocked, int? ForeignSubstance, int? InsectActivity, int? CorrectPallets, int Original_ReceivID, byte[] Original_ts)
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = (int)ReceivID;
				if (ReceivDate.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = Convert.ToDateTime(ReceivDate.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (ReceivCarrierID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (int)ReceivCarrierID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (ReceivCustID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = (int)ReceivCustID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (ReceivBOL == null)
				{
					throw new global::System.ArgumentNullException("ReceivBOL");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = Convert.ToString(ReceivBOL);
				}
				if (strEnteredBy == null)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				if (strVendor.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = (int)strVendor.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				if (sngSkits.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = (float)sngSkits.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				if (sngTotalPallets.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = (float)sngTotalPallets.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				if (strPO == null)
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = Convert.ToString(strPO);
				}
				if (intShiftID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = (int)intShiftID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				if (strTrailer == null)
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = Convert.ToString(strTrailer);
				}
				if (strSeal == null)
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = Convert.ToString(strSeal);
				}
				if (Notes == null)
				{
					this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[14].Value = Convert.ToString(Notes);
				}
				if (UnloadedBy.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = (int)UnloadedBy.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
				}
				if (CheckedBy.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[16].Value = (int)CheckedBy.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
				}
				if (PhysicalCondition.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[17].Value = (int)PhysicalCondition.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
				}
				if (LoadCondition.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[18].Value = (int)LoadCondition.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
				}
				if (StartTime.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[19].Value = Convert.ToDateTime(StartTime.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
				}
				if (FinishTime.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[20].Value = Convert.ToDateTime(FinishTime.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
				}
				if (Temparature.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[21].Value = (double)Temparature.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
				}
				if (WheelsChocked.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[22].Value = (int)WheelsChocked.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
				}
				if (ForeignSubstance.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[23].Value = (int)ForeignSubstance.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
				}
				if (InsectActivity.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[24].Value = (int)InsectActivity.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
				}
				if (CorrectPallets.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[25].Value = (int)CorrectPallets.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[26].Value = (int)Original_ReceivID;
				if (Original_ts == null)
				{
					this.Adapter.UpdateCommand.Parameters[27].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[27].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[28].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(DateTime? ReceivDate, int? ReceivCarrierID, int? ReceivCustID, string ReceivBOL, string strEnteredBy, DateTime? dtmEnteredOn, int? strVendor, float? sngSkits, float? sngTotalPallets, string strPO, int? intShiftID, string strTrailer, string strSeal, string Notes, int? UnloadedBy, int? CheckedBy, int? PhysicalCondition, int? LoadCondition, DateTime? StartTime, DateTime? FinishTime, double? Temparature, int? WheelsChocked, int? ForeignSubstance, int? InsectActivity, int? CorrectPallets, int Original_ReceivID, byte[] Original_ts)
			{
				return this.Update(Original_ReceivID, ReceivDate, ReceivCarrierID, ReceivCustID, ReceivBOL, strEnteredBy, dtmEnteredOn, strVendor, sngSkits, sngTotalPallets, strPO, intShiftID, strTrailer, strSeal, Notes, UnloadedBy, CheckedBy, PhysicalCondition, LoadCondition, StartTime, FinishTime, Temparature, WheelsChocked, ForeignSubstance, InsectActivity, CorrectPallets, Original_ReceivID, Original_ts);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual object GetTotalPalletsByCustomerID(int? CustomerID)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
				if (CustomerID.HasValue == true)
				{
					command.Parameters[0].Value = (int)CustomerID.Value;
				}
				else
				{
					command.Parameters[0].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				object returnValue = null;
				try
				{
					returnValue = command.ExecuteScalar();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				if ((returnValue == null) || (returnValue.GetType() == typeof(global::System.DBNull)))
				{
					return null;
				}
				else
				{
					return (object)returnValue;
				}
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class ProductionTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ProductionTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Production";
				tableMapping.ColumnMappings.Add("ProdMainID", "ProdMainID");
				tableMapping.ColumnMappings.Add("ProdMainDate", "ProdMainDate");
				tableMapping.ColumnMappings.Add("ProdMainShift", "ProdMainShift");
				tableMapping.ColumnMappings.Add("ProdMainItemID", "ProdMainItemID");
				tableMapping.ColumnMappings.Add("ProdMainLot", "ProdMainLot");
				tableMapping.ColumnMappings.Add("ProdMainQuantity", "ProdMainQuantity");
				tableMapping.ColumnMappings.Add("ProdMainMachineLine", "ProdMainMachineLine");
				tableMapping.ColumnMappings.Add("ProdMainTimeStart", "ProdMainTimeStart");
				tableMapping.ColumnMappings.Add("ProdMainTimeStop", "ProdMainTimeStop");
				tableMapping.ColumnMappings.Add("ProdMainPackers", "ProdMainPackers");
				tableMapping.ColumnMappings.Add("ProdMainOperators", "ProdMainOperators");
				tableMapping.ColumnMappings.Add("ProdMainSupers", "ProdMainSupers");
				tableMapping.ColumnMappings.Add("intMachineSpeed", "intMachineSpeed");
				tableMapping.ColumnMappings.Add("strEnteredBy", "strEnteredBy");
				tableMapping.ColumnMappings.Add("dtmEnteredOn", "dtmEnteredOn");
				tableMapping.ColumnMappings.Add("ts", "ts");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblProdMain] WHERE (([ProdMainID] = @Original_ProdMainID) AND ((@IsN"+
					"ull_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProdMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblProdMain] ([ProdMainID], [ProdMainDate], [ProdMainShift], [ProdMa"+
					"inItemID], [ProdMainLot], [ProdMainQuantity], [ProdMainMachineLine], [ProdMainTi"+
					"meStart], [ProdMainTimeStop], [ProdMainPackers], [ProdMainOperators], [ProdMainS"+
					"upers], [intMachineSpeed], [strEnteredBy], [dtmEnteredOn]) VALUES (@ProdMainID, "+
					"@ProdMainDate, @ProdMainShift, @ProdMainItemID, @ProdMainLot, @ProdMainQuantity,"+
					" @ProdMainMachineLine, @ProdMainTimeStart, @ProdMainTimeStop, @ProdMainPackers, "+
					"@ProdMainOperators, @ProdMainSupers, @intMachineSpeed, @strEnteredBy, @dtmEntere"+
					"dOn);" + "\r" + "\n" + "SELECT ProdMainID, ProdMainDate, ProdMainShift, ProdMainItemID, ProdMainL"+
					"ot, ProdMainQuantity, ProdMainMachineLine, ProdMainTimeStart, ProdMainTimeStop, "+
					"ProdMainPackers, ProdMainOperators, ProdMainSupers, intMachineSpeed, strEnteredB"+
					"y, dtmEnteredOn, ts FROM tblProdMain WHERE (ProdMainID = @ProdMainID)";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainShift", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainShift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainLot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainLot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainQuantity", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainMachineLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainMachineLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainTimeStart", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainTimeStart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainTimeStop", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainTimeStop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainPackers", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainPackers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainOperators", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainOperators", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainSupers", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainSupers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intMachineSpeed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intMachineSpeed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblProdMain] SET [ProdMainID] = @ProdMainID, [ProdMainDate] = @ProdMainDa"+
					"te, [ProdMainShift] = @ProdMainShift, [ProdMainItemID] = @ProdMainItemID, [ProdM"+
					"ainLot] = @ProdMainLot, [ProdMainQuantity] = @ProdMainQuantity, [ProdMainMachine"+
					"Line] = @ProdMainMachineLine, [ProdMainTimeStart] = @ProdMainTimeStart, [ProdMai"+
					"nTimeStop] = @ProdMainTimeStop, [ProdMainPackers] = @ProdMainPackers, [ProdMainO"+
					"perators] = @ProdMainOperators, [ProdMainSupers] = @ProdMainSupers, [intMachineS"+
					"peed] = @intMachineSpeed, [strEnteredBy] = @strEnteredBy, [dtmEnteredOn] = @dtmE"+
					"nteredOn WHERE (([ProdMainID] = @Original_ProdMainID) AND ((@IsNull_ts = 1 AND ["+
					"ts] IS NULL) OR ([ts] = @Original_ts)));" + "\r" + "\n" + "SELECT ProdMainID, ProdMainDate, ProdM"+
					"ainShift, ProdMainItemID, ProdMainLot, ProdMainQuantity, ProdMainMachineLine, Pr"+
					"odMainTimeStart, ProdMainTimeStop, ProdMainPackers, ProdMainOperators, ProdMainS"+
					"upers, intMachineSpeed, strEnteredBy, dtmEnteredOn, ts FROM tblProdMain WHERE (P"+
					"rodMainID = @ProdMainID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainShift", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainShift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainLot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainLot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainQuantity", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainMachineLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainMachineLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainTimeStart", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainTimeStart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainTimeStop", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainTimeStop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainPackers", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainPackers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainOperators", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainOperators", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProdMainSupers", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainSupers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intMachineSpeed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intMachineSpeed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProdMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[8];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        ProdMainID, ProdMainDate, ProdMainShift, ProdMainItemID, ProdMainLo"+
					"t, ProdMainQuantity, ProdMainMachineLine, ProdMainTimeStart, ProdMainTimeStop," + "\r" + "\n"+
					"                          ProdMainPackers, ProdMainOperators, ProdMainSupers, in"+
					"tMachineSpeed, strEnteredBy, dtmEnteredOn, ts" + "\r" + "\n" + "FROM            tblProdMain";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT tblProdMain.ProdMainDate, tblProdMain.ProdMainID, tblProdMain.ProdMainItem"+
					"ID, tblProdMain.ProdMainLot, tblProdMain.ProdMainMachineLine, tblProdMain.ProdMa"+
					"inOperators, tblProdMain.ProdMainPackers, tblProdMain.ProdMainQuantity, tblProdM"+
					"ain.ProdMainShift, tblProdMain.ProdMainSupers, tblProdMain.ProdMainTimeStart, tb"+
					"lProdMain.ProdMainTimeStop, tblProdMain.dtmEnteredOn, tblProdMain.intMachineSpee"+
					"d, tblProdMain.strEnteredBy, tblProdMain.ts FROM tblProdMain INNER JOIN tblItems"+
					" ON tblProdMain.ProdMainItemID = tblItems.ItemID WHERE (tblItems.ItemCustomerID "+
					"= @CustomerID)";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT ProdMainDate, ProdMainID, ProdMainItemID, ProdMainLot, ProdMainMachineLine"+
					", ProdMainOperators, ProdMainPackers, ProdMainQuantity, ProdMainShift, ProdMainS"+
					"upers, ProdMainTimeStart, ProdMainTimeStop, dtmEnteredOn, intMachineSpeed, strEn"+
					"teredBy, ts FROM tblProdMain WHERE (ProdMainID = @ProductionID)";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductionID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "SELECT ProdMainDate, ProdMainID, ProdMainItemID, ProdMainLot, ProdMainMachineLine"+
					", ProdMainOperators, ProdMainPackers, ProdMainQuantity, ProdMainShift, ProdMainS"+
					"upers, ProdMainTimeStart, ProdMainTimeStop, dtmEnteredOn, intMachineSpeed, strEn"+
					"teredBy, ts FROM tblProdMain WHERE (ProdMainItemID = @ItemID)";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[4].Connection = this.Connection;
				this._commandCollection[4].CommandText = "SELECT ProdMainDate, ProdMainID, ProdMainItemID, ProdMainLot, ProdMainMachineLine"+
					", ProdMainOperators, ProdMainPackers, ProdMainQuantity, ProdMainShift, ProdMainS"+
					"upers, ProdMainTimeStart, ProdMainTimeStop, dtmEnteredOn, intMachineSpeed, strEn"+
					"teredBy, ts FROM tblProdMain WHERE (ProdMainMachineLine = @MachineLine)";
				this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MachineLine", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainMachineLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[5].Connection = this.Connection;
				this._commandCollection[5].CommandText = "SELECT        tblProdMain.ProdMainDate, tblProdMain.ProdMainID," + "\r" + "\n" + "                "+
					"             (SELECT        CustomerName" + "\r" + "\n" + "                               FROM   "+
					"         tblCustomers" + "\r" + "\n" + "                               WHERE        (CustomerID ="+
					" tblItems_1.ItemCustomerID)) AS CustomerName," + "\r" + "\n" + "                             (SEL"+
					"ECT        MachineLineName" + "\r" + "\n" + "                               FROM            tblMa"+
					"chineLine" + "\r" + "\n" + "                               WHERE        (MachineLineID = tblProdM"+
					"ain.ProdMainMachineLine)) AS MachineLine, tblProdMain.ProdMainQuantity," + "\r" + "\n" + "       "+
					"                      (SELECT        ShiftName" + "\r" + "\n" + "                               F"+
					"ROM            tblShifts" + "\r" + "\n" + "                               WHERE        (ShiftID ="+
					" tblProdMain.ProdMainShift)) AS Shift, tblProdMain.ProdMainTimeStart, tblProdMai"+
					"n.ProdMainTimeStop, tblItems_1.ItemCode, " + "\r" + "\n" + "                         tblItems_1.I"+
					"temDescription, tblProdMain.ProdMainLot, tblItems_1.ItemProdStandard, tblProdMai"+
					"n.intMachineSpeed, tblItems_1.intQtyPerUnit, " + "\r" + "\n" + "                         tblProdM"+
					"ain.ProdMainPackers, tblProdMain.ProdMainOperators, tblProdMain.ProdMainSupers, "+
					"" + "\r" + "\n" + "                         tblProdMain.ProdMainQuantity * tblItems_1.intQtyPerUn"+
					"it AS ActualSpeed, tblCustomers_1.Inactive,  tblCustomers_1.CustomerID" + "\r" + "\n" + "FROM    "+
					"        tblProdMain INNER JOIN" + "\r" + "\n" + "                         tblItems AS tblItems_1 "+
					"ON tblProdMain.ProdMainItemID = tblItems_1.ItemID INNER JOIN" + "\r" + "\n" + "                  "+
					"       tblCustomers AS tblCustomers_1 ON tblItems_1.ItemCustomerID = tblCustomer"+
					"s_1.CustomerID" + "\r" + "\n" + "WHERE        (tblProdMain.ProdMainDate BETWEEN ISNULL(@FromDate,"+
					" tblProdMain.ProdMainDate) AND ISNULL(@ToDate, tblProdMain.ProdMainDate)) AND " + "\r" + "\n"+
					"                         (tblItems_1.ItemCustomerID = ISNULL(@Customer, tblItems"+
					"_1.ItemCustomerID)) AND (tblProdMain.ProdMainShift = ISNULL(@Shift, " + "\r" + "\n" + "          "+
					"               tblProdMain.ProdMainShift)) AND (tblProdMain.ProdMainMachineLine "+
					"= ISNULL(@Machine, tblProdMain.ProdMainMachineLine)) AND " + "\r" + "\n" + "                     "+
					"    (tblItems_1.Inactive = ISNULL(@InactiveItems, tblItems_1.Inactive)) AND (tbl"+
					"Customers_1.Inactive = ISNULL(@InactiveCustomers, tblCustomers_1.Inactive))";
				this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Customer", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shift", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainShift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Machine", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainMachineLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InactiveItems", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InactiveCustomers", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[6].Connection = this.Connection;
				this._commandCollection[6].CommandText = "SELECT        tblProdMain.ProdMainDate, tblProdMain.ProdMainID," + "\r" + "\n" + "                "+
					"             (SELECT        CustomerName" + "\r" + "\n" + "                               FROM   "+
					"         tblCustomers" + "\r" + "\n" + "                               WHERE        (CustomerID ="+
					" tblItems_1.ItemCustomerID)) AS CustomerName," + "\r" + "\n" + "                             (SEL"+
					"ECT        MachineLineName" + "\r" + "\n" + "                               FROM            tblMa"+
					"chineLine" + "\r" + "\n" + "                               WHERE        (MachineLineID = tblProdM"+
					"ain.ProdMainMachineLine)) AS MachineLine, tblProdMain.ProdMainQuantity," + "\r" + "\n" + "       "+
					"                      (SELECT        ShiftName" + "\r" + "\n" + "                               F"+
					"ROM            tblShifts" + "\r" + "\n" + "                               WHERE        (ShiftID ="+
					" tblProdMain.ProdMainShift)) AS Shift, tblProdMain.ProdMainTimeStart, tblProdMai"+
					"n.ProdMainTimeStop, tblItems_1.ItemCode, " + "\r" + "\n" + "                         tblItems_1.I"+
					"temDescription, tblProdMain.ProdMainLot, tblItems_1.ItemProdStandard, tblProdMai"+
					"n.intMachineSpeed, tblItems_1.intQtyPerUnit, " + "\r" + "\n" + "                         tblProdM"+
					"ain.ProdMainPackers, tblProdMain.ProdMainOperators, tblProdMain.ProdMainSupers, "+
					"tblCustomers_1.CustomerID" + "\r" + "\n" + "FROM            tblProdMain INNER JOIN" + "\r" + "\n" + "             "+
					"            tblItems AS tblItems_1 ON tblProdMain.ProdMainItemID = tblItems_1.It"+
					"emID INNER JOIN" + "\r" + "\n" + "                         tblCustomers AS tblCustomers_1 ON tblI"+
					"tems_1.ItemCustomerID = tblCustomers_1.CustomerID" + "\r" + "\n" + "WHERE        (tblProdMain.Pro"+
					"dMainDate BETWEEN ISNULL(@FromDate, tblProdMain.ProdMainDate) AND ISNULL(@ToDate"+
					", tblProdMain.ProdMainDate)) AND " + "\r" + "\n" + "                         (tblItems_1.ItemCust"+
					"omerID = ISNULL(@Customer, tblItems_1.ItemCustomerID)) AND (tblProdMain.ProdMain"+
					"Shift = ISNULL(@Shift, " + "\r" + "\n" + "                         tblProdMain.ProdMainShift)) AN"+
					"D (tblProdMain.ProdMainMachineLine = ISNULL(@Machine, tblProdMain.ProdMainMachin"+
					"eLine)) AND " + "\r" + "\n" + "                         (tblProdMain.ProdMainItemID IN" + "\r" + "\n" + "         "+
					"                    (SELECT        CAST(ID AS Int) AS Expr1" + "\r" + "\n" + "                   "+
					"            FROM            dbo.CLRFunction_String_to_Table(@Items, '|') AS CLRF"+
					"unction_String_to_Table_1)) AND " + "\r" + "\n" + "                         (tblCustomers_1.Inact"+
					"ive = ISNULL(@InactiveCustomers, tblCustomers_1.Inactive))";
				this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Customer", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shift", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainShift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Machine", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainMachineLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InactiveCustomers", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Items", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[7].Connection = this.Connection;
				this._commandCollection[7].CommandText = "SELECT ProdMainDate, ProdMainID, (SELECT CustomerName FROM tblCustomers WHERE Cus"+
					"tomerID = tblItems_1.ItemCustomerID) AS CustomerName, (SELECT MachineLineName FR"+
					"OM tblMachineLine WHERE MachineLineID = ProdMainMachineLine) AS MachineLine,  Pr"+
					"odMainQuantity, (SELECT ShiftName FROM tblShifts WHERE ShiftID = ProdMainShift) "+
					"AS Shift,  ProdMainTimeStart, ProdMainTimeStop, ItemCode, ItemDescription FROM t"+
					"blProdMain INNER JOIN tblItems AS tblItems_1 ON tblProdMain.ProdMainItemID = tbl"+
					"Items_1.ItemID WHERE (tblProdMain.ProdMainDate BETWEEN ISNULL(@FromDate, tblProd"+
					"Main.ProdMainDate) AND ISNULL(@ToDate, tblProdMain.ProdMainDate)) AND (tblItems_"+
					"1.ItemCustomerID = ISNULL(@Customer, tblItems_1.ItemCustomerID)) AND (tblProdMai"+
					"n.ProdMainShift = ISNULL(@Shift, tblProdMain.ProdMainShift)) AND (tblProdMain.Pr"+
					"odMainMachineLine = ISNULL(@Machine, tblProdMain.ProdMainMachineLine)) AND (tblP"+
					"rodMain.ProdMainItemID = ISNULL(@Item, tblProdMain.ProdMainItemID))";
				this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Customer", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shift", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainShift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Machine", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainMachineLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ProdMainItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.ProductionDataTable GetProduction()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.ProductionDataTable dataTable = new SPG.ProductionDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ProductionDataTable GetProductionByCustomerID(int? CustomerID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				if (CustomerID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)CustomerID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.ProductionDataTable dataTable = new SPG.ProductionDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ProductionDataTable GetProductionByID(int ProductionID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)ProductionID;
				SPG.ProductionDataTable dataTable = new SPG.ProductionDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ProductionDataTable GetProductionByItemID(int? ItemID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				if (ItemID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)ItemID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.ProductionDataTable dataTable = new SPG.ProductionDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ProductionDataTable GetProductionByMachine(int? MachineLine)
			{
				this.Adapter.SelectCommand = this.CommandCollection[4];
				if (MachineLine.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)MachineLine.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.ProductionDataTable dataTable = new SPG.ProductionDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ProductionDataTable GetProductionReport(DateTime? FromDate, DateTime? ToDate, int? Customer, int? Shift, int? Machine, bool? InactiveItems, bool? InactiveCustomers)
			{
				this.Adapter.SelectCommand = this.CommandCollection[5];
				if (FromDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToDateTime(FromDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (ToDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[1].Value = Convert.ToDateTime(ToDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (Customer.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[2].Value = (int)Customer.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (Shift.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[3].Value = (int)Shift.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (Machine.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[4].Value = (int)Machine.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (InactiveItems.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[5].Value = Convert.ToBoolean(InactiveItems.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (InactiveCustomers.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[6].Value = Convert.ToBoolean(InactiveCustomers.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				SPG.ProductionDataTable dataTable = new SPG.ProductionDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ProductionDataTable GetProductionReportByItems(DateTime? FromDate, DateTime? ToDate, int? Customer, int? Shift, int? Machine, bool? InactiveCustomers, string Items)
			{
				this.Adapter.SelectCommand = this.CommandCollection[6];
				if (FromDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToDateTime(FromDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (ToDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[1].Value = Convert.ToDateTime(ToDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (Customer.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[2].Value = (int)Customer.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (Shift.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[3].Value = (int)Shift.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (Machine.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[4].Value = (int)Machine.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (InactiveCustomers.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[5].Value = Convert.ToBoolean(InactiveCustomers.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (Items == null)
				{
					throw new global::System.ArgumentNullException("Items");
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[6].Value = Convert.ToString(Items);
				}
				SPG.ProductionDataTable dataTable = new SPG.ProductionDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ProductionDataTable GetProductionView(DateTime? FromDate, DateTime? ToDate, int? Customer, int? Shift, int? Machine, int? Item)
			{
				this.Adapter.SelectCommand = this.CommandCollection[7];
				if (FromDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToDateTime(FromDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (ToDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[1].Value = Convert.ToDateTime(ToDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (Customer.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[2].Value = (int)Customer.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (Shift.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[3].Value = (int)Shift.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (Machine.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[4].Value = (int)Machine.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (Item.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[5].Value = (int)Item.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				SPG.ProductionDataTable dataTable = new SPG.ProductionDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.ProductionDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "Production");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_ProdMainID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_ProdMainID;
				if (Original_ts == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(int ProdMainID, DateTime? ProdMainDate, int? ProdMainShift, int? ProdMainItemID, string ProdMainLot, float? ProdMainQuantity, int? ProdMainMachineLine, DateTime? ProdMainTimeStart, DateTime? ProdMainTimeStop, float? ProdMainPackers, float? ProdMainOperators, float? ProdMainSupers, int? intMachineSpeed, string strEnteredBy, DateTime? dtmEnteredOn)
			{
				this.Adapter.InsertCommand.Parameters[0].Value = (int)ProdMainID;
				if (ProdMainDate.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = Convert.ToDateTime(ProdMainDate.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (ProdMainShift.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = (int)ProdMainShift.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (ProdMainItemID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = (int)ProdMainItemID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (ProdMainLot == null)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = Convert.ToString(ProdMainLot);
				}
				if (ProdMainQuantity.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = (float)ProdMainQuantity.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (ProdMainMachineLine.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[6].Value = (int)ProdMainMachineLine.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				if (ProdMainTimeStart.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[7].Value = Convert.ToDateTime(ProdMainTimeStart.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				if (ProdMainTimeStop.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[8].Value = Convert.ToDateTime(ProdMainTimeStop.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				if (ProdMainPackers.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[9].Value = (float)ProdMainPackers.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				if (ProdMainOperators.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[10].Value = (float)ProdMainOperators.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				if (ProdMainSupers.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[11].Value = (float)ProdMainSupers.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				if (intMachineSpeed.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[12].Value = (int)intMachineSpeed.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				if (strEnteredBy == null)
				{
					this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[13].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[14].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int ProdMainID, DateTime? ProdMainDate, int? ProdMainShift, int? ProdMainItemID, string ProdMainLot, float? ProdMainQuantity, int? ProdMainMachineLine, DateTime? ProdMainTimeStart, DateTime? ProdMainTimeStop, float? ProdMainPackers, float? ProdMainOperators, float? ProdMainSupers, int? intMachineSpeed, string strEnteredBy, DateTime? dtmEnteredOn, int Original_ProdMainID, byte[] Original_ts)
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = (int)ProdMainID;
				if (ProdMainDate.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = Convert.ToDateTime(ProdMainDate.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (ProdMainShift.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (int)ProdMainShift.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (ProdMainItemID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = (int)ProdMainItemID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (ProdMainLot == null)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = Convert.ToString(ProdMainLot);
				}
				if (ProdMainQuantity.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = (float)ProdMainQuantity.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (ProdMainMachineLine.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = (int)ProdMainMachineLine.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				if (ProdMainTimeStart.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = Convert.ToDateTime(ProdMainTimeStart.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				if (ProdMainTimeStop.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = Convert.ToDateTime(ProdMainTimeStop.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				if (ProdMainPackers.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = (float)ProdMainPackers.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				if (ProdMainOperators.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = (float)ProdMainOperators.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				if (ProdMainSupers.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = (float)ProdMainSupers.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				if (intMachineSpeed.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = (int)intMachineSpeed.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				if (strEnteredBy == null)
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[14].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[15].Value = (int)Original_ProdMainID;
				if (Original_ts == null)
				{
					this.Adapter.UpdateCommand.Parameters[16].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[16].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[17].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(DateTime? ProdMainDate, int? ProdMainShift, int? ProdMainItemID, string ProdMainLot, float? ProdMainQuantity, int? ProdMainMachineLine, DateTime? ProdMainTimeStart, DateTime? ProdMainTimeStop, float? ProdMainPackers, float? ProdMainOperators, float? ProdMainSupers, int? intMachineSpeed, string strEnteredBy, DateTime? dtmEnteredOn, int Original_ProdMainID, byte[] Original_ts)
			{
				return this.Update(Original_ProdMainID, ProdMainDate, ProdMainShift, ProdMainItemID, ProdMainLot, ProdMainQuantity, ProdMainMachineLine, ProdMainTimeStart, ProdMainTimeStop, ProdMainPackers, ProdMainOperators, ProdMainSupers, intMachineSpeed, strEnteredBy, dtmEnteredOn, Original_ProdMainID, Original_ts);
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class ShippingsTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingsTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Shippings";
				tableMapping.ColumnMappings.Add("ShipMainID", "ShipMainID");
				tableMapping.ColumnMappings.Add("ShipMainDate", "ShipMainDate");
				tableMapping.ColumnMappings.Add("ShipMainCarrierID", "ShipMainCarrierID");
				tableMapping.ColumnMappings.Add("ShipMainCustID", "ShipMainCustID");
				tableMapping.ColumnMappings.Add("strEnteredBy", "strEnteredBy");
				tableMapping.ColumnMappings.Add("dtmEnteredOn", "dtmEnteredOn");
				tableMapping.ColumnMappings.Add("strPO", "strPO");
				tableMapping.ColumnMappings.Add("strTrailer", "strTrailer");
				tableMapping.ColumnMappings.Add("sngSkits", "sngSkits");
				tableMapping.ColumnMappings.Add("sngTotalPallets", "sngTotalPallets");
				tableMapping.ColumnMappings.Add("strSeal", "strSeal");
				tableMapping.ColumnMappings.Add("strRoute", "strRoute");
				tableMapping.ColumnMappings.Add("strDeliveryNote", "strDeliveryNote");
				tableMapping.ColumnMappings.Add("ts", "ts");
				tableMapping.ColumnMappings.Add("intDestination", "intDestination");
				tableMapping.ColumnMappings.Add("TotalGrossWeight", "TotalGrossWeight");
				tableMapping.ColumnMappings.Add("Shipper", "Shipper");
				tableMapping.ColumnMappings.Add("Comments", "Comments");
				tableMapping.ColumnMappings.Add("Shift", "Shift");
				tableMapping.ColumnMappings.Add("Freight", "Freight");
				tableMapping.ColumnMappings.Add("DeliveryNoteNumber", "DeliveryNoteNumber");
				tableMapping.ColumnMappings.Add("LoadedBy", "LoadedBy");
				tableMapping.ColumnMappings.Add("CheckedBy", "CheckedBy");
				tableMapping.ColumnMappings.Add("PhysicalCondition", "PhysicalCondition");
				tableMapping.ColumnMappings.Add("LoadCondition", "LoadCondition");
				tableMapping.ColumnMappings.Add("StartTime", "StartTime");
				tableMapping.ColumnMappings.Add("FinishTime", "FinishTime");
				tableMapping.ColumnMappings.Add("Temparature", "Temparature");
				tableMapping.ColumnMappings.Add("ShipMainBOL", "ShipMainBOL");
				tableMapping.ColumnMappings.Add("CorrectPallets", "CorrectPallets");
				tableMapping.ColumnMappings.Add("InsectActivity", "InsectActivity");
				tableMapping.ColumnMappings.Add("ForeignSubstance", "ForeignSubstance");
				tableMapping.ColumnMappings.Add("WheelsChocked", "WheelsChocked");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblShipMain] WHERE (([ShipMainID] = @Original_ShipMainID) AND ((@IsN"+
					"ull_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShipMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblShipMain] ([ShipMainID], [ShipMainDate], [ShipMainCarrierID], [Sh"+
					"ipMainCustID], [strEnteredBy], [dtmEnteredOn], [intDestination], [strPO], [strTr"+
					"ailer], [sngSkits], [sngTotalPallets], [strSeal], [strRoute], [strDeliveryNote],"+
					" [TotalGrossWeight], [Shipper], [Comments], [Shift], [Freight], [DeliveryNoteNum"+
					"ber], [LoadedBy], [CheckedBy], [PhysicalCondition], [LoadCondition], [StartTime]"+
					", [FinishTime], [Temparature], [ShipMainBOL], [CorrectPallets], [InsectActivity]"+
					", [ForeignSubstance], [WheelsChocked]) VALUES (@ShipMainID, @ShipMainDate, @Ship"+
					"MainCarrierID, @ShipMainCustID, @strEnteredBy, @dtmEnteredOn, @intDestination, @"+
					"strPO, @strTrailer, @sngSkits, @sngTotalPallets, @strSeal, @strRoute, @strDelive"+
					"ryNote, @TotalGrossWeight, @Shipper, @Comments, @Shift, @Freight, @DeliveryNoteN"+
					"umber, @LoadedBy, @CheckedBy, @PhysicalCondition, @LoadCondition, @StartTime, @F"+
					"inishTime, @Temparature, @ShipMainBOL, @CorrectPallets, @InsectActivity, @Foreig"+
					"nSubstance, @WheelsChocked);" + "\r" + "\n" + "SELECT ShipMainID, ShipMainDate, ShipMainCarrierID"+
					", ShipMainCustID, strEnteredBy, dtmEnteredOn, intDestination, strPO, strTrailer,"+
					" sngSkits, sngTotalPallets, strSeal, strRoute, strDeliveryNote, ts, TotalGrossWe"+
					"ight, Shipper, Comments, Shift, Freight, DeliveryNoteNumber, LoadedBy, CheckedBy"+
					", PhysicalCondition, LoadCondition, StartTime, FinishTime, Temparature, ShipMain"+
					"BOL, CorrectPallets, InsectActivity, ForeignSubstance, WheelsChocked FROM tblShi"+
					"pMain WHERE (ShipMainID = @ShipMainID)";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipMainDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipMainCarrierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainCarrierID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipMainCustID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainCustID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intDestination", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intDestination", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strPO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strTrailer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strTrailer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngSkits", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngSkits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngTotalPallets", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngTotalPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strSeal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strSeal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strRoute", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strRoute", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strDeliveryNote", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strDeliveryNote", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalGrossWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalGrossWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shipper", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shipper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shift", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Freight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Freight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryNoteNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryNoteNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CheckedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhysicalCondition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhysicalCondition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadCondition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadCondition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Temparature", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Temparature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipMainBOL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainBOL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CorrectPallets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CorrectPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsectActivity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsectActivity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignSubstance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignSubstance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WheelsChocked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WheelsChocked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblShipMain] SET [ShipMainID] = @ShipMainID, [ShipMainDate] = @ShipMainDa"+
					"te, [ShipMainCarrierID] = @ShipMainCarrierID, [ShipMainCustID] = @ShipMainCustID"+
					", [strEnteredBy] = @strEnteredBy, [dtmEnteredOn] = @dtmEnteredOn, [intDestinatio"+
					"n] = @intDestination, [strPO] = @strPO, [strTrailer] = @strTrailer, [sngSkits] ="+
					" @sngSkits, [sngTotalPallets] = @sngTotalPallets, [strSeal] = @strSeal, [strRout"+
					"e] = @strRoute, [strDeliveryNote] = @strDeliveryNote, [TotalGrossWeight] = @Tota"+
					"lGrossWeight, [Shipper] = @Shipper, [Comments] = @Comments, [Shift] = @Shift, [F"+
					"reight] = @Freight, [DeliveryNoteNumber] = @DeliveryNoteNumber, [LoadedBy] = @Lo"+
					"adedBy, [CheckedBy] = @CheckedBy, [PhysicalCondition] = @PhysicalCondition, [Loa"+
					"dCondition] = @LoadCondition, [StartTime] = @StartTime, [FinishTime] = @FinishTi"+
					"me, [Temparature] = @Temparature, [ShipMainBOL] = @ShipMainBOL, [CorrectPallets]"+
					" = @CorrectPallets, [InsectActivity] = @InsectActivity, [ForeignSubstance] = @Fo"+
					"reignSubstance, [WheelsChocked] = @WheelsChocked WHERE (([ShipMainID] = @Origina"+
					"l_ShipMainID) AND ((@IsNull_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)));"+
					"" + "\r" + "\n" + "SELECT ShipMainID, ShipMainDate, ShipMainCarrierID, ShipMainCustID, strEntered"+
					"By, dtmEnteredOn, intDestination, strPO, strTrailer, sngSkits, sngTotalPallets, "+
					"strSeal, strRoute, strDeliveryNote, ts, TotalGrossWeight, Shipper, Comments, Shi"+
					"ft, Freight, DeliveryNoteNumber, LoadedBy, CheckedBy, PhysicalCondition, LoadCon"+
					"dition, StartTime, FinishTime, Temparature, ShipMainBOL, CorrectPallets, InsectA"+
					"ctivity, ForeignSubstance, WheelsChocked FROM tblShipMain WHERE (ShipMainID = @S"+
					"hipMainID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipMainDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipMainCarrierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainCarrierID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipMainCustID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainCustID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intDestination", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intDestination", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strPO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strTrailer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strTrailer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngSkits", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngSkits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngTotalPallets", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngTotalPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strSeal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strSeal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strRoute", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strRoute", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strDeliveryNote", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strDeliveryNote", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalGrossWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalGrossWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shipper", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shipper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shift", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Freight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Freight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryNoteNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryNoteNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CheckedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhysicalCondition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhysicalCondition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadCondition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadCondition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Temparature", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Temparature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipMainBOL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainBOL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CorrectPallets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CorrectPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsectActivity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsectActivity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignSubstance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignSubstance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WheelsChocked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WheelsChocked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShipMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[6];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        ShipMainID, ShipMainDate, ShipMainCarrierID, ShipMainCustID, strEnt"+
					"eredBy, dtmEnteredOn, intDestination, strPO, strTrailer, sngSkits, sngTotalPalle"+
					"ts, strSeal, strRoute, strDeliveryNote, ts, TotalGrossWeight, " + "\r" + "\n" + "                "+
					"         Shipper, Comments, Shift, Freight, DeliveryNoteNumber, LoadedBy, Checke"+
					"dBy, PhysicalCondition, LoadCondition, StartTime, FinishTime, Temparature, ShipM"+
					"ainBOL, CorrectPallets, InsectActivity, " + "\r" + "\n" + "                         ForeignSubsta"+
					"nce, WheelsChocked" + "\r" + "\n" + "FROM            tblShipMain";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT CheckedBy, Comments, CorrectPallets, DeliveryNoteNumber, FinishTime, Forei"+
					"gnSubstance, Freight, InsectActivity, LoadCondition, LoadedBy, PhysicalCondition"+
					", Shift, ShipMainBOL, ShipMainCarrierID, ShipMainCustID, ShipMainDate, ShipMainI"+
					"D, Shipper, StartTime, Temparature, TotalGrossWeight, WheelsChocked, dtmEnteredO"+
					"n, intDestination, sngSkits, sngTotalPallets, strDeliveryNote, strEnteredBy, str"+
					"PO, strRoute, strSeal, strTrailer, ts FROM tblShipMain WHERE (ShipMainCustID = I"+
					"SNULL(@CustomerID, ShipMainCustID)) AND (ShipMainDate BETWEEN ISNULL(@fromDate, "+
					"ShipMainDate) AND ISNULL(@toDate, ShipMainDate))";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainCustID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fromDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@toDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT        MAX(ShipMainBOL) AS Expr1" + "\r" + "\n" + "FROM            tblShipMain";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "SELECT CheckedBy, Comments, CorrectPallets, DeliveryNoteNumber, FinishTime, Forei"+
					"gnSubstance, Freight, InsectActivity, LoadCondition, LoadedBy, PhysicalCondition"+
					", Shift, ShipMainBOL, ShipMainCarrierID, ShipMainCustID, ShipMainDate, ShipMainI"+
					"D, Shipper, StartTime, Temparature, TotalGrossWeight, WheelsChocked, dtmEnteredO"+
					"n, intDestination, sngSkits, sngTotalPallets, strDeliveryNote, strEnteredBy, str"+
					"PO, strRoute, strSeal, strTrailer, ts FROM tblShipMain WHERE (ShipMainID = @Ship"+
					"pingID)";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[4].Connection = this.Connection;
				this._commandCollection[4].CommandText = "SELECT CheckedBy, Comments, CorrectPallets, DeliveryNoteNumber, FinishTime, Forei"+
					"gnSubstance, Freight, InsectActivity, LoadCondition, LoadedBy, PhysicalCondition"+
					", Shift, ShipMainBOL, ShipMainCarrierID, ShipMainCustID, ShipMainDate, ShipMainI"+
					"D, Shipper, StartTime, Temparature, TotalGrossWeight, WheelsChocked, dtmEnteredO"+
					"n, intDestination, sngSkits, sngTotalPallets, strDeliveryNote, strEnteredBy, str"+
					"PO, strRoute, strSeal, strTrailer, ts FROM tblShipMain WHERE (ShipMainCustID = @"+
					"CustomerID)";
				this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainCustID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[5].Connection = this.Connection;
				this._commandCollection[5].CommandText = "SELECT        SUM(sngTotalPallets) AS Expr1" + "\r" + "\n" + "FROM            tblShipMain" + "\r" + "\n" + "WHERE  "+
					"      (ShipMainCustID = @CustomerID)";
				this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainCustID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.ShippingsDataTable GetShippings()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.ShippingsDataTable dataTable = new SPG.ShippingsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ShippingsDataTable GetIDAndBOLByCustomerAndDate(int? CustomerID, DateTime? fromDate, DateTime? toDate)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				if (CustomerID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)CustomerID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (fromDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[1].Value = Convert.ToDateTime(fromDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (toDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[2].Value = Convert.ToDateTime(toDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				SPG.ShippingsDataTable dataTable = new SPG.ShippingsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ShippingsDataTable GetShippingByID(int ShippingID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)ShippingID;
				SPG.ShippingsDataTable dataTable = new SPG.ShippingsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ShippingsDataTable GetShippingsByCustomerID(int? CustomerID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[4];
				if (CustomerID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)CustomerID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.ShippingsDataTable dataTable = new SPG.ShippingsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.ShippingsDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "Shippings");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_ShipMainID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_ShipMainID;
				if (Original_ts == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(int ShipMainID, DateTime? ShipMainDate, int? ShipMainCarrierID, int? ShipMainCustID, string strEnteredBy, DateTime? dtmEnteredOn, int? intDestination, string strPO, string strTrailer, float? sngSkits, float? sngTotalPallets, string strSeal, string strRoute, string strDeliveryNote, double? TotalGrossWeight, bool? Shipper, string Comments, int? Shift, bool? Freight, string DeliveryNoteNumber, int? LoadedBy, int? CheckedBy, int? PhysicalCondition, int? LoadCondition, DateTime? StartTime, DateTime? FinishTime, double? Temparature, int ShipMainBOL, int? CorrectPallets, int? InsectActivity, int? ForeignSubstance, int? WheelsChocked)
			{
				this.Adapter.InsertCommand.Parameters[0].Value = (int)ShipMainID;
				if (ShipMainDate.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = Convert.ToDateTime(ShipMainDate.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (ShipMainCarrierID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = (int)ShipMainCarrierID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (ShipMainCustID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = (int)ShipMainCustID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (strEnteredBy == null)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (intDestination.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[6].Value = (int)intDestination.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				if (strPO == null)
				{
					this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[7].Value = Convert.ToString(strPO);
				}
				if (strTrailer == null)
				{
					this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[8].Value = Convert.ToString(strTrailer);
				}
				if (sngSkits.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[9].Value = (float)sngSkits.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				if (sngTotalPallets.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[10].Value = (float)sngTotalPallets.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				if (strSeal == null)
				{
					this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[11].Value = Convert.ToString(strSeal);
				}
				if (strRoute == null)
				{
					this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[12].Value = Convert.ToString(strRoute);
				}
				if (strDeliveryNote == null)
				{
					this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[13].Value = Convert.ToString(strDeliveryNote);
				}
				if (TotalGrossWeight.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[14].Value = (double)TotalGrossWeight.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
				}
				if (Shipper.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[15].Value = Convert.ToBoolean(Shipper.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
				}
				if (Comments == null)
				{
					this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[16].Value = Convert.ToString(Comments);
				}
				if (Shift.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[17].Value = (int)Shift.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
				}
				if (Freight.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[18].Value = Convert.ToBoolean(Freight.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
				}
				if (DeliveryNoteNumber == null)
				{
					this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[19].Value = Convert.ToString(DeliveryNoteNumber);
				}
				if (LoadedBy.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[20].Value = (int)LoadedBy.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
				}
				if (CheckedBy.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[21].Value = (int)CheckedBy.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
				}
				if (PhysicalCondition.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[22].Value = (int)PhysicalCondition.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
				}
				if (LoadCondition.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[23].Value = (int)LoadCondition.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
				}
				if (StartTime.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[24].Value = Convert.ToDateTime(StartTime.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
				}
				if (FinishTime.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[25].Value = Convert.ToDateTime(FinishTime.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
				}
				if (Temparature.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[26].Value = (double)Temparature.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
				}
				this.Adapter.InsertCommand.Parameters[27].Value = (int)ShipMainBOL;
				if (CorrectPallets.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[28].Value = (int)CorrectPallets.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
				}
				if (InsectActivity.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[29].Value = (int)InsectActivity.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
				}
				if (ForeignSubstance.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[30].Value = (int)ForeignSubstance.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
				}
				if (WheelsChocked.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[31].Value = (int)WheelsChocked.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int ShipMainID, DateTime? ShipMainDate, int? ShipMainCarrierID, int? ShipMainCustID, string strEnteredBy, DateTime? dtmEnteredOn, int? intDestination, string strPO, string strTrailer, float? sngSkits, float? sngTotalPallets, string strSeal, string strRoute, string strDeliveryNote, double? TotalGrossWeight, bool? Shipper, string Comments, int? Shift, bool? Freight, string DeliveryNoteNumber, int? LoadedBy, int? CheckedBy, int? PhysicalCondition, int? LoadCondition, DateTime? StartTime, DateTime? FinishTime, double? Temparature, int ShipMainBOL, int? CorrectPallets, int? InsectActivity, int? ForeignSubstance, int? WheelsChocked, int Original_ShipMainID, byte[] Original_ts)
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = (int)ShipMainID;
				if (ShipMainDate.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = Convert.ToDateTime(ShipMainDate.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (ShipMainCarrierID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (int)ShipMainCarrierID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (ShipMainCustID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = (int)ShipMainCustID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (strEnteredBy == null)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (intDestination.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = (int)intDestination.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				if (strPO == null)
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = Convert.ToString(strPO);
				}
				if (strTrailer == null)
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = Convert.ToString(strTrailer);
				}
				if (sngSkits.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = (float)sngSkits.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				if (sngTotalPallets.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = (float)sngTotalPallets.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				if (strSeal == null)
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = Convert.ToString(strSeal);
				}
				if (strRoute == null)
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = Convert.ToString(strRoute);
				}
				if (strDeliveryNote == null)
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = Convert.ToString(strDeliveryNote);
				}
				if (TotalGrossWeight.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[14].Value = (double)TotalGrossWeight.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
				}
				if (Shipper.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = Convert.ToBoolean(Shipper.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
				}
				if (Comments == null)
				{
					this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[16].Value = Convert.ToString(Comments);
				}
				if (Shift.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[17].Value = (int)Shift.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
				}
				if (Freight.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[18].Value = Convert.ToBoolean(Freight.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
				}
				if (DeliveryNoteNumber == null)
				{
					this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[19].Value = Convert.ToString(DeliveryNoteNumber);
				}
				if (LoadedBy.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[20].Value = (int)LoadedBy.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
				}
				if (CheckedBy.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[21].Value = (int)CheckedBy.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
				}
				if (PhysicalCondition.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[22].Value = (int)PhysicalCondition.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
				}
				if (LoadCondition.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[23].Value = (int)LoadCondition.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
				}
				if (StartTime.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[24].Value = Convert.ToDateTime(StartTime.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
				}
				if (FinishTime.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[25].Value = Convert.ToDateTime(FinishTime.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
				}
				if (Temparature.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[26].Value = (double)Temparature.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[27].Value = (int)ShipMainBOL;
				if (CorrectPallets.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[28].Value = (int)CorrectPallets.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
				}
				if (InsectActivity.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[29].Value = (int)InsectActivity.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
				}
				if (ForeignSubstance.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[30].Value = (int)ForeignSubstance.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
				}
				if (WheelsChocked.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[31].Value = (int)WheelsChocked.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[32].Value = (int)Original_ShipMainID;
				if (Original_ts == null)
				{
					this.Adapter.UpdateCommand.Parameters[33].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[33].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[34].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(DateTime? ShipMainDate, int? ShipMainCarrierID, int? ShipMainCustID, string strEnteredBy, DateTime? dtmEnteredOn, int? intDestination, string strPO, string strTrailer, float? sngSkits, float? sngTotalPallets, string strSeal, string strRoute, string strDeliveryNote, double? TotalGrossWeight, bool? Shipper, string Comments, int? Shift, bool? Freight, string DeliveryNoteNumber, int? LoadedBy, int? CheckedBy, int? PhysicalCondition, int? LoadCondition, DateTime? StartTime, DateTime? FinishTime, double? Temparature, int ShipMainBOL, int? CorrectPallets, int? InsectActivity, int? ForeignSubstance, int? WheelsChocked, int Original_ShipMainID, byte[] Original_ts)
			{
				return this.Update(Original_ShipMainID, ShipMainDate, ShipMainCarrierID, ShipMainCustID, strEnteredBy, dtmEnteredOn, intDestination, strPO, strTrailer, sngSkits, sngTotalPallets, strSeal, strRoute, strDeliveryNote, TotalGrossWeight, Shipper, Comments, Shift, Freight, DeliveryNoteNumber, LoadedBy, CheckedBy, PhysicalCondition, LoadCondition, StartTime, FinishTime, Temparature, ShipMainBOL, CorrectPallets, InsectActivity, ForeignSubstance, WheelsChocked, Original_ShipMainID, Original_ts);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual string GetMaxBOL()
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				object returnValue = null;
				try
				{
					returnValue = command.ExecuteScalar();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				if ((returnValue == null) || (returnValue.GetType() == typeof(global::System.DBNull)))
				{
					return null;
				}
				else
				{
					return (returnValue == null ? null : Convert.ToString(returnValue));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual double? GetTotalPalletsByCustomerID(int? CustomerID)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[5];
				if (CustomerID.HasValue == true)
				{
					command.Parameters[0].Value = (int)CustomerID.Value;
				}
				else
				{
					command.Parameters[0].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				object returnValue = null;
				try
				{
					returnValue = command.ExecuteScalar();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				if ((returnValue == null) || (returnValue.GetType() == typeof(global::System.DBNull)))
				{
					return new double?();
				}
				else
				{
					return new double?(Convert.ToDouble(returnValue));
				}
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class MachineLinesTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public MachineLinesTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "MachineLines";
				tableMapping.ColumnMappings.Add("MachineLineID", "MachineLineID");
				tableMapping.ColumnMappings.Add("MachineLineName", "MachineLineName");
				tableMapping.ColumnMappings.Add("ts", "ts");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblMachineLine] WHERE (([MachineLineID] = @Original_MachineLineID) A"+
					"ND ((@IsNull_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MachineLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineLineID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblMachineLine] ([MachineLineName]) VALUES (@MachineLineName);" + "\r" + "\n" + "SELE"+
					"CT MachineLineID, MachineLineName, ts FROM tblMachineLine WHERE (MachineLineID ="+
					" SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MachineLineName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineLineName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblMachineLine] SET [MachineLineName] = @MachineLineName WHERE (([Machine"+
					"LineID] = @Original_MachineLineID) AND ((@IsNull_ts = 1 AND [ts] IS NULL) OR ([t"+
					"s] = @Original_ts)));" + "\r" + "\n" + "SELECT MachineLineID, MachineLineName, ts FROM tblMachine"+
					"Line WHERE (MachineLineID = @MachineLineID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MachineLineName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineLineName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MachineLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineLineID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MachineLineID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MachineLineID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        MachineLineID, MachineLineName, ts" + "\r" + "\n" + "FROM            tblMachineLine";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT        MachineLineID, MachineLineName, ts" + "\r" + "\n" + "FROM            tblMachineLine" + "\r" + "\n" + "WHERE MachineLineID = @MachineLine";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MachineLine", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MachineLineID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
			public virtual int Fill(SPG.MachineLinesDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.MachineLinesDataTable GetMachineLines()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.MachineLinesDataTable dataTable = new SPG.MachineLinesDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillByID(SPG.MachineLinesDataTable dataTable, int MachineLine)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)MachineLine;
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.MachineLinesDataTable GetMachineLineByID(int MachineLine)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)MachineLine;
				SPG.MachineLinesDataTable dataTable = new SPG.MachineLinesDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.MachineLinesDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "MachineLines");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_MachineLineID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_MachineLineID;
				if (Original_ts == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(string MachineLineName)
			{
				if (MachineLineName == null)
				{
					this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = Convert.ToString(MachineLineName);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(string MachineLineName, int Original_MachineLineID, byte[] Original_ts, int MachineLineID)
			{
				if (MachineLineName == null)
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = Convert.ToString(MachineLineName);
				}
				this.Adapter.UpdateCommand.Parameters[1].Value = (int)Original_MachineLineID;
				if (Original_ts == null)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[3].Value = (byte[])Original_ts;
				}
				this.Adapter.UpdateCommand.Parameters[4].Value = (int)MachineLineID;
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(string MachineLineName, int Original_MachineLineID, byte[] Original_ts)
			{
				return this.Update(MachineLineName, Original_MachineLineID, Original_ts, Original_MachineLineID);
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class ShippingDetailsTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingDetailsTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "ShippingDetails";
				tableMapping.ColumnMappings.Add("ShipDetDetID", "ShipDetDetID");
				tableMapping.ColumnMappings.Add("ShipDetMainID", "ShipDetMainID");
				tableMapping.ColumnMappings.Add("ShipDetItemID", "ShipDetItemID");
				tableMapping.ColumnMappings.Add("ShipDetLot", "ShipDetLot");
				tableMapping.ColumnMappings.Add("ShipDetDetQty", "ShipDetDetQty");
				tableMapping.ColumnMappings.Add("sngPackages", "sngPackages");
				tableMapping.ColumnMappings.Add("sngPallets", "sngPallets");
				tableMapping.ColumnMappings.Add("ts", "ts");
				tableMapping.ColumnMappings.Add("Note", "Note");
				tableMapping.ColumnMappings.Add("ExpirationDate", "ExpirationDate");
				tableMapping.ColumnMappings.Add("FullLPNNumber", "FullLPNNumber");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblShipDet] WHERE (([ShipDetDetID] = @Original_ShipDetDetID) AND ((@"+
					"IsNull_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShipDetDetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDetDetID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblShipDet] ([ShipDetMainID], [ShipDetItemID], [ShipDetLot], [ShipDe"+
					"tDetQty], [sngPackages], [sngPallets], [Note], [ExpirationDate], [FullLPNNumber]"+
					") VALUES (@ShipDetMainID, @ShipDetItemID, @ShipDetLot, @ShipDetDetQty, @sngPacka"+
					"ges, @sngPallets, @Note, @ExpirationDate, @FullLPNNumber);" + "\r" + "\n" + "SELECT ShipDetDetID,"+
					" ShipDetMainID, ShipDetItemID, ShipDetLot, ShipDetDetQty, sngPackages, sngPallet"+
					"s, ts, Note, ExpirationDate, FullLPNNumber FROM tblShipDet WHERE (ShipDetDetID ="+
					" SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipDetMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDetMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipDetItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDetItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipDetLot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDetLot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipDetDetQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDetDetQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngPackages", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngPackages", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngPallets", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Note", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpirationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpirationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullLPNNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FullLPNNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblShipDet] SET [ShipDetMainID] = @ShipDetMainID, [ShipDetItemID] = @Ship"+
					"DetItemID, [ShipDetLot] = @ShipDetLot, [ShipDetDetQty] = @ShipDetDetQty, [sngPac"+
					"kages] = @sngPackages, [sngPallets] = @sngPallets, [Note] = @Note, [ExpirationDa"+
					"te] = @ExpirationDate, [FullLPNNumber] = @FullLPNNumber WHERE (([ShipDetDetID] ="+
					" @Original_ShipDetDetID) AND ((@IsNull_ts = 1 AND [ts] IS NULL) OR ([ts] = @Orig"+
					"inal_ts)));" + "\r" + "\n" + "SELECT ShipDetDetID, ShipDetMainID, ShipDetItemID, ShipDetLot, Ship"+
					"DetDetQty, sngPackages, sngPallets, ts, Note, ExpirationDate, FullLPNNumber FROM"+
					" tblShipDet WHERE (ShipDetDetID = @ShipDetDetID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipDetMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDetMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipDetItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDetItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipDetLot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDetLot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipDetDetQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDetDetQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngPackages", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngPackages", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngPallets", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Note", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpirationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpirationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullLPNNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FullLPNNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShipDetDetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDetDetID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipDetDetID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDetDetID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        ShipDetDetID, ShipDetMainID, ShipDetItemID, ShipDetLot, ShipDetDetQ"+
					"ty, sngPackages, sngPallets, ts, Note, ExpirationDate, FullLPNNumber" + "\r" + "\n" + "FROM      "+
					"      tblShipDet";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT ExpirationDate, FullLPNNumber, Note, ShipDetDetID, ShipDetDetQty, ShipDetI"+
					"temID, ShipDetLot, ShipDetMainID, sngPackages, sngPallets, ts FROM tblShipDet WH"+
					"ERE (ShipDetDetID = @DetailID)";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DetailID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDetDetID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT        ExpirationDate, FullLPNNumber, Note, ShipDetDetID, ShipDetDetQty, S"+
					"hipDetItemID, ShipDetLot, ShipDetMainID, sngPackages, sngPallets, ts" + "\r" + "\n" + "FROM      "+
					"      tblShipDet" + "\r" + "\n" + "WHERE        (ShipDetMainID = @ShippingID)";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDetMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "SELECT        tblShipDet.ShipDetDetID, tblShipDet.ShipDetMainID, tblShipDet.ShipD"+
					"etLot, tblShipDet.ShipDetDetQty, tblShipMain.ShipMainDate, tblShipMain.ShipMainB"+
					"OL, " + "\r" + "\n" + "                         tblShipDet.ExpirationDate, tblShipDet.FullLPNNumb"+
					"er" + "\r" + "\n" + "FROM            tblShipDet INNER JOIN" + "\r" + "\n" + "                         tblShipMain "+
					"ON tblShipDet.ShipDetMainID = tblShipMain.ShipMainID" + "\r" + "\n" + "WHERE        (tblShipDet.S"+
					"hipDetItemID = @ItemID)";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDetItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.ShippingDetailsDataTable GetShippingDetails()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.ShippingDetailsDataTable dataTable = new SPG.ShippingDetailsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ShippingDetailsDataTable GetDetailsByDetailID(int DetailID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)DetailID;
				SPG.ShippingDetailsDataTable dataTable = new SPG.ShippingDetailsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ShippingDetailsDataTable GetDetailsByShippingID(int? ShippingID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				if (ShippingID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)ShippingID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.ShippingDetailsDataTable dataTable = new SPG.ShippingDetailsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ShippingDetailsDataTable GetShippingDetailsByItemID(int? ItemID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				if (ItemID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)ItemID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.ShippingDetailsDataTable dataTable = new SPG.ShippingDetailsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.ShippingDetailsDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "ShippingDetails");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_ShipDetDetID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_ShipDetDetID;
				if (Original_ts == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(int? ShipDetMainID, int? ShipDetItemID, string ShipDetLot, int? ShipDetDetQty, float? sngPackages, float? sngPallets, string Note, DateTime? ExpirationDate, string FullLPNNumber)
			{
				if (ShipDetMainID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[0].Value = (int)ShipDetMainID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (ShipDetItemID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = (int)ShipDetItemID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (ShipDetLot == null)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = Convert.ToString(ShipDetLot);
				}
				if (ShipDetDetQty.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = (int)ShipDetDetQty.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (sngPackages.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = (float)sngPackages.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (sngPallets.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = (float)sngPallets.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (Note == null)
				{
					this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[6].Value = Convert.ToString(Note);
				}
				if (ExpirationDate.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[7].Value = Convert.ToDateTime(ExpirationDate.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				if (FullLPNNumber == null)
				{
					this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[8].Value = Convert.ToString(FullLPNNumber);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int? ShipDetMainID, int? ShipDetItemID, string ShipDetLot, int? ShipDetDetQty, float? sngPackages, float? sngPallets, string Note, DateTime? ExpirationDate, string FullLPNNumber, int Original_ShipDetDetID, byte[] Original_ts, int ShipDetDetID)
			{
				if (ShipDetMainID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = (int)ShipDetMainID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (ShipDetItemID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = (int)ShipDetItemID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (ShipDetLot == null)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = Convert.ToString(ShipDetLot);
				}
				if (ShipDetDetQty.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = (int)ShipDetDetQty.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (sngPackages.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = (float)sngPackages.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (sngPallets.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = (float)sngPallets.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (Note == null)
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = Convert.ToString(Note);
				}
				if (ExpirationDate.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = Convert.ToDateTime(ExpirationDate.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				if (FullLPNNumber == null)
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = Convert.ToString(FullLPNNumber);
				}
				this.Adapter.UpdateCommand.Parameters[9].Value = (int)Original_ShipDetDetID;
				if (Original_ts == null)
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[11].Value = (byte[])Original_ts;
				}
				this.Adapter.UpdateCommand.Parameters[12].Value = (int)ShipDetDetID;
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int? ShipDetMainID, int? ShipDetItemID, string ShipDetLot, int? ShipDetDetQty, float? sngPackages, float? sngPallets, string Note, DateTime? ExpirationDate, string FullLPNNumber, int Original_ShipDetDetID, byte[] Original_ts)
			{
				return this.Update(ShipDetMainID, ShipDetItemID, ShipDetLot, ShipDetDetQty, sngPackages, sngPallets, Note, ExpirationDate, FullLPNNumber, Original_ShipDetDetID, Original_ts, Original_ShipDetDetID);
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class BOMTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public BOMTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "BOM";
				tableMapping.ColumnMappings.Add("BOMID", "BOMID");
				tableMapping.ColumnMappings.Add("BOMRawMatID", "BOMRawMatID");
				tableMapping.ColumnMappings.Add("BOMFiniGoodID", "BOMFiniGoodID");
				tableMapping.ColumnMappings.Add("ts", "ts");
				tableMapping.ColumnMappings.Add("BOMQuantity", "BOMQuantity");
				tableMapping.ColumnMappings.Add("ScrapFactor", "ScrapFactor");
				tableMapping.ColumnMappings.Add("BOMRawMatCode", "BOMRawMatCode");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblBOMs] WHERE (([BOMID] = @Original_BOMID) AND ((@IsNull_ts = 1 AND"+
					" [ts] IS NULL) OR ([ts] = @Original_ts)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOMID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblBOMs] ([BOMRawMatID], [BOMFiniGoodID], [BOMQuantity], [ScrapFacto"+
					"r]) VALUES (@BOMRawMatID, @BOMFiniGoodID, @BOMQuantity, @ScrapFactor);" + "\r" + "\n" + "SELECT B"+
					"OMID, BOMRawMatID, BOMFiniGoodID, ts, BOMQuantity, ScrapFactor, (SELECT ItemCode"+
					" FROM tblItems WHERE (ItemID = tblBOMs.BOMRawMatID)) AS BOMRawMatCode FROM tblBO"+
					"Ms WHERE (BOMID = SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMRawMatID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRawMatID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMFiniGoodID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMFiniGoodID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMQuantity", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScrapFactor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScrapFactor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblBOMs] SET [BOMRawMatID] = @BOMRawMatID, [BOMFiniGoodID] = @BOMFiniGood"+
					"ID, [BOMQuantity] = @BOMQuantity, [ScrapFactor] = @ScrapFactor WHERE (([BOMID] ="+
					" @Original_BOMID) AND ((@IsNull_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts"+
					")));" + "\r" + "\n" + "SELECT BOMID, BOMRawMatID, BOMFiniGoodID, ts, BOMQuantity, ScrapFactor, (S"+
					"ELECT ItemCode FROM tblItems WHERE (ItemID = tblBOMs.BOMRawMatID)) AS BOMRawMatC"+
					"ode FROM tblBOMs WHERE (BOMID = @BOMID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMRawMatID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRawMatID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMFiniGoodID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMFiniGoodID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMQuantity", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScrapFactor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScrapFactor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOMID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BOMID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        BOMID, BOMRawMatID, BOMFiniGoodID, ts, BOMQuantity, ScrapFactor," + "\r" + "\n" + " "+
					"                            (SELECT        ItemCode" + "\r" + "\n" + "                           "+
					"    FROM            tblItems" + "\r" + "\n" + "                               WHERE        (ItemI"+
					"D = tblBOMs.BOMRawMatID)) AS BOMRawMatCode" + "\r" + "\n" + "FROM            tblBOMs";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "DELETE FROM tblBOMs" + "\r" + "\n" + "WHERE        (BOMFiniGoodID = @FGItemID)";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FGItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BOMFiniGoodID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT BOMFiniGoodID, BOMID, BOMQuantity, BOMRawMatID, ScrapFactor, ts FROM tblBO"+
					"Ms WHERE (BOMID = @bomID)";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bomID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BOMID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "SELECT BOMFiniGoodID, BOMID, BOMQuantity, BOMRawMatID, ScrapFactor, ts," + "\r" + "\n" + "        "+
					"                     (SELECT        ItemCode" + "\r" + "\n" + "                               FRO"+
					"M            tblItems" + "\r" + "\n" + "                               WHERE        (ItemID = tbl"+
					"BOMs.BOMRawMatID)) AS BOMRawMatCode FROM tblBOMs WHERE (BOMFiniGoodID = @ItemID)"+
					"";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BOMFiniGoodID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
			public virtual int Fill(SPG.BOMDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.BOMDataTable GetItemBOM()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.BOMDataTable dataTable = new SPG.BOMDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillByBomID(SPG.BOMDataTable dataTable, int bomID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)bomID;
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.BOMDataTable GetBomByBomID(int bomID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)bomID;
				SPG.BOMDataTable dataTable = new SPG.BOMDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillByFGItemID(SPG.BOMDataTable dataTable, int? ItemID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				if (ItemID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)ItemID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.BOMDataTable GetBOMByFGItemID(int? ItemID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				if (ItemID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)ItemID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.BOMDataTable dataTable = new SPG.BOMDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.BOMDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "BOM");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_BOMID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_BOMID;
				if (Original_ts == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(int? BOMRawMatID, int? BOMFiniGoodID, float? BOMQuantity, double? ScrapFactor)
			{
				if (BOMRawMatID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[0].Value = (int)BOMRawMatID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (BOMFiniGoodID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = (int)BOMFiniGoodID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (BOMQuantity.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = (float)BOMQuantity.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (ScrapFactor.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = (double)ScrapFactor.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int? BOMRawMatID, int? BOMFiniGoodID, float? BOMQuantity, double? ScrapFactor, int Original_BOMID, byte[] Original_ts, int BOMID)
			{
				if (BOMRawMatID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = (int)BOMRawMatID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (BOMFiniGoodID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = (int)BOMFiniGoodID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (BOMQuantity.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (float)BOMQuantity.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (ScrapFactor.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = (double)ScrapFactor.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[4].Value = (int)Original_BOMID;
				if (Original_ts == null)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[6].Value = (byte[])Original_ts;
				}
				this.Adapter.UpdateCommand.Parameters[7].Value = (int)BOMID;
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int? BOMRawMatID, int? BOMFiniGoodID, float? BOMQuantity, double? ScrapFactor, int Original_BOMID, byte[] Original_ts)
			{
				return this.Update(BOMRawMatID, BOMFiniGoodID, BOMQuantity, ScrapFactor, Original_BOMID, Original_ts, Original_BOMID);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
			public virtual int DeleteBOMByFGItemID(int? FGItemID)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
				if (FGItemID.HasValue == true)
				{
					command.Parameters[0].Value = (int)FGItemID.Value;
				}
				else
				{
					command.Parameters[0].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				int returnValue = 0;
				try
				{
					returnValue = command.ExecuteNonQuery();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				return returnValue;
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class ShiftsTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShiftsTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Shifts";
				tableMapping.ColumnMappings.Add("ShiftID", "ShiftID");
				tableMapping.ColumnMappings.Add("ShiftName", "ShiftName");
				tableMapping.ColumnMappings.Add("ts", "ts");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblShifts] WHERE (([ShiftID] = @Original_ShiftID) AND ((@IsNull_ts ="+
					" 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShiftID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblShifts] ([ShiftName]) VALUES (@ShiftName);" + "\r" + "\n" + "SELECT ShiftID, Shift"+
					"Name, ts FROM tblShifts WHERE (ShiftID = SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShiftName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblShifts] SET [ShiftName] = @ShiftName WHERE (([ShiftID] = @Original_Shi"+
					"ftID) AND ((@IsNull_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)));" + "\r" + "\n" + "SELECT"+
					" ShiftID, ShiftName, ts FROM tblShifts WHERE (ShiftID = @ShiftID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShiftName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShiftID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShiftID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        ShiftID, ShiftName, ts" + "\r" + "\n" + "FROM            tblShifts";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT        ShiftID, ShiftName, ts" + "\r" + "\n" + "FROM            tblShifts" + "\r" + "\n" + "WHERE ShiftID = "+
					"@ShiftID";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShiftID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
			public virtual int Fill(SPG.ShiftsDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.ShiftsDataTable GetShifts()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.ShiftsDataTable dataTable = new SPG.ShiftsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillByID(SPG.ShiftsDataTable dataTable, int ShiftID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)ShiftID;
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ShiftsDataTable GetShiftByID(int ShiftID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)ShiftID;
				SPG.ShiftsDataTable dataTable = new SPG.ShiftsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.ShiftsDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "Shifts");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_ShiftID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_ShiftID;
				if (Original_ts == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(string ShiftName)
			{
				if (ShiftName == null)
				{
					this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = Convert.ToString(ShiftName);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(string ShiftName, int Original_ShiftID, byte[] Original_ts, int ShiftID)
			{
				if (ShiftName == null)
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = Convert.ToString(ShiftName);
				}
				this.Adapter.UpdateCommand.Parameters[1].Value = (int)Original_ShiftID;
				if (Original_ts == null)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[3].Value = (byte[])Original_ts;
				}
				this.Adapter.UpdateCommand.Parameters[4].Value = (int)ShiftID;
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(string ShiftName, int Original_ShiftID, byte[] Original_ts)
			{
				return this.Update(ShiftName, Original_ShiftID, Original_ts, Original_ShiftID);
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class CarriersTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CarriersTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Carriers";
				tableMapping.ColumnMappings.Add("CarrierID", "CarrierID");
				tableMapping.ColumnMappings.Add("CarrierName", "CarrierName");
				tableMapping.ColumnMappings.Add("ts", "ts");
				tableMapping.ColumnMappings.Add("ContactFirstName", "ContactFirstName");
				tableMapping.ColumnMappings.Add("ContactLastName", "ContactLastName");
				tableMapping.ColumnMappings.Add("Address", "Address");
				tableMapping.ColumnMappings.Add("City", "City");
				tableMapping.ColumnMappings.Add("State", "State");
				tableMapping.ColumnMappings.Add("Postal", "Postal");
				tableMapping.ColumnMappings.Add("Phone", "Phone");
				tableMapping.ColumnMappings.Add("Email", "Email");
				tableMapping.ColumnMappings.Add("Fax", "Fax");
				tableMapping.ColumnMappings.Add("Note", "Note");
				tableMapping.ColumnMappings.Add("EnteredBy", "EnteredBy");
				tableMapping.ColumnMappings.Add("EnteredOn", "EnteredOn");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblCarriers] WHERE (([CarrierID] = @Original_CarrierID) AND ((@IsNul"+
					"l_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarrierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarrierID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblCarriers] ([CarrierID], [CarrierName], [ContactFirstName], [Conta"+
					"ctLastName], [Address], [City], [State], [Postal], [Phone], [Email], [Fax], [Not"+
					"e], [EnteredBy], [EnteredOn]) VALUES (@CarrierID, @CarrierName, @ContactFirstNam"+
					"e, @ContactLastName, @Address, @City, @State, @Postal, @Phone, @Email, @Fax, @No"+
					"te, @EnteredBy, @EnteredOn);" + "\r" + "\n" + "SELECT CarrierID, CarrierName, ts, ContactFirstNam"+
					"e, ContactLastName, Address, City, State, Postal, Phone, Email, Fax, Note, Enter"+
					"edBy, EnteredOn FROM tblCarriers WHERE (CarrierID = @CarrierID)";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarrierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarrierID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarrierName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarrierName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactFirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactFirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactLastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactLastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Postal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Postal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fax", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Note", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblCarriers] SET [CarrierID] = @CarrierID, [CarrierName] = @CarrierName, "+
					"[ContactFirstName] = @ContactFirstName, [ContactLastName] = @ContactLastName, [A"+
					"ddress] = @Address, [City] = @City, [State] = @State, [Postal] = @Postal, [Phone"+
					"] = @Phone, [Email] = @Email, [Fax] = @Fax, [Note] = @Note, [EnteredBy] = @Enter"+
					"edBy, [EnteredOn] = @EnteredOn WHERE (([CarrierID] = @Original_CarrierID) AND (("+
					"@IsNull_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)));" + "\r" + "\n" + "SELECT CarrierID, "+
					"CarrierName, ts, ContactFirstName, ContactLastName, Address, City, State, Postal"+
					", Phone, Email, Fax, Note, EnteredBy, EnteredOn FROM tblCarriers WHERE (CarrierI"+
					"D = @CarrierID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarrierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarrierID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarrierName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarrierName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactFirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactFirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactLastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactLastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Postal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Postal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fax", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Note", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarrierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarrierID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        CarrierID, CarrierName, ts, ContactFirstName, ContactLastName, Addr"+
					"ess, City, State, Postal, Phone, Email, Fax, Note, EnteredBy, EnteredOn" + "\r" + "\n" + "FROM   "+
					"         tblCarriers";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT Address, CarrierID, CarrierName, City, ContactFirstName, ContactLastName, "+
					"Email, EnteredBy, EnteredOn, Fax, Note, Phone, Postal, State, ts FROM tblCarrier"+
					"s WHERE (CarrierID = @CarrierID)";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarrierID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CarrierID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT Address, CarrierID, CarrierName, City, ContactFirstName, ContactLastName, "+
					"Email, EnteredBy, EnteredOn, Fax, Note, Phone, Postal, State, ts FROM tblCarrier"+
					"s";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
			public virtual int Fill(SPG.CarriersDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.CarriersDataTable GetCarriers()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.CarriersDataTable dataTable = new SPG.CarriersDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillByID(SPG.CarriersDataTable dataTable, int CarrierID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)CarrierID;
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.CarriersDataTable GetCarrierByID(int CarrierID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)CarrierID;
				SPG.CarriersDataTable dataTable = new SPG.CarriersDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillIDAndnNames(SPG.CarriersDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.CarriersDataTable GetCarrierIDAndNames()
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				SPG.CarriersDataTable dataTable = new SPG.CarriersDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.CarriersDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "Carriers");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_CarrierID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_CarrierID;
				if (Original_ts == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(int CarrierID, string CarrierName, string ContactFirstName, string ContactLastName, string Address, string City, string State, string Postal, string Phone, string Email, string Fax, string Note, string EnteredBy, DateTime? EnteredOn)
			{
				this.Adapter.InsertCommand.Parameters[0].Value = (int)CarrierID;
				if (CarrierName == null)
				{
					throw new global::System.ArgumentNullException("CarrierName");
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = Convert.ToString(CarrierName);
				}
				if (ContactFirstName == null)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = Convert.ToString(ContactFirstName);
				}
				if (ContactLastName == null)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = Convert.ToString(ContactLastName);
				}
				if (Address == null)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = Convert.ToString(Address);
				}
				if (City == null)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = Convert.ToString(City);
				}
				if (State == null)
				{
					this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[6].Value = Convert.ToString(State);
				}
				if (Postal == null)
				{
					this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[7].Value = Convert.ToString(Postal);
				}
				if (Phone == null)
				{
					this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[8].Value = Convert.ToString(Phone);
				}
				if (Email == null)
				{
					this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[9].Value = Convert.ToString(Email);
				}
				if (Fax == null)
				{
					this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[10].Value = Convert.ToString(Fax);
				}
				if (Note == null)
				{
					this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[11].Value = Convert.ToString(Note);
				}
				if (EnteredBy == null)
				{
					this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[12].Value = Convert.ToString(EnteredBy);
				}
				if (EnteredOn.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[13].Value = Convert.ToDateTime(EnteredOn.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int CarrierID, string CarrierName, string ContactFirstName, string ContactLastName, string Address, string City, string State, string Postal, string Phone, string Email, string Fax, string Note, string EnteredBy, DateTime? EnteredOn, int Original_CarrierID, byte[] Original_ts)
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = (int)CarrierID;
				if (CarrierName == null)
				{
					throw new global::System.ArgumentNullException("CarrierName");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = Convert.ToString(CarrierName);
				}
				if (ContactFirstName == null)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = Convert.ToString(ContactFirstName);
				}
				if (ContactLastName == null)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = Convert.ToString(ContactLastName);
				}
				if (Address == null)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = Convert.ToString(Address);
				}
				if (City == null)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = Convert.ToString(City);
				}
				if (State == null)
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = Convert.ToString(State);
				}
				if (Postal == null)
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = Convert.ToString(Postal);
				}
				if (Phone == null)
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = Convert.ToString(Phone);
				}
				if (Email == null)
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = Convert.ToString(Email);
				}
				if (Fax == null)
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = Convert.ToString(Fax);
				}
				if (Note == null)
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = Convert.ToString(Note);
				}
				if (EnteredBy == null)
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = Convert.ToString(EnteredBy);
				}
				if (EnteredOn.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = Convert.ToDateTime(EnteredOn.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[14].Value = (int)Original_CarrierID;
				if (Original_ts == null)
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[16].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(string CarrierName, string ContactFirstName, string ContactLastName, string Address, string City, string State, string Postal, string Phone, string Email, string Fax, string Note, string EnteredBy, DateTime? EnteredOn, int Original_CarrierID, byte[] Original_ts)
			{
				return this.Update(Original_CarrierID, CarrierName, ContactFirstName, ContactLastName, Address, City, State, Postal, Phone, Email, Fax, Note, EnteredBy, EnteredOn, Original_CarrierID, Original_ts);
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class CompanySettingsTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public CompanySettingsTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "CompanySettings";
				tableMapping.ColumnMappings.Add("PK_ID", "PK_ID");
				tableMapping.ColumnMappings.Add("dblPackersPay", "dblPackersPay");
				tableMapping.ColumnMappings.Add("dblOperatorsPay", "dblOperatorsPay");
				tableMapping.ColumnMappings.Add("dblSupersPay", "dblSupersPay");
				tableMapping.ColumnMappings.Add("intMinPerHour", "intMinPerHour");
				tableMapping.ColumnMappings.Add("ts", "ts");
				tableMapping.ColumnMappings.Add("UniversalCustomer", "UniversalCustomer");
				tableMapping.ColumnMappings.Add("dbVersion", "dbVersion");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblCompanySettings] WHERE (([PK_ID] = @Original_PK_ID) AND ([ts] = @"+
					"Original_ts))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblCompanySettings] ([dblPackersPay], [dblOperatorsPay], [dblSupersP"+
					"ay], [intMinPerHour], [UniversalCustomer], [dbVersion]) VALUES (@dblPackersPay, "+
					"@dblOperatorsPay, @dblSupersPay, @intMinPerHour, @UniversalCustomer, @dbVersion)"+
					";" + "\r" + "\n" + "SELECT PK_ID, dblPackersPay, dblOperatorsPay, dblSupersPay, intMinPerHour, ts"+
					", UniversalCustomer, dbVersion FROM tblCompanySettings WHERE (PK_ID = SCOPE_IDEN"+
					"TITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblPackersPay", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblPackersPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblOperatorsPay", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblOperatorsPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblSupersPay", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblSupersPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intMinPerHour", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intMinPerHour", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UniversalCustomer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniversalCustomer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dbVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dbVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblCompanySettings] SET [dblPackersPay] = @dblPackersPay, [dblOperatorsPa"+
					"y] = @dblOperatorsPay, [dblSupersPay] = @dblSupersPay, [intMinPerHour] = @intMin"+
					"PerHour, [UniversalCustomer] = @UniversalCustomer, [dbVersion] = @dbVersion WHER"+
					"E (([PK_ID] = @Original_PK_ID) AND ([ts] = @Original_ts));" + "\r" + "\n" + "SELECT PK_ID, dblPac"+
					"kersPay, dblOperatorsPay, dblSupersPay, intMinPerHour, ts, UniversalCustomer, db"+
					"Version FROM tblCompanySettings WHERE (PK_ID = @PK_ID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblPackersPay", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblPackersPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblOperatorsPay", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblOperatorsPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dblSupersPay", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dblSupersPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intMinPerHour", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intMinPerHour", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UniversalCustomer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniversalCustomer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dbVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dbVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PK_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        PK_ID, dblPackersPay, dblOperatorsPay, dblSupersPay, intMinPerHour,"+
					" ts, UniversalCustomer, dbVersion" + "\r" + "\n" + "FROM            tblCompanySettings";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT        dbVersion" + "\r" + "\n" + "FROM            tblCompanySettings" + "\r" + "\n" + "WHERE        (PK_ID "+
					"= 1)";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT        UniversalCustomer" + "\r" + "\n" + "FROM            tblCompanySettings" + "\r" + "\n" + "WHERE       "+
					" (PK_ID = 1)";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "UPDATE [tblCompanySettings] " + "\r" + "\n" + "SET [dbVersion] = @dbVersion " + "\r" + "\n" + "WHERE [PK_ID] = 1";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dbVersion", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "dbVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
			public virtual int FillCompanySettings(SPG.CompanySettingsDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.CompanySettingsDataTable GetCompanySettings()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.CompanySettingsDataTable dataTable = new SPG.CompanySettingsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.CompanySettingsDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "CompanySettings");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_PK_ID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_PK_ID;
				if (Original_ts == null)
				{
					throw new global::System.ArgumentNullException("Original_ts");
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(float? dblPackersPay, float? dblOperatorsPay, float? dblSupersPay, short? intMinPerHour, int? UniversalCustomer, string dbVersion)
			{
				if (dblPackersPay.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[0].Value = (float)dblPackersPay.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (dblOperatorsPay.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = (float)dblOperatorsPay.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (dblSupersPay.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = (float)dblSupersPay.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (intMinPerHour.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = (short)intMinPerHour.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (UniversalCustomer.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = (int)UniversalCustomer.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (dbVersion == null)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = Convert.ToString(dbVersion);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(float? dblPackersPay, float? dblOperatorsPay, float? dblSupersPay, short? intMinPerHour, int? UniversalCustomer, string dbVersion, int Original_PK_ID, byte[] Original_ts, int PK_ID)
			{
				if (dblPackersPay.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = (float)dblPackersPay.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (dblOperatorsPay.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = (float)dblOperatorsPay.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (dblSupersPay.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (float)dblSupersPay.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (intMinPerHour.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = (short)intMinPerHour.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (UniversalCustomer.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = (int)UniversalCustomer.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (dbVersion == null)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = Convert.ToString(dbVersion);
				}
				this.Adapter.UpdateCommand.Parameters[6].Value = (int)Original_PK_ID;
				if (Original_ts == null)
				{
					throw new global::System.ArgumentNullException("Original_ts");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = (byte[])Original_ts;
				}
				this.Adapter.UpdateCommand.Parameters[8].Value = (int)PK_ID;
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(float? dblPackersPay, float? dblOperatorsPay, float? dblSupersPay, short? intMinPerHour, int? UniversalCustomer, string dbVersion, int Original_PK_ID, byte[] Original_ts)
			{
				return this.Update(dblPackersPay, dblOperatorsPay, dblSupersPay, intMinPerHour, UniversalCustomer, dbVersion, Original_PK_ID, Original_ts, Original_PK_ID);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual string GetDBVersion()
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				object returnValue = null;
				try
				{
					returnValue = command.ExecuteScalar();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				if ((returnValue == null) || (returnValue.GetType() == typeof(global::System.DBNull)))
				{
					return null;
				}
				else
				{
					return (returnValue == null ? null : Convert.ToString(returnValue));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int? GetUniversalCustomer()
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				object returnValue = null;
				try
				{
					returnValue = command.ExecuteScalar();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				if ((returnValue == null) || (returnValue.GetType() == typeof(global::System.DBNull)))
				{
					return new int?();
				}
				else
				{
					return new int?(Convert.ToInt32(returnValue));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
			public virtual int SetDBVersion(string dbVersion)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
				if (dbVersion == null)
				{
					command.Parameters[0].Value = global::System.DBNull.Value;
				}
				else
				{
					command.Parameters[0].Value = Convert.ToString(dbVersion);
				}
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				int returnValue = 0;
				try
				{
					returnValue = command.ExecuteNonQuery();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				return returnValue;
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class ShippingAddressesTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingAddressesTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "ShippingAddresses";
				tableMapping.ColumnMappings.Add("AddressID", "AddressID");
				tableMapping.ColumnMappings.Add("ShippingName", "ShippingName");
				tableMapping.ColumnMappings.Add("ContactFirstName", "ContactFirstName");
				tableMapping.ColumnMappings.Add("ContactLastName", "ContactLastName");
				tableMapping.ColumnMappings.Add("ShippingAddress", "ShippingAddress");
				tableMapping.ColumnMappings.Add("ShippingCity", "ShippingCity");
				tableMapping.ColumnMappings.Add("ShippingState", "ShippingState");
				tableMapping.ColumnMappings.Add("ShippingPostal", "ShippingPostal");
				tableMapping.ColumnMappings.Add("ShippingPhone", "ShippingPhone");
				tableMapping.ColumnMappings.Add("ShippingEmail", "ShippingEmail");
				tableMapping.ColumnMappings.Add("ShippingFax", "ShippingFax");
				tableMapping.ColumnMappings.Add("ShippingNote", "ShippingNote");
				tableMapping.ColumnMappings.Add("strEnteredBy", "strEnteredBy");
				tableMapping.ColumnMappings.Add("dtmEnteredOn", "dtmEnteredOn");
				tableMapping.ColumnMappings.Add("ts", "ts");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblShippingAddresses] WHERE (([AddressID] = @Original_AddressID) AND"+
					" ((@IsNull_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AddressID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblShippingAddresses] ([AddressID], [ShippingName], [ContactFirstNam"+
					"e], [ContactLastName], [ShippingAddress], [ShippingCity], [ShippingState], [Ship"+
					"pingPostal], [ShippingPhone], [ShippingEmail], [ShippingFax], [ShippingNote], [s"+
					"trEnteredBy], [dtmEnteredOn]) VALUES (@AddressID, @ShippingName, @ContactFirstNa"+
					"me, @ContactLastName, @ShippingAddress, @ShippingCity, @ShippingState, @Shipping"+
					"Postal, @ShippingPhone, @ShippingEmail, @ShippingFax, @ShippingNote, @strEntered"+
					"By, @dtmEnteredOn);" + "\r" + "\n" + "SELECT AddressID, ShippingName, ContactFirstName, ContactLa"+
					"stName, ShippingAddress, ShippingCity, ShippingState, ShippingPostal, ShippingPh"+
					"one, ShippingEmail, ShippingFax, ShippingNote, strEnteredBy, dtmEnteredOn, ts FR"+
					"OM tblShippingAddresses WHERE (AddressID = @AddressID)";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AddressID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactFirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactFirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactLastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactLastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingCity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingCity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingPostal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingPostal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingPhone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingEmail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingFax", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingNote", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingNote", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblShippingAddresses] SET [AddressID] = @AddressID, [ShippingName] = @Shi"+
					"ppingName, [ContactFirstName] = @ContactFirstName, [ContactLastName] = @ContactL"+
					"astName, [ShippingAddress] = @ShippingAddress, [ShippingCity] = @ShippingCity, ["+
					"ShippingState] = @ShippingState, [ShippingPostal] = @ShippingPostal, [ShippingPh"+
					"one] = @ShippingPhone, [ShippingEmail] = @ShippingEmail, [ShippingFax] = @Shippi"+
					"ngFax, [ShippingNote] = @ShippingNote, [strEnteredBy] = @strEnteredBy, [dtmEnter"+
					"edOn] = @dtmEnteredOn WHERE (([AddressID] = @Original_AddressID) AND ((@IsNull_t"+
					"s = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)));" + "\r" + "\n" + "SELECT AddressID, ShippingN"+
					"ame, ContactFirstName, ContactLastName, ShippingAddress, ShippingCity, ShippingS"+
					"tate, ShippingPostal, ShippingPhone, ShippingEmail, ShippingFax, ShippingNote, s"+
					"trEnteredBy, dtmEnteredOn, ts FROM tblShippingAddresses WHERE (AddressID = @Addr"+
					"essID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AddressID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactFirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactFirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactLastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactLastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingCity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingCity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingPostal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingPostal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingPhone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingEmail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingFax", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingNote", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingNote", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AddressID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AddressID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        AddressID, ShippingName, ContactFirstName, ContactLastName, Shippin"+
					"gAddress, ShippingCity, ShippingState, ShippingPostal, ShippingPhone, " + "\r" + "\n" + "        "+
					"                 ShippingEmail, ShippingFax, ShippingNote, strEnteredBy, dtmEnte"+
					"redOn, ts" + "\r" + "\n" + "FROM            tblShippingAddresses";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT       addressid, ShippingName, ContactFirstName, ContactLastName, Shipping"+
					"Address, ShippingCity, ShippingState, ShippingPostal, ShippingPhone" + "\r" + "\n" + "FROM       "+
					"     tblShippingAddresses" + "\r" + "\n" + "WHERE AddressID = @AddressID";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AddressID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AddressID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT        AddressID, ShippingName" + "\r" + "\n" + "FROM            tblShippingAddresses" + "\r" + "\n" + "ORDE"+
					"R BY ShippingName";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "SELECT        AddressID, ShippingName, ContactFirstName, ContactLastName, Shippin"+
					"gAddress, ShippingCity, ShippingState, ShippingPostal, ShippingPhone, " + "\r" + "\n" + "        "+
					"                 ShippingEmail, ShippingFax, ShippingNote, strEnteredBy, dtmEnte"+
					"redOn, ts" + "\r" + "\n" + "FROM            tblShippingAddresses" + "\r" + "\n" + "WHERE AddressID = @AddressID";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AddressID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AddressID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
			public virtual int Fill(SPG.ShippingAddressesDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.ShippingAddressesDataTable GetShippingAddresses()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.ShippingAddressesDataTable dataTable = new SPG.ShippingAddressesDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillAddressInfoByID(SPG.ShippingAddressesDataTable dataTable, int AddressID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)AddressID;
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ShippingAddressesDataTable GetAddressInfoByID(int AddressID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)AddressID;
				SPG.ShippingAddressesDataTable dataTable = new SPG.ShippingAddressesDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillAddressNameAndIDs(SPG.ShippingAddressesDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ShippingAddressesDataTable GetAddressNameAndIDs()
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				SPG.ShippingAddressesDataTable dataTable = new SPG.ShippingAddressesDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillByID(SPG.ShippingAddressesDataTable dataTable, int AddressID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)AddressID;
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ShippingAddressesDataTable GetAddressByID(int AddressID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)AddressID;
				SPG.ShippingAddressesDataTable dataTable = new SPG.ShippingAddressesDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.ShippingAddressesDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "ShippingAddresses");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_AddressID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_AddressID;
				if (Original_ts == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(int AddressID, string ShippingName, string ContactFirstName, string ContactLastName, string ShippingAddress, string ShippingCity, string ShippingState, string ShippingPostal, string ShippingPhone, string ShippingEmail, string ShippingFax, string ShippingNote, string strEnteredBy, DateTime? dtmEnteredOn)
			{
				this.Adapter.InsertCommand.Parameters[0].Value = (int)AddressID;
				if (ShippingName == null)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = Convert.ToString(ShippingName);
				}
				if (ContactFirstName == null)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = Convert.ToString(ContactFirstName);
				}
				if (ContactLastName == null)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = Convert.ToString(ContactLastName);
				}
				if (ShippingAddress == null)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = Convert.ToString(ShippingAddress);
				}
				if (ShippingCity == null)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = Convert.ToString(ShippingCity);
				}
				if (ShippingState == null)
				{
					this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[6].Value = Convert.ToString(ShippingState);
				}
				if (ShippingPostal == null)
				{
					this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[7].Value = Convert.ToString(ShippingPostal);
				}
				if (ShippingPhone == null)
				{
					this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[8].Value = Convert.ToString(ShippingPhone);
				}
				if (ShippingEmail == null)
				{
					this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[9].Value = Convert.ToString(ShippingEmail);
				}
				if (ShippingFax == null)
				{
					this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[10].Value = Convert.ToString(ShippingFax);
				}
				if (ShippingNote == null)
				{
					this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[11].Value = Convert.ToString(ShippingNote);
				}
				if (strEnteredBy == null)
				{
					this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[12].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[13].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int AddressID, string ShippingName, string ContactFirstName, string ContactLastName, string ShippingAddress, string ShippingCity, string ShippingState, string ShippingPostal, string ShippingPhone, string ShippingEmail, string ShippingFax, string ShippingNote, string strEnteredBy, DateTime? dtmEnteredOn, int Original_AddressID, byte[] Original_ts)
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = (int)AddressID;
				if (ShippingName == null)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = Convert.ToString(ShippingName);
				}
				if (ContactFirstName == null)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = Convert.ToString(ContactFirstName);
				}
				if (ContactLastName == null)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = Convert.ToString(ContactLastName);
				}
				if (ShippingAddress == null)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = Convert.ToString(ShippingAddress);
				}
				if (ShippingCity == null)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = Convert.ToString(ShippingCity);
				}
				if (ShippingState == null)
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = Convert.ToString(ShippingState);
				}
				if (ShippingPostal == null)
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = Convert.ToString(ShippingPostal);
				}
				if (ShippingPhone == null)
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = Convert.ToString(ShippingPhone);
				}
				if (ShippingEmail == null)
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = Convert.ToString(ShippingEmail);
				}
				if (ShippingFax == null)
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = Convert.ToString(ShippingFax);
				}
				if (ShippingNote == null)
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = Convert.ToString(ShippingNote);
				}
				if (strEnteredBy == null)
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[14].Value = (int)Original_AddressID;
				if (Original_ts == null)
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[16].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(string ShippingName, string ContactFirstName, string ContactLastName, string ShippingAddress, string ShippingCity, string ShippingState, string ShippingPostal, string ShippingPhone, string ShippingEmail, string ShippingFax, string ShippingNote, string strEnteredBy, DateTime? dtmEnteredOn, int Original_AddressID, byte[] Original_ts)
			{
				return this.Update(Original_AddressID, ShippingName, ContactFirstName, ContactLastName, ShippingAddress, ShippingCity, ShippingState, ShippingPostal, ShippingPhone, ShippingEmail, ShippingFax, ShippingNote, strEnteredBy, dtmEnteredOn, Original_AddressID, Original_ts);
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class InventoryTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Inventory";
				tableMapping.ColumnMappings.Add("InventoryID", "InventoryID");
				tableMapping.ColumnMappings.Add("InventoryDate", "InventoryDate");
				tableMapping.ColumnMappings.Add("InventoryItemID", "InventoryItemID");
				tableMapping.ColumnMappings.Add("InventoryQuantity", "InventoryQuantity");
				tableMapping.ColumnMappings.Add("InventoryPallets", "InventoryPallets");
				tableMapping.ColumnMappings.Add("ts", "ts");
				tableMapping.ColumnMappings.Add("strEnteredBy", "strEnteredBy");
				tableMapping.ColumnMappings.Add("dtmEnteredOn", "dtmEnteredOn");
				tableMapping.ColumnMappings.Add("PO", "PO");
				tableMapping.ColumnMappings.Add("Lot", "Lot");
				tableMapping.ColumnMappings.Add("Shift", "Shift");
				tableMapping.ColumnMappings.Add("Pallet", "Pallet");
				tableMapping.ColumnMappings.Add("LPNNumber", "LPNNumber");
				tableMapping.ColumnMappings.Add("ExpirationDate", "ExpirationDate");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblInventory] WHERE (([InventoryID] = @Original_InventoryID) AND ((@"+
					"IsNull_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InventoryID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblInventory] ([InventoryID], [InventoryDate], [InventoryItemID], [I"+
					"nventoryQuantity], [InventoryPallets], [strEnteredBy], [dtmEnteredOn], [PO], [Lo"+
					"t], [Shift], [Pallet], [LPNNumber], [ExpirationDate]) VALUES (@InventoryID, @Inv"+
					"entoryDate, @InventoryItemID, @InventoryQuantity, @InventoryPallets, @strEntered"+
					"By, @dtmEnteredOn, @PO, @Lot, @Shift, @Pallet, @LPNNumber, @ExpirationDate);" + "\r" + "\n" + "SE"+
					"LECT InventoryID, InventoryDate, InventoryItemID, InventoryQuantity, InventoryPa"+
					"llets, strEnteredBy, dtmEnteredOn, ts, PO, Lot, Shift, Pallet, LPNNumber, Expira"+
					"tionDate FROM tblInventory WHERE (InventoryID = @InventoryID)";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryPallets", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lot", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shift", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pallet", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pallet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LPNNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LPNNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpirationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpirationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblInventory] SET [InventoryID] = @InventoryID, [InventoryDate] = @Invent"+
					"oryDate, [InventoryItemID] = @InventoryItemID, [InventoryQuantity] = @InventoryQ"+
					"uantity, [InventoryPallets] = @InventoryPallets, [strEnteredBy] = @strEnteredBy,"+
					" [dtmEnteredOn] = @dtmEnteredOn, [PO] = @PO, [Lot] = @Lot, [Shift] = @Shift, [Pa"+
					"llet] = @Pallet, [LPNNumber] = @LPNNumber, [ExpirationDate] = @ExpirationDate WH"+
					"ERE (([InventoryID] = @Original_InventoryID) AND ((@IsNull_ts = 1 AND [ts] IS NU"+
					"LL) OR ([ts] = @Original_ts)));" + "\r" + "\n" + "SELECT InventoryID, InventoryDate, InventoryIte"+
					"mID, InventoryQuantity, InventoryPallets, strEnteredBy, dtmEnteredOn, ts, PO, Lo"+
					"t, Shift, Pallet, LPNNumber, ExpirationDate FROM tblInventory WHERE (InventoryID"+
					" = @InventoryID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryPallets", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lot", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shift", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pallet", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pallet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LPNNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LPNNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpirationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpirationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InventoryID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        InventoryID, InventoryDate, InventoryItemID, InventoryQuantity, Inv"+
					"entoryPallets, strEnteredBy, dtmEnteredOn, ts, PO, Lot, Shift, Pallet, LPNNumber"+
					", " + "\r" + "\n" + "                         ExpirationDate" + "\r" + "\n" + "FROM            tblInventory";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT ExpirationDate, InventoryDate, InventoryID, InventoryItemID, InventoryPall"+
					"ets, InventoryQuantity, LPNNumber, Lot, PO, Pallet, Shift, dtmEnteredOn, strEnte"+
					"redBy, ts FROM tblInventory WHERE (InventoryID = @InventoryID)";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT ExpirationDate, InventoryDate, InventoryID, InventoryItemID, InventoryPall"+
					"ets, InventoryQuantity, LPNNumber, Lot, PO, Pallet, Shift, dtmEnteredOn, strEnte"+
					"redBy, ts FROM tblInventory WHERE (InventoryItemID = @ItemID)";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "SELECT        tblInventory.InventoryDate, tblInventory.InventoryID," + "\r" + "\n" + "            "+
					"                 (SELECT        CustomerName" + "\r" + "\n" + "                               FRO"+
					"M            tblCustomers" + "\r" + "\n" + "                               WHERE        (Customer"+
					"ID = tblItems_1.ItemCustomerID)) AS CustomerName, tblInventory.InventoryQuantity"+
					", tblInventory.InventoryPallets, " + "\r" + "\n" + "                         tblItems_1.ItemCode,"+
					" tblItems_1.ItemDescription, tblInventory.Lot, tblInventory.PO" + "\r" + "\n" + "FROM            "+
					"tblInventory INNER JOIN" + "\r" + "\n" + "                         tblItems AS tblItems_1 ON tblI"+
					"nventory.InventoryItemID = tblItems_1.ItemID" + "\r" + "\n" + "WHERE        (tblInventory.Invento"+
					"ryDate BETWEEN ISNULL(@FromDate, tblInventory.InventoryDate) AND ISNULL(@ToDate,"+
					" tblInventory.InventoryDate)) AND " + "\r" + "\n" + "                         (tblItems_1.ItemCus"+
					"tomerID = ISNULL(@Customer, tblItems_1.ItemCustomerID)) AND (tblInventory.Invent"+
					"oryItemID = ISNULL(@Item, " + "\r" + "\n" + "                         tblInventory.InventoryItemI"+
					"D)) AND (tblInventory.Lot = ISNULL(@Lot, tblInventory.Lot)) OR" + "\r" + "\n" + "                "+
					"         (tblInventory.InventoryDate BETWEEN ISNULL(@FromDate, tblInventory.Inve"+
					"ntoryDate) AND ISNULL(@ToDate, tblInventory.InventoryDate)) AND " + "\r" + "\n" + "              "+
					"           (tblItems_1.ItemCustomerID = ISNULL(@Customer, tblItems_1.ItemCustome"+
					"rID)) AND (tblInventory.InventoryItemID = ISNULL(@Item, " + "\r" + "\n" + "                      "+
					"   tblInventory.InventoryItemID)) AND (tblInventory.Lot IS NULL) AND (@Lot IS NU"+
					"LL)";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Customer", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ItemCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lot", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Lot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.InventoryDataTable GetInventory()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.InventoryDataTable dataTable = new SPG.InventoryDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.InventoryDataTable GetInventoryByID(int InventoryID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)InventoryID;
				SPG.InventoryDataTable dataTable = new SPG.InventoryDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.InventoryDataTable GetInventoryByItemID(int? ItemID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				if (ItemID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)ItemID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.InventoryDataTable dataTable = new SPG.InventoryDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.InventoryDataTable GetInventoryView(DateTime? FromDate, DateTime? ToDate, int? Customer, int? Item, string Lot)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				if (FromDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToDateTime(FromDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (ToDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[1].Value = Convert.ToDateTime(ToDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (Customer.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[2].Value = (int)Customer.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (Item.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[3].Value = (int)Item.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (Lot == null)
				{
					this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[4].Value = Convert.ToString(Lot);
				}
				SPG.InventoryDataTable dataTable = new SPG.InventoryDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.InventoryDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "Inventory");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_InventoryID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_InventoryID;
				if (Original_ts == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(int InventoryID, DateTime? InventoryDate, int? InventoryItemID, int? InventoryQuantity, float? InventoryPallets, string strEnteredBy, DateTime? dtmEnteredOn, string PO, string Lot, int? Shift, int? Pallet, int? LPNNumber, DateTime? ExpirationDate)
			{
				this.Adapter.InsertCommand.Parameters[0].Value = (int)InventoryID;
				if (InventoryDate.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = Convert.ToDateTime(InventoryDate.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (InventoryItemID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = (int)InventoryItemID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (InventoryQuantity.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = (int)InventoryQuantity.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (InventoryPallets.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = (float)InventoryPallets.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (strEnteredBy == null)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[6].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				if (PO == null)
				{
					this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[7].Value = Convert.ToString(PO);
				}
				if (Lot == null)
				{
					this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[8].Value = Convert.ToString(Lot);
				}
				if (Shift.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[9].Value = (int)Shift.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				if (Pallet.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[10].Value = (int)Pallet.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				if (LPNNumber.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[11].Value = (int)LPNNumber.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				if (ExpirationDate.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[12].Value = Convert.ToDateTime(ExpirationDate.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int InventoryID, DateTime? InventoryDate, int? InventoryItemID, int? InventoryQuantity, float? InventoryPallets, string strEnteredBy, DateTime? dtmEnteredOn, string PO, string Lot, int? Shift, int? Pallet, int? LPNNumber, DateTime? ExpirationDate, int Original_InventoryID, byte[] Original_ts)
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = (int)InventoryID;
				if (InventoryDate.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = Convert.ToDateTime(InventoryDate.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (InventoryItemID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (int)InventoryItemID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (InventoryQuantity.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = (int)InventoryQuantity.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (InventoryPallets.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = (float)InventoryPallets.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (strEnteredBy == null)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				if (PO == null)
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = Convert.ToString(PO);
				}
				if (Lot == null)
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = Convert.ToString(Lot);
				}
				if (Shift.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = (int)Shift.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				if (Pallet.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = (int)Pallet.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				if (LPNNumber.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = (int)LPNNumber.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				if (ExpirationDate.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = Convert.ToDateTime(ExpirationDate.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[13].Value = (int)Original_InventoryID;
				if (Original_ts == null)
				{
					this.Adapter.UpdateCommand.Parameters[14].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[14].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[15].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(DateTime? InventoryDate, int? InventoryItemID, int? InventoryQuantity, float? InventoryPallets, string strEnteredBy, DateTime? dtmEnteredOn, string PO, string Lot, int? Shift, int? Pallet, int? LPNNumber, DateTime? ExpirationDate, int Original_InventoryID, byte[] Original_ts)
			{
				return this.Update(Original_InventoryID, InventoryDate, InventoryItemID, InventoryQuantity, InventoryPallets, strEnteredBy, dtmEnteredOn, PO, Lot, Shift, Pallet, LPNNumber, ExpirationDate, Original_InventoryID, Original_ts);
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class UserPermissionsTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public UserPermissionsTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "UserPermissions";
				tableMapping.ColumnMappings.Add("UserPermissionID", "UserPermissionID");
				tableMapping.ColumnMappings.Add("UserName", "UserName");
				tableMapping.ColumnMappings.Add("PermissionObject", "PermissionObject");
				tableMapping.ColumnMappings.Add("PermissionLevel", "PermissionLevel");
				tableMapping.ColumnMappings.Add("ts", "ts");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblUserPermissions] WHERE (([UserPermissionID] = @Original_UserPermi"+
					"ssionID) AND ([ts] = @Original_ts))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserPermissionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserPermissionID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblUserPermissions] ([UserName], [PermissionObject], [PermissionLeve"+
					"l]) VALUES (@UserName, @PermissionObject, @PermissionLevel);" + "\r" + "\n" + "SELECT UserPermiss"+
					"ionID, UserName, PermissionObject, PermissionLevel, ts FROM tblUserPermissions W"+
					"HERE (UserPermissionID = SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermissionObject", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermissionObject", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermissionLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermissionLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblUserPermissions] SET [UserName] = @UserName, [PermissionObject] = @Per"+
					"missionObject, [PermissionLevel] = @PermissionLevel WHERE (([UserPermissionID] ="+
					" @Original_UserPermissionID) AND ([ts] = @Original_ts));" + "\r" + "\n" + "SELECT UserPermissionI"+
					"D, UserName, PermissionObject, PermissionLevel, ts FROM tblUserPermissions WHERE"+
					" (UserPermissionID = @UserPermissionID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermissionObject", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermissionObject", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermissionLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermissionLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserPermissionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserPermissionID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserPermissionID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "UserPermissionID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        UserPermissionID, UserName, PermissionObject, PermissionLevel, ts" + "\r" + "\n"+
					"FROM            tblUserPermissions";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "INSERT INTO tblUserPermissions" + "\r" + "\n" + "                         (UserName, PermissionObj"+
					"ect, PermissionLevel)" + "\r" + "\n" + "SELECT DISTINCT @UserName AS Expr1, PermissionObject, 'NO"+
					"NE' AS Expr2" + "\r" + "\n" + "FROM            tblUserPermissions AS tblUserPermissions_1";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "DELETE FROM tblUserPermissions" + "\r" + "\n" + "WHERE        (UserName = @username)";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@username", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "SELECT        UserPermissionID, UserName, PermissionObject, PermissionLevel, ts" + "\r" + "\n"+
					"FROM            tblUserPermissions" + "\r" + "\n" + "WHERE UserPermissionID = @UserPermissionID";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserPermissionID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "UserPermissionID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[4].Connection = this.Connection;
				this._commandCollection[4].CommandText = "SELECT        UserPermissionID, UserName, PermissionObject, PermissionLevel, ts" + "\r" + "\n"+
					"FROM            tblUserPermissions" + "\r" + "\n" + "WHERE UserName = @UserName AND PermissionObj"+
					"ect = ISNULL(@PermissionObject, PermissionObject)";
				this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermissionObject", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "PermissionObject", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
			public virtual int FillUserPermissions(SPG.UserPermissionsDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.UserPermissionsDataTable GetUserPermissions()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.UserPermissionsDataTable dataTable = new SPG.UserPermissionsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillUserPermissionByID(SPG.UserPermissionsDataTable dataTable, int UserPermissionID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)UserPermissionID;
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.UserPermissionsDataTable GetUserPermissionByID(int UserPermissionID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)UserPermissionID;
				SPG.UserPermissionsDataTable dataTable = new SPG.UserPermissionsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillUserPermissionsByUserName(SPG.UserPermissionsDataTable dataTable, string UserName, string PermissionObject)
			{
				this.Adapter.SelectCommand = this.CommandCollection[4];
				if (UserName == null)
				{
					throw new global::System.ArgumentNullException("UserName");
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToString(UserName);
				}
				if (PermissionObject == null)
				{
					this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[1].Value = Convert.ToString(PermissionObject);
				}
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.UserPermissionsDataTable GetUserPermissionsByUserName(string UserName, string PermissionObject)
			{
				this.Adapter.SelectCommand = this.CommandCollection[4];
				if (UserName == null)
				{
					throw new global::System.ArgumentNullException("UserName");
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToString(UserName);
				}
				if (PermissionObject == null)
				{
					this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[1].Value = Convert.ToString(PermissionObject);
				}
				SPG.UserPermissionsDataTable dataTable = new SPG.UserPermissionsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.UserPermissionsDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "UserPermissions");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_UserPermissionID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_UserPermissionID;
				if (Original_ts == null)
				{
					throw new global::System.ArgumentNullException("Original_ts");
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(string UserName, string PermissionObject, string PermissionLevel)
			{
				if (UserName == null)
				{
					throw new global::System.ArgumentNullException("UserName");
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = Convert.ToString(UserName);
				}
				if (PermissionObject == null)
				{
					throw new global::System.ArgumentNullException("PermissionObject");
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = Convert.ToString(PermissionObject);
				}
				if (PermissionLevel == null)
				{
					throw new global::System.ArgumentNullException("PermissionLevel");
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = Convert.ToString(PermissionLevel);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(string UserName, string PermissionObject, string PermissionLevel, int Original_UserPermissionID, byte[] Original_ts, int UserPermissionID)
			{
				if (UserName == null)
				{
					throw new global::System.ArgumentNullException("UserName");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = Convert.ToString(UserName);
				}
				if (PermissionObject == null)
				{
					throw new global::System.ArgumentNullException("PermissionObject");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = Convert.ToString(PermissionObject);
				}
				if (PermissionLevel == null)
				{
					throw new global::System.ArgumentNullException("PermissionLevel");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = Convert.ToString(PermissionLevel);
				}
				this.Adapter.UpdateCommand.Parameters[3].Value = (int)Original_UserPermissionID;
				if (Original_ts == null)
				{
					throw new global::System.ArgumentNullException("Original_ts");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = (byte[])Original_ts;
				}
				this.Adapter.UpdateCommand.Parameters[5].Value = (int)UserPermissionID;
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(string UserName, string PermissionObject, string PermissionLevel, int Original_UserPermissionID, byte[] Original_ts)
			{
				return this.Update(UserName, PermissionObject, PermissionLevel, Original_UserPermissionID, Original_ts, Original_UserPermissionID);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
			public virtual int CreateNewUserPermissions(string UserName)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
				if (UserName == null)
				{
					throw new global::System.ArgumentNullException("UserName");
				}
				else
				{
					command.Parameters[0].Value = Convert.ToString(UserName);
				}
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				int returnValue = 0;
				try
				{
					returnValue = command.ExecuteNonQuery();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
			public virtual int DeletePermissionByUser(string username)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
				if (username == null)
				{
					throw new global::System.ArgumentNullException("username");
				}
				else
				{
					command.Parameters[0].Value = Convert.ToString(username);
				}
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				int returnValue = 0;
				try
				{
					returnValue = command.ExecuteNonQuery();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				return returnValue;
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class ReportsTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReportsTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "Reports";
				tableMapping.ColumnMappings.Add("ReportID", "ReportID");
				tableMapping.ColumnMappings.Add("Name", "Name");
				tableMapping.ColumnMappings.Add("CodeName", "CodeName");
				tableMapping.ColumnMappings.Add("ModuleName", "ModuleName");
				tableMapping.ColumnMappings.Add("Type", "Type");
				tableMapping.ColumnMappings.Add("FilterReport", "FilterReport");
				tableMapping.ColumnMappings.Add("DateFilter", "DateFilter");
				tableMapping.ColumnMappings.Add("MachineFilter", "MachineFilter");
				tableMapping.ColumnMappings.Add("ShiftFilter", "ShiftFilter");
				tableMapping.ColumnMappings.Add("CustomerFilter", "CustomerFilter");
				tableMapping.ColumnMappings.Add("LotFilter", "LotFilter");
				tableMapping.ColumnMappings.Add("POFilter", "POFilter");
				tableMapping.ColumnMappings.Add("ItemFilter", "ItemFilter");
				tableMapping.ColumnMappings.Add("BOLFilter", "BOLFilter");
				tableMapping.ColumnMappings.Add("DNFilter", "DNFilter");
				tableMapping.ColumnMappings.Add("DestinationFilter", "DestinationFilter");
				tableMapping.ColumnMappings.Add("CarrierFilter", "CarrierFilter");
				tableMapping.ColumnMappings.Add("VendorFilter", "VendorFilter");
				tableMapping.ColumnMappings.Add("itemtypeFilter", "itemtypeFilter");
				tableMapping.ColumnMappings.Add("stockFilter", "stockFilter");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblReports] WHERE (([ReportID] = @Original_ReportID) AND ([Name] = @"+
					"Original_Name) AND ([CodeName] = @Original_CodeName) AND ((@IsNull_ModuleName = "+
					"1 AND [Module] IS NULL) OR ([Module] = @Original_ModuleName)) AND ((@IsNull_Type"+
					" = 1 AND [Type] IS NULL) OR ([Type] = @Original_Type)) AND ((@IsNull_FilterRepor"+
					"t = 1 AND [FilterReport] IS NULL) OR ([FilterReport] = @Original_FilterReport)) "+
					"AND ((@IsNull_DateFilter = 1 AND [DateFilter] IS NULL) OR ([DateFilter] = @Origi"+
					"nal_DateFilter)) AND ((@IsNull_MachineFilter = 1 AND [MachineFilter] IS NULL) OR"+
					" ([MachineFilter] = @Original_MachineFilter)) AND ((@IsNull_ShiftFilter = 1 AND "+
					"[ShiftFilter] IS NULL) OR ([ShiftFilter] = @Original_ShiftFilter)) AND ((@IsNull"+
					"_CustomerFilter = 1 AND [CustomerFilter] IS NULL) OR ([CustomerFilter] = @Origin"+
					"al_CustomerFilter)) AND ((@IsNull_LotFilter = 1 AND [LotFilter] IS NULL) OR ([Lo"+
					"tFilter] = @Original_LotFilter)) AND ((@IsNull_POFilter = 1 AND [POFilter] IS NU"+
					"LL) OR ([POFilter] = @Original_POFilter)) AND ((@IsNull_ItemFilter = 1 AND [Item"+
					"Filter] IS NULL) OR ([ItemFilter] = @Original_ItemFilter)) AND ((@IsNull_BOLFilt"+
					"er = 1 AND [BOLFilter] IS NULL) OR ([BOLFilter] = @Original_BOLFilter)) AND ((@I"+
					"sNull_DNFilter = 1 AND [DNFilter] IS NULL) OR ([DNFilter] = @Original_DNFilter))"+
					" AND ((@IsNull_DestinationFilter = 1 AND [DestinationFilter] IS NULL) OR ([Desti"+
					"nationFilter] = @Original_DestinationFilter)) AND ((@IsNull_CarrierFilter = 1 AN"+
					"D [CarrierFilter] IS NULL) OR ([CarrierFilter] = @Original_CarrierFilter)) AND ("+
					"(@IsNull_VendorFilter = 1 AND [VendorFilter] IS NULL) OR ([VendorFilter] = @Orig"+
					"inal_VendorFilter)) AND ((@IsNull_itemtypeFilter = 1 AND [itemtypeFilter] IS NUL"+
					"L) OR ([itemtypeFilter] = @Original_itemtypeFilter)) AND ((@IsNull_stockFilter ="+
					" 1 AND [stockFilter] IS NULL) OR ([stockFilter] = @Original_stockFilter)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReportID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReportID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModuleName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModuleName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModuleName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModuleName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FilterReport", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilterReport", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FilterReport", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilterReport", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MachineFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MachineFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShiftFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShiftFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LotFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LotFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ItemFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BOLFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOLFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOLFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOLFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DNFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DNFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DNFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DNFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DestinationFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DestinationFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DestinationFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DestinationFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CarrierFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarrierFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarrierFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarrierFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VendorFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_itemtypeFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemtypeFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemtypeFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemtypeFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_stockFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stockFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_stockFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stockFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblReports] ([Name], [CodeName], [Module], [Type], [FilterReport], ["+
					"DateFilter], [MachineFilter], [ShiftFilter], [CustomerFilter], [LotFilter], [POF"+
					"ilter], [ItemFilter], [BOLFilter], [DNFilter], [DestinationFilter], [CarrierFilt"+
					"er], [VendorFilter], [itemtypeFilter], [stockFilter]) VALUES (@Name, @CodeName, "+
					"@ModuleName, @Type, @FilterReport, @DateFilter, @MachineFilter, @ShiftFilter, @C"+
					"ustomerFilter, @LotFilter, @POFilter, @ItemFilter, @BOLFilter, @DNFilter, @Desti"+
					"nationFilter, @CarrierFilter, @VendorFilter, @itemtypeFilter, @stockFilter);" + "\r" + "\n" + "SE"+
					"LECT ReportID, Name, CodeName, Module AS ModuleName, Type, FilterReport, DateFil"+
					"ter, MachineFilter, ShiftFilter, CustomerFilter, LotFilter, POFilter, ItemFilter"+
					", BOLFilter, DNFilter, DestinationFilter, CarrierFilter, VendorFilter, itemtypeF"+
					"ilter, stockFilter FROM tblReports WHERE (ReportID = SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModuleName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModuleName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FilterReport", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilterReport", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MachineFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShiftFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LotFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOLFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOLFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DNFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DNFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DestinationFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DestinationFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarrierFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarrierFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemtypeFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemtypeFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stockFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stockFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblReports] SET [Name] = @Name, [CodeName] = @CodeName, [Module] = @Modul"+
					"eName, [Type] = @Type, [FilterReport] = @FilterReport, [DateFilter] = @DateFilte"+
					"r, [MachineFilter] = @MachineFilter, [ShiftFilter] = @ShiftFilter, [CustomerFilt"+
					"er] = @CustomerFilter, [LotFilter] = @LotFilter, [POFilter] = @POFilter, [ItemFi"+
					"lter] = @ItemFilter, [BOLFilter] = @BOLFilter, [DNFilter] = @DNFilter, [Destinat"+
					"ionFilter] = @DestinationFilter, [CarrierFilter] = @CarrierFilter, [VendorFilter"+
					"] = @VendorFilter, [itemtypeFilter] = @itemtypeFilter, [stockFilter] = @stockFil"+
					"ter WHERE (([ReportID] = @Original_ReportID) AND ([Name] = @Original_Name) AND ("+
					"[CodeName] = @Original_CodeName) AND ((@IsNull_ModuleName = 1 AND [Module] IS NU"+
					"LL) OR ([Module] = @Original_ModuleName)) AND ((@IsNull_Type = 1 AND [Type] IS N"+
					"ULL) OR ([Type] = @Original_Type)) AND ((@IsNull_FilterReport = 1 AND [FilterRep"+
					"ort] IS NULL) OR ([FilterReport] = @Original_FilterReport)) AND ((@IsNull_DateFi"+
					"lter = 1 AND [DateFilter] IS NULL) OR ([DateFilter] = @Original_DateFilter)) AND"+
					" ((@IsNull_MachineFilter = 1 AND [MachineFilter] IS NULL) OR ([MachineFilter] = "+
					"@Original_MachineFilter)) AND ((@IsNull_ShiftFilter = 1 AND [ShiftFilter] IS NUL"+
					"L) OR ([ShiftFilter] = @Original_ShiftFilter)) AND ((@IsNull_CustomerFilter = 1 "+
					"AND [CustomerFilter] IS NULL) OR ([CustomerFilter] = @Original_CustomerFilter)) "+
					"AND ((@IsNull_LotFilter = 1 AND [LotFilter] IS NULL) OR ([LotFilter] = @Original"+
					"_LotFilter)) AND ((@IsNull_POFilter = 1 AND [POFilter] IS NULL) OR ([POFilter] ="+
					" @Original_POFilter)) AND ((@IsNull_ItemFilter = 1 AND [ItemFilter] IS NULL) OR "+
					"([ItemFilter] = @Original_ItemFilter)) AND ((@IsNull_BOLFilter = 1 AND [BOLFilte"+
					"r] IS NULL) OR ([BOLFilter] = @Original_BOLFilter)) AND ((@IsNull_DNFilter = 1 A"+
					"ND [DNFilter] IS NULL) OR ([DNFilter] = @Original_DNFilter)) AND ((@IsNull_Desti"+
					"nationFilter = 1 AND [DestinationFilter] IS NULL) OR ([DestinationFilter] = @Ori"+
					"ginal_DestinationFilter)) AND ((@IsNull_CarrierFilter = 1 AND [CarrierFilter] IS"+
					" NULL) OR ([CarrierFilter] = @Original_CarrierFilter)) AND ((@IsNull_VendorFilte"+
					"r = 1 AND [VendorFilter] IS NULL) OR ([VendorFilter] = @Original_VendorFilter)) "+
					"AND ((@IsNull_itemtypeFilter = 1 AND [itemtypeFilter] IS NULL) OR ([itemtypeFilt"+
					"er] = @Original_itemtypeFilter)) AND ((@IsNull_stockFilter = 1 AND [stockFilter]"+
					" IS NULL) OR ([stockFilter] = @Original_stockFilter)));" + "\r" + "\n" + "SELECT ReportID, Name, "+
					"CodeName, Module AS ModuleName, Type, FilterReport, DateFilter, MachineFilter, S"+
					"hiftFilter, CustomerFilter, LotFilter, POFilter, ItemFilter, BOLFilter, DNFilter"+
					", DestinationFilter, CarrierFilter, VendorFilter, itemtypeFilter, stockFilter FR"+
					"OM tblReports WHERE (ReportID = @ReportID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModuleName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModuleName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FilterReport", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilterReport", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MachineFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShiftFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LotFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOLFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOLFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DNFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DNFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DestinationFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DestinationFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarrierFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarrierFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemtypeFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemtypeFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stockFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stockFilter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReportID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReportID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModuleName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModuleName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModuleName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModuleName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FilterReport", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilterReport", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FilterReport", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilterReport", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MachineFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MachineFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShiftFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShiftFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShiftFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LotFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LotFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ItemFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BOLFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOLFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOLFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOLFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DNFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DNFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DNFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DNFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DestinationFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DestinationFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DestinationFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DestinationFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CarrierFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarrierFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarrierFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarrierFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VendorFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_itemtypeFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemtypeFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemtypeFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemtypeFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_stockFilter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stockFilter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_stockFilter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stockFilter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReportID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReportID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        ReportID, Name, CodeName, Module AS ModuleName, Type, FilterReport,"+
					" DateFilter, MachineFilter, ShiftFilter, CustomerFilter, LotFilter, POFilter, It"+
					"emFilter, " + "\r" + "\n" + "                         BOLFilter, DNFilter, DestinationFilter, Car"+
					"rierFilter, VendorFilter, itemtypeFilter, stockFilter" + "\r" + "\n" + "FROM            tblReport"+
					"s";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT BOLFilter, CarrierFilter, CodeName, CustomerFilter, DNFilter, DateFilter, "+
					"DestinationFilter, FilterReport, ItemFilter, LotFilter, MachineFilter, Module AS"+
					" ModuleName, Name, POFilter, ReportID, ShiftFilter, Type, VendorFilter, itemtype"+
					"Filter, stockFilter FROM tblReports WHERE (Module = @ModuleName)";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModuleName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ModuleName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
			public virtual int FillReports(SPG.ReportsDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.ReportsDataTable GetReports()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.ReportsDataTable dataTable = new SPG.ReportsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillReportsByModule(SPG.ReportsDataTable dataTable, string ModuleName)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				if (ModuleName == null)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToString(ModuleName);
				}
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ReportsDataTable GetReportsByModule(string ModuleName)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				if (ModuleName == null)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToString(ModuleName);
				}
				SPG.ReportsDataTable dataTable = new SPG.ReportsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.ReportsDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "Reports");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_ReportID, string Original_Name, string Original_CodeName, string Original_ModuleName, string Original_Type, bool? Original_FilterReport, bool? Original_DateFilter, bool? Original_MachineFilter, bool? Original_ShiftFilter, bool? Original_CustomerFilter, bool? Original_LotFilter, bool? Original_POFilter, bool? Original_ItemFilter, bool? Original_BOLFilter, bool? Original_DNFilter, bool? Original_DestinationFilter, bool? Original_CarrierFilter, bool? Original_VendorFilter, bool? Original_itemtypeFilter, bool? Original_stockFilter)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_ReportID;
				if (Original_Name == null)
				{
					throw new global::System.ArgumentNullException("Original_Name");
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = Convert.ToString(Original_Name);
				}
				if (Original_CodeName == null)
				{
					throw new global::System.ArgumentNullException("Original_CodeName");
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[2].Value = Convert.ToString(Original_CodeName);
				}
				if (Original_ModuleName == null)
				{
					throw new global::System.ArgumentNullException("Original_ModuleName");
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[3].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[4].Value = Convert.ToString(Original_ModuleName);
				}
				if (Original_Type == null)
				{
					this.Adapter.DeleteCommand.Parameters[5].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[5].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[6].Value = Convert.ToString(Original_Type);
				}
				if (Original_FilterReport.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[7].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[8].Value = Convert.ToBoolean(Original_FilterReport.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[7].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				if (Original_DateFilter.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[9].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[10].Value = Convert.ToBoolean(Original_DateFilter.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[9].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				if (Original_MachineFilter.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[11].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[12].Value = Convert.ToBoolean(Original_MachineFilter.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[11].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				if (Original_ShiftFilter.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[13].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[14].Value = Convert.ToBoolean(Original_ShiftFilter.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[13].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
				}
				if (Original_CustomerFilter.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[15].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[16].Value = Convert.ToBoolean(Original_CustomerFilter.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[15].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
				}
				if (Original_LotFilter.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[17].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[18].Value = Convert.ToBoolean(Original_LotFilter.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[17].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
				}
				if (Original_POFilter.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[19].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[20].Value = Convert.ToBoolean(Original_POFilter.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[19].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
				}
				if (Original_ItemFilter.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[21].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[22].Value = Convert.ToBoolean(Original_ItemFilter.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[21].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
				}
				if (Original_BOLFilter.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[23].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[24].Value = Convert.ToBoolean(Original_BOLFilter.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[23].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
				}
				if (Original_DNFilter.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[25].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[26].Value = Convert.ToBoolean(Original_DNFilter.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[25].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
				}
				if (Original_DestinationFilter.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[27].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[28].Value = Convert.ToBoolean(Original_DestinationFilter.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[27].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
				}
				if (Original_CarrierFilter.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[29].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[30].Value = Convert.ToBoolean(Original_CarrierFilter.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[29].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
				}
				if (Original_VendorFilter.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[31].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[32].Value = Convert.ToBoolean(Original_VendorFilter.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[31].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
				}
				if (Original_itemtypeFilter.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[33].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[34].Value = Convert.ToBoolean(Original_itemtypeFilter.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[33].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
				}
				if (Original_stockFilter.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[35].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[36].Value = Convert.ToBoolean(Original_stockFilter.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[35].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(string Name, string CodeName, string ModuleName, string Type, bool? FilterReport, bool? DateFilter, bool? MachineFilter, bool? ShiftFilter, bool? CustomerFilter, bool? LotFilter, bool? POFilter, bool? ItemFilter, bool? BOLFilter, bool? DNFilter, bool? DestinationFilter, bool? CarrierFilter, bool? VendorFilter, bool? itemtypeFilter, bool? stockFilter)
			{
				if (Name == null)
				{
					throw new global::System.ArgumentNullException("Name");
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = Convert.ToString(Name);
				}
				if (CodeName == null)
				{
					throw new global::System.ArgumentNullException("CodeName");
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = Convert.ToString(CodeName);
				}
				if (ModuleName == null)
				{
					throw new global::System.ArgumentNullException("ModuleName");
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = Convert.ToString(ModuleName);
				}
				if (Type == null)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = Convert.ToString(Type);
				}
				if (FilterReport.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = Convert.ToBoolean(FilterReport.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (DateFilter.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = Convert.ToBoolean(DateFilter.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (MachineFilter.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[6].Value = Convert.ToBoolean(MachineFilter.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				if (ShiftFilter.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[7].Value = Convert.ToBoolean(ShiftFilter.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				if (CustomerFilter.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[8].Value = Convert.ToBoolean(CustomerFilter.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				if (LotFilter.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[9].Value = Convert.ToBoolean(LotFilter.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				if (POFilter.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[10].Value = Convert.ToBoolean(POFilter.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				if (ItemFilter.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[11].Value = Convert.ToBoolean(ItemFilter.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				if (BOLFilter.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[12].Value = Convert.ToBoolean(BOLFilter.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				if (DNFilter.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[13].Value = Convert.ToBoolean(DNFilter.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				if (DestinationFilter.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[14].Value = Convert.ToBoolean(DestinationFilter.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
				}
				if (CarrierFilter.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[15].Value = Convert.ToBoolean(CarrierFilter.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
				}
				if (VendorFilter.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[16].Value = Convert.ToBoolean(VendorFilter.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
				}
				if (itemtypeFilter.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[17].Value = Convert.ToBoolean(itemtypeFilter.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
				}
				if (stockFilter.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[18].Value = Convert.ToBoolean(stockFilter.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(string Name, string CodeName, string ModuleName, string Type, bool? FilterReport, bool? DateFilter, bool? MachineFilter, bool? ShiftFilter, bool? CustomerFilter, bool? LotFilter, bool? POFilter, bool? ItemFilter, bool? BOLFilter, bool? DNFilter, bool? DestinationFilter, bool? CarrierFilter, bool? VendorFilter, bool? itemtypeFilter, bool? stockFilter, int Original_ReportID, string Original_Name, string Original_CodeName, string Original_ModuleName, string Original_Type, bool? Original_FilterReport, bool? Original_DateFilter, bool? Original_MachineFilter, bool? Original_ShiftFilter, bool? Original_CustomerFilter, bool? Original_LotFilter, bool? Original_POFilter, bool? Original_ItemFilter, bool? Original_BOLFilter, bool? Original_DNFilter, bool? Original_DestinationFilter, bool? Original_CarrierFilter, bool? Original_VendorFilter, bool? Original_itemtypeFilter, bool? Original_stockFilter, int ReportID)
			{
				if (Name == null)
				{
					throw new global::System.ArgumentNullException("Name");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = Convert.ToString(Name);
				}
				if (CodeName == null)
				{
					throw new global::System.ArgumentNullException("CodeName");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = Convert.ToString(CodeName);
				}
				if (ModuleName == null)
				{
					throw new global::System.ArgumentNullException("ModuleName");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = Convert.ToString(ModuleName);
				}
				if (Type == null)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = Convert.ToString(Type);
				}
				if (FilterReport.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = Convert.ToBoolean(FilterReport.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (DateFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = Convert.ToBoolean(DateFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (MachineFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = Convert.ToBoolean(MachineFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				if (ShiftFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = Convert.ToBoolean(ShiftFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				if (CustomerFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = Convert.ToBoolean(CustomerFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				if (LotFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = Convert.ToBoolean(LotFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				if (POFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = Convert.ToBoolean(POFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				if (ItemFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = Convert.ToBoolean(ItemFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				if (BOLFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = Convert.ToBoolean(BOLFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
				}
				if (DNFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = Convert.ToBoolean(DNFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				if (DestinationFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[14].Value = Convert.ToBoolean(DestinationFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
				}
				if (CarrierFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = Convert.ToBoolean(CarrierFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
				}
				if (VendorFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[16].Value = Convert.ToBoolean(VendorFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
				}
				if (itemtypeFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[17].Value = Convert.ToBoolean(itemtypeFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
				}
				if (stockFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[18].Value = Convert.ToBoolean(stockFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[19].Value = (int)Original_ReportID;
				if (Original_Name == null)
				{
					throw new global::System.ArgumentNullException("Original_Name");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[20].Value = Convert.ToString(Original_Name);
				}
				if (Original_CodeName == null)
				{
					throw new global::System.ArgumentNullException("Original_CodeName");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[21].Value = Convert.ToString(Original_CodeName);
				}
				if (Original_ModuleName == null)
				{
					throw new global::System.ArgumentNullException("Original_ModuleName");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[22].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[23].Value = Convert.ToString(Original_ModuleName);
				}
				if (Original_Type == null)
				{
					this.Adapter.UpdateCommand.Parameters[24].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[24].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[25].Value = Convert.ToString(Original_Type);
				}
				if (Original_FilterReport.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[26].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[27].Value = Convert.ToBoolean(Original_FilterReport.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[26].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
				}
				if (Original_DateFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[28].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[29].Value = Convert.ToBoolean(Original_DateFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[28].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
				}
				if (Original_MachineFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[30].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[31].Value = Convert.ToBoolean(Original_MachineFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[30].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
				}
				if (Original_ShiftFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[32].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[33].Value = Convert.ToBoolean(Original_ShiftFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[32].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
				}
				if (Original_CustomerFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[34].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[35].Value = Convert.ToBoolean(Original_CustomerFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[34].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
				}
				if (Original_LotFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[36].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[37].Value = Convert.ToBoolean(Original_LotFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[36].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
				}
				if (Original_POFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[38].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[39].Value = Convert.ToBoolean(Original_POFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[38].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
				}
				if (Original_ItemFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[40].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[41].Value = Convert.ToBoolean(Original_ItemFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[40].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
				}
				if (Original_BOLFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[42].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[43].Value = Convert.ToBoolean(Original_BOLFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[42].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
				}
				if (Original_DNFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[44].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[45].Value = Convert.ToBoolean(Original_DNFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[44].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
				}
				if (Original_DestinationFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[46].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[47].Value = Convert.ToBoolean(Original_DestinationFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[46].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
				}
				if (Original_CarrierFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[48].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[49].Value = Convert.ToBoolean(Original_CarrierFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[48].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
				}
				if (Original_VendorFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[50].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[51].Value = Convert.ToBoolean(Original_VendorFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[50].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
				}
				if (Original_itemtypeFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[52].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[53].Value = Convert.ToBoolean(Original_itemtypeFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[52].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
				}
				if (Original_stockFilter.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[54].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[55].Value = Convert.ToBoolean(Original_stockFilter.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[54].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[56].Value = (int)ReportID;
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(string Name, string CodeName, string ModuleName, string Type, bool? FilterReport, bool? DateFilter, bool? MachineFilter, bool? ShiftFilter, bool? CustomerFilter, bool? LotFilter, bool? POFilter, bool? ItemFilter, bool? BOLFilter, bool? DNFilter, bool? DestinationFilter, bool? CarrierFilter, bool? VendorFilter, bool? itemtypeFilter, bool? stockFilter, int Original_ReportID, string Original_Name, string Original_CodeName, string Original_ModuleName, string Original_Type, bool? Original_FilterReport, bool? Original_DateFilter, bool? Original_MachineFilter, bool? Original_ShiftFilter, bool? Original_CustomerFilter, bool? Original_LotFilter, bool? Original_POFilter, bool? Original_ItemFilter, bool? Original_BOLFilter, bool? Original_DNFilter, bool? Original_DestinationFilter, bool? Original_CarrierFilter, bool? Original_VendorFilter, bool? Original_itemtypeFilter, bool? Original_stockFilter)
			{
				return this.Update(Name, CodeName, ModuleName, Type, FilterReport, DateFilter, MachineFilter, ShiftFilter, CustomerFilter, LotFilter, POFilter, ItemFilter, BOLFilter, DNFilter, DestinationFilter, CarrierFilter, VendorFilter, itemtypeFilter, stockFilter, Original_ReportID, Original_Name, Original_CodeName, Original_ModuleName, Original_Type, Original_FilterReport, Original_DateFilter, Original_MachineFilter, Original_ShiftFilter, Original_CustomerFilter, Original_LotFilter, Original_POFilter, Original_ItemFilter, Original_BOLFilter, Original_DNFilter, Original_DestinationFilter, Original_CarrierFilter, Original_VendorFilter, Original_itemtypeFilter, Original_stockFilter, Original_ReportID);
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class ReturnDetTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ReturnDetTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "ReturnDet";
				tableMapping.ColumnMappings.Add("ReturnDetID", "ReturnDetID");
				tableMapping.ColumnMappings.Add("ReceiveMainID", "ReceiveMainID");
				tableMapping.ColumnMappings.Add("ReturnDetItemID", "ReturnDetItemID");
				tableMapping.ColumnMappings.Add("ReturnDetLot", "ReturnDetLot");
				tableMapping.ColumnMappings.Add("ReturnDetQty", "ReturnDetQty");
				tableMapping.ColumnMappings.Add("intUnits", "intUnits");
				tableMapping.ColumnMappings.Add("sngPallets", "sngPallets");
				tableMapping.ColumnMappings.Add("Reason", "Reason");
				tableMapping.ColumnMappings.Add("ts", "ts");
				tableMapping.ColumnMappings.Add("ExpirationDate", "ExpirationDate");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblReturnDet] WHERE (([ReturnDetID] = @Original_ReturnDetID) AND ([t"+
					"s] = @Original_ts))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnDetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblReturnDet] ([ReceiveMainID], [ReturnDetItemID], [ReturnDetLot], ["+
					"ReturnDetQty], [intUnits], [sngPallets], [Reason], [ExpirationDate]) VALUES (@Re"+
					"ceiveMainID, @ReturnDetItemID, @ReturnDetLot, @ReturnDetQty, @intUnits, @sngPall"+
					"ets, @Reason, @ExpirationDate);" + "\r" + "\n" + "SELECT ReturnDetID, ReceiveMainID, ReturnDetIte"+
					"mID, ReturnDetLot, ReturnDetQty, intUnits, sngPallets, Reason, ts, ExpirationDat"+
					"e FROM tblReturnDet WHERE (ReturnDetID = SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiveMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiveMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnDetItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnDetLot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetLot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnDetQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngPallets", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpirationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpirationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblReturnDet] SET [ReceiveMainID] = @ReceiveMainID, [ReturnDetItemID] = @"+
					"ReturnDetItemID, [ReturnDetLot] = @ReturnDetLot, [ReturnDetQty] = @ReturnDetQty,"+
					" [intUnits] = @intUnits, [sngPallets] = @sngPallets, [Reason] = @Reason, [Expira"+
					"tionDate] = @ExpirationDate WHERE (([ReturnDetID] = @Original_ReturnDetID) AND ("+
					"[ts] = @Original_ts));" + "\r" + "\n" + "SELECT ReturnDetID, ReceiveMainID, ReturnDetItemID, Retu"+
					"rnDetLot, ReturnDetQty, intUnits, sngPallets, Reason, ts, ExpirationDate FROM tb"+
					"lReturnDet WHERE (ReturnDetID = @ReturnDetID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiveMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiveMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnDetItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnDetLot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetLot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnDetQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngPallets", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpirationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpirationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnDetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnDetID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        ReturnDetID, ReceiveMainID, ReturnDetItemID, ReturnDetLot, ReturnDe"+
					"tQty, intUnits, sngPallets, Reason, ts, ExpirationDate" + "\r" + "\n" + "FROM            tblRetur"+
					"nDet";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT ExpirationDate, Reason, ReceiveMainID, ReturnDetID, ReturnDetItemID, Retur"+
					"nDetLot, ReturnDetQty, intUnits, sngPallets, ts FROM tblReturnDet WHERE (ReturnD"+
					"etID = @ReturnDetID)";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnDetID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT ExpirationDate, Reason, ReceiveMainID, ReturnDetID, ReturnDetItemID, Retur"+
					"nDetLot, ReturnDetQty, intUnits, sngPallets, ts FROM tblReturnDet WHERE (ReturnD"+
					"etItemID = @ItemID)";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "SELECT ExpirationDate, Reason, ReceiveMainID, ReturnDetID, ReturnDetItemID, Retur"+
					"nDetLot, ReturnDetQty, intUnits, sngPallets, ts FROM tblReturnDet WHERE (Receive"+
					"MainID = @ReceivingID)";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivingID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiveMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.ReturnDetDataTable GetReturnDetails()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.ReturnDetDataTable dataTable = new SPG.ReturnDetDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ReturnDetDataTable GetReturnDetByID(int ReturnDetID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)ReturnDetID;
				SPG.ReturnDetDataTable dataTable = new SPG.ReturnDetDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ReturnDetDataTable GetReturnDetByItemID(int? ItemID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				if (ItemID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)ItemID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.ReturnDetDataTable dataTable = new SPG.ReturnDetDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ReturnDetDataTable GetReturnDetByReceivingID(int? ReceivingID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				if (ReceivingID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)ReceivingID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.ReturnDetDataTable dataTable = new SPG.ReturnDetDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.ReturnDetDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "ReturnDet");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_ReturnDetID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_ReturnDetID;
				if (Original_ts == null)
				{
					throw new global::System.ArgumentNullException("Original_ts");
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(int? ReceiveMainID, int? ReturnDetItemID, string ReturnDetLot, int? ReturnDetQty, int? intUnits, float? sngPallets, string Reason, DateTime? ExpirationDate)
			{
				if (ReceiveMainID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[0].Value = (int)ReceiveMainID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (ReturnDetItemID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = (int)ReturnDetItemID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (ReturnDetLot == null)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = Convert.ToString(ReturnDetLot);
				}
				if (ReturnDetQty.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = (int)ReturnDetQty.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (intUnits.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = (int)intUnits.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (sngPallets.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = (float)sngPallets.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (Reason == null)
				{
					this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[6].Value = Convert.ToString(Reason);
				}
				if (ExpirationDate.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[7].Value = Convert.ToDateTime(ExpirationDate.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int? ReceiveMainID, int? ReturnDetItemID, string ReturnDetLot, int? ReturnDetQty, int? intUnits, float? sngPallets, string Reason, DateTime? ExpirationDate, int Original_ReturnDetID, byte[] Original_ts, int ReturnDetID)
			{
				if (ReceiveMainID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = (int)ReceiveMainID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (ReturnDetItemID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = (int)ReturnDetItemID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (ReturnDetLot == null)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = Convert.ToString(ReturnDetLot);
				}
				if (ReturnDetQty.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = (int)ReturnDetQty.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (intUnits.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = (int)intUnits.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (sngPallets.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = (float)sngPallets.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (Reason == null)
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = Convert.ToString(Reason);
				}
				if (ExpirationDate.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = Convert.ToDateTime(ExpirationDate.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[8].Value = (int)Original_ReturnDetID;
				if (Original_ts == null)
				{
					throw new global::System.ArgumentNullException("Original_ts");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = (byte[])Original_ts;
				}
				this.Adapter.UpdateCommand.Parameters[10].Value = (int)ReturnDetID;
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int? ReceiveMainID, int? ReturnDetItemID, string ReturnDetLot, int? ReturnDetQty, int? intUnits, float? sngPallets, string Reason, DateTime? ExpirationDate, int Original_ReturnDetID, byte[] Original_ts)
			{
				return this.Update(ReceiveMainID, ReturnDetItemID, ReturnDetLot, ReturnDetQty, intUnits, sngPallets, Reason, ExpirationDate, Original_ReturnDetID, Original_ts, Original_ReturnDetID);
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class ShippingReturnDetailsTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public ShippingReturnDetailsTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "ShippingReturnDetails";
				tableMapping.ColumnMappings.Add("ReturnDetID", "ReturnDetID");
				tableMapping.ColumnMappings.Add("ShipMainID", "ShipMainID");
				tableMapping.ColumnMappings.Add("ReturnDetItemID", "ReturnDetItemID");
				tableMapping.ColumnMappings.Add("ReturnDetLot", "ReturnDetLot");
				tableMapping.ColumnMappings.Add("ReturnDetQty", "ReturnDetQty");
				tableMapping.ColumnMappings.Add("intUnits", "intUnits");
				tableMapping.ColumnMappings.Add("sngPallets", "sngPallets");
				tableMapping.ColumnMappings.Add("Reason", "Reason");
				tableMapping.ColumnMappings.Add("ts", "ts");
				tableMapping.ColumnMappings.Add("ExpirationDate", "ExpirationDate");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblShipReturnDet] WHERE (([ReturnDetID] = @Original_ReturnDetID) AND"+
					" ([ts] = @Original_ts))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnDetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblShipReturnDet] ([ShipMainID], [ReturnDetItemID], [ReturnDetLot], "+
					"[ReturnDetQty], [intUnits], [sngPallets], [Reason], [ExpirationDate]) VALUES (@S"+
					"hipMainID, @ReturnDetItemID, @ReturnDetLot, @ReturnDetQty, @intUnits, @sngPallet"+
					"s, @Reason, @ExpirationDate);" + "\r" + "\n" + "SELECT ReturnDetID, ShipMainID, ReturnDetItemID, "+
					"ReturnDetLot, ReturnDetQty, intUnits, sngPallets, Reason, ts, ExpirationDate FRO"+
					"M tblShipReturnDet WHERE (ReturnDetID = SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnDetItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnDetLot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetLot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnDetQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngPallets", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpirationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpirationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblShipReturnDet] SET [ShipMainID] = @ShipMainID, [ReturnDetItemID] = @Re"+
					"turnDetItemID, [ReturnDetLot] = @ReturnDetLot, [ReturnDetQty] = @ReturnDetQty, ["+
					"intUnits] = @intUnits, [sngPallets] = @sngPallets, [Reason] = @Reason, [Expirati"+
					"onDate] = @ExpirationDate WHERE (([ReturnDetID] = @Original_ReturnDetID) AND ([t"+
					"s] = @Original_ts));" + "\r" + "\n" + "SELECT ReturnDetID, ShipMainID, ReturnDetItemID, ReturnDet"+
					"Lot, ReturnDetQty, intUnits, sngPallets, Reason, ts, ExpirationDate FROM tblShip"+
					"ReturnDet WHERE (ReturnDetID = @ReturnDetID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipMainID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnDetItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnDetLot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetLot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnDetQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sngPallets", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sngPallets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpirationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpirationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnDetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnDetID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        ReturnDetID, ShipMainID, ReturnDetItemID, ReturnDetLot, ReturnDetQt"+
					"y, intUnits, sngPallets, Reason, ts, ExpirationDate" + "\r" + "\n" + "FROM            tblShipRetu"+
					"rnDet";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT ExpirationDate, Reason, ReturnDetID, ReturnDetItemID, ReturnDetLot, Return"+
					"DetQty, ShipMainID, intUnits, sngPallets, ts FROM tblShipReturnDet WHERE (Return"+
					"DetID = @ShippingReturnDetailID)";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingReturnDetailID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT ExpirationDate, Reason, ReturnDetID, ReturnDetItemID, ReturnDetLot, Return"+
					"DetQty, ShipMainID, intUnits, sngPallets, ts FROM tblShipReturnDet WHERE (Return"+
					"DetItemID = @ShippingReturnItemID)";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingReturnItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnDetItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "SELECT ExpirationDate, Reason, ReturnDetID, ReturnDetItemID, ReturnDetLot, Return"+
					"DetQty, ShipMainID, intUnits, sngPallets, ts FROM tblShipReturnDet WHERE (ShipMa"+
					"inID = @ShippingMainID)";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingMainID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ShipMainID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.ShippingReturnDetailsDataTable GetShippingReturnDetails()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.ShippingReturnDetailsDataTable dataTable = new SPG.ShippingReturnDetailsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ShippingReturnDetailsDataTable GetShippingReturnDetailByID(int ShippingReturnDetailID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)ShippingReturnDetailID;
				SPG.ShippingReturnDetailsDataTable dataTable = new SPG.ShippingReturnDetailsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ShippingReturnDetailsDataTable GetShippingReturnDetailsByItemID(int? ShippingReturnItemID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				if (ShippingReturnItemID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)ShippingReturnItemID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.ShippingReturnDetailsDataTable dataTable = new SPG.ShippingReturnDetailsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.ShippingReturnDetailsDataTable GetShippingReturnDetailsByShippingID(int? ShippingMainID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				if (ShippingMainID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)ShippingMainID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.ShippingReturnDetailsDataTable dataTable = new SPG.ShippingReturnDetailsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.ShippingReturnDetailsDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "ShippingReturnDetails");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_ReturnDetID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_ReturnDetID;
				if (Original_ts == null)
				{
					throw new global::System.ArgumentNullException("Original_ts");
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(int? ShipMainID, int? ReturnDetItemID, string ReturnDetLot, int? ReturnDetQty, int? intUnits, float? sngPallets, string Reason, DateTime? ExpirationDate)
			{
				if (ShipMainID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[0].Value = (int)ShipMainID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (ReturnDetItemID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = (int)ReturnDetItemID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (ReturnDetLot == null)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = Convert.ToString(ReturnDetLot);
				}
				if (ReturnDetQty.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = (int)ReturnDetQty.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (intUnits.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = (int)intUnits.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (sngPallets.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = (float)sngPallets.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (Reason == null)
				{
					this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[6].Value = Convert.ToString(Reason);
				}
				if (ExpirationDate.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[7].Value = Convert.ToDateTime(ExpirationDate.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int? ShipMainID, int? ReturnDetItemID, string ReturnDetLot, int? ReturnDetQty, int? intUnits, float? sngPallets, string Reason, DateTime? ExpirationDate, int Original_ReturnDetID, byte[] Original_ts, int ReturnDetID)
			{
				if (ShipMainID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = (int)ShipMainID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (ReturnDetItemID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = (int)ReturnDetItemID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (ReturnDetLot == null)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = Convert.ToString(ReturnDetLot);
				}
				if (ReturnDetQty.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = (int)ReturnDetQty.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (intUnits.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = (int)intUnits.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (sngPallets.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = (float)sngPallets.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (Reason == null)
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = Convert.ToString(Reason);
				}
				if (ExpirationDate.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = Convert.ToDateTime(ExpirationDate.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[8].Value = (int)Original_ReturnDetID;
				if (Original_ts == null)
				{
					throw new global::System.ArgumentNullException("Original_ts");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = (byte[])Original_ts;
				}
				this.Adapter.UpdateCommand.Parameters[10].Value = (int)ReturnDetID;
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int? ShipMainID, int? ReturnDetItemID, string ReturnDetLot, int? ReturnDetQty, int? intUnits, float? sngPallets, string Reason, DateTime? ExpirationDate, int Original_ReturnDetID, byte[] Original_ts)
			{
				return this.Update(ShipMainID, ReturnDetItemID, ReturnDetLot, ReturnDetQty, intUnits, sngPallets, Reason, ExpirationDate, Original_ReturnDetID, Original_ts, Original_ReturnDetID);
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class InventoryAdjustmentTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryAdjustmentTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "InventoryAdjustment";
				tableMapping.ColumnMappings.Add("AdjustmentID", "AdjustmentID");
				tableMapping.ColumnMappings.Add("AdjustmentDate", "AdjustmentDate");
				tableMapping.ColumnMappings.Add("Customer", "Customer");
				tableMapping.ColumnMappings.Add("Item", "ItemID");
				tableMapping.ColumnMappings.Add("OriginalQuantity", "OriginalQuantity");
				tableMapping.ColumnMappings.Add("NewCount", "NewCount");
				tableMapping.ColumnMappings.Add("Reason", "Reason");
				tableMapping.ColumnMappings.Add("rv", "rv");
				tableMapping.ColumnMappings.Add("strEnteredBy", "strEnteredBy");
				tableMapping.ColumnMappings.Add("dtmEnteredOn", "dtmEnteredOn");
				tableMapping.ColumnMappings.Add("OriginalLot", "OriginalLot");
				tableMapping.ColumnMappings.Add("NewLot", "NewLot");
				tableMapping.ColumnMappings.Add("LPN", "LPN");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblInventoryAdjustment] WHERE (([AdjustmentID] = @Original_Adjustmen"+
					"tID) AND ([rv] = @Original_rv))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AdjustmentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdjustmentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rv", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rv", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblInventoryAdjustment] ([AdjustmentDate], [Customer], [Item], [Orig"+
					"inalQuantity], [NewCount], [Reason], [strEnteredBy], [dtmEnteredOn], [OriginalLo"+
					"t], [NewLot], [LPN]) VALUES (@AdjustmentDate, @Customer, @Item, @OriginalQuantit"+
					"y, @NewCount, @Reason, @strEnteredBy, @dtmEnteredOn, @OriginalLot, @NewLot, @LPN"+
					");" + "\r" + "\n" + "SELECT AdjustmentID, AdjustmentDate, Customer, Item, OriginalQuantity, NewCo"+
					"unt, Reason, rv, strEnteredBy, dtmEnteredOn, OriginalLot, NewLot, LPN FROM tblIn"+
					"ventoryAdjustment WHERE (AdjustmentID = SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdjustmentDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdjustmentDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Customer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Customer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalQuantity", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewCount", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalLot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalLot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewLot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewLot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LPN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LPN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblInventoryAdjustment] SET [AdjustmentDate] = @AdjustmentDate, [Customer"+
					"] = @Customer, [Item] = @Item, [OriginalQuantity] = @OriginalQuantity, [NewCount"+
					"] = @NewCount, [Reason] = @Reason, [strEnteredBy] = @strEnteredBy, [dtmEnteredOn"+
					"] = @dtmEnteredOn, [OriginalLot] = @OriginalLot, [NewLot] = @NewLot, [LPN] = @LP"+
					"N WHERE (([AdjustmentID] = @Original_AdjustmentID) AND ([rv] = @Original_rv));" + "\r" + "\n"+
					"SELECT AdjustmentID, AdjustmentDate, Customer, Item, OriginalQuantity, NewCount,"+
					" Reason, rv, strEnteredBy, dtmEnteredOn, OriginalLot, NewLot, LPN FROM tblInvent"+
					"oryAdjustment WHERE (AdjustmentID = @AdjustmentID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdjustmentDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdjustmentDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Customer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Customer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalQuantity", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewCount", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEnteredBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strEnteredBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtmEnteredOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtmEnteredOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalLot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalLot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewLot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewLot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LPN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LPN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AdjustmentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdjustmentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rv", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rv", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdjustmentID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AdjustmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        AdjustmentID, AdjustmentDate, Customer, Item, OriginalQuantity, New"+
					"Count, Reason, rv, strEnteredBy, dtmEnteredOn, OriginalLot, NewLot, LPN" + "\r" + "\n" + "FROM   "+
					"         tblInventoryAdjustment";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "SELECT AdjustmentDate, AdjustmentID, Customer, Item, LPN, NewCount, NewLot, Origi"+
					"nalLot, OriginalQuantity, Reason, dtmEnteredOn, rv, strEnteredBy FROM tblInvento"+
					"ryAdjustment WHERE (AdjustmentDate >= ISNULL(@FromDate, AdjustmentDate)) AND (Ad"+
					"justmentDate <= ISNULL(@ToDate, AdjustmentDate)) AND (Customer = ISNULL(@Custome"+
					"r, Customer)) AND (Item = ISNULL(@Item, Item))";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AdjustmentDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AdjustmentDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Customer", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Customer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "SELECT AdjustmentDate, AdjustmentID, Customer, Item, LPN, NewCount, NewLot, Origi"+
					"nalLot, OriginalQuantity, Reason, dtmEnteredOn, rv, strEnteredBy FROM tblInvento"+
					"ryAdjustment WHERE (AdjustmentID = @AdjustmentID)";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdjustmentID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AdjustmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
			public virtual int FillInventoryAdjustment(SPG.InventoryAdjustmentDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.InventoryAdjustmentDataTable GetInventoryAdjustment()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.InventoryAdjustmentDataTable dataTable = new SPG.InventoryAdjustmentDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillAdjustmentView(SPG.InventoryAdjustmentDataTable dataTable, DateTime? FromDate, DateTime? ToDate, int? Customer, int? Item)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				if (FromDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToDateTime(FromDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (ToDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[1].Value = Convert.ToDateTime(ToDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (Customer.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[2].Value = (int)Customer.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (Item.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[3].Value = (int)Item.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.InventoryAdjustmentDataTable GetAdjustmentView(DateTime? FromDate, DateTime? ToDate, int? Customer, int? Item)
			{
				this.Adapter.SelectCommand = this.CommandCollection[1];
				if (FromDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = Convert.ToDateTime(FromDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (ToDate.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[1].Value = Convert.ToDateTime(ToDate.Value);
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (Customer.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[2].Value = (int)Customer.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (Item.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[3].Value = (int)Item.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				SPG.InventoryAdjustmentDataTable dataTable = new SPG.InventoryAdjustmentDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillByAdjustmentID(SPG.InventoryAdjustmentDataTable dataTable, int AdjustmentID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)AdjustmentID;
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.InventoryAdjustmentDataTable GetInventoryAdjustmentByID(int AdjustmentID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[2];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)AdjustmentID;
				SPG.InventoryAdjustmentDataTable dataTable = new SPG.InventoryAdjustmentDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.InventoryAdjustmentDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "InventoryAdjustment");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_AdjustmentID, byte[] Original_rv)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_AdjustmentID;
				if (Original_rv == null)
				{
					throw new global::System.ArgumentNullException("Original_rv");
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (byte[])Original_rv;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(DateTime? AdjustmentDate, int? Customer, int? Item, float? OriginalQuantity, float? NewCount, string Reason, string strEnteredBy, DateTime? dtmEnteredOn, string OriginalLot, string NewLot, int? LPN)
			{
				if (AdjustmentDate.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[0].Value = Convert.ToDateTime(AdjustmentDate.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (Customer.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = (int)Customer.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (Item.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = (int)Item.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (OriginalQuantity.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = (float)OriginalQuantity.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (NewCount.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = (float)NewCount.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (Reason == null)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = Convert.ToString(Reason);
				}
				if (strEnteredBy == null)
				{
					this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[6].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[7].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				if (OriginalLot == null)
				{
					this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[8].Value = Convert.ToString(OriginalLot);
				}
				if (NewLot == null)
				{
					this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[9].Value = Convert.ToString(NewLot);
				}
				if (LPN.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[10].Value = (int)LPN.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(DateTime? AdjustmentDate, int? Customer, int? Item, float? OriginalQuantity, float? NewCount, string Reason, string strEnteredBy, DateTime? dtmEnteredOn, string OriginalLot, string NewLot, int? LPN, int Original_AdjustmentID, byte[] Original_rv, int AdjustmentID)
			{
				if (AdjustmentDate.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = Convert.ToDateTime(AdjustmentDate.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (Customer.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = (int)Customer.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (Item.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (int)Item.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (OriginalQuantity.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = (float)OriginalQuantity.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (NewCount.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = (float)NewCount.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				if (Reason == null)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = Convert.ToString(Reason);
				}
				if (strEnteredBy == null)
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = Convert.ToString(strEnteredBy);
				}
				if (dtmEnteredOn.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = Convert.ToDateTime(dtmEnteredOn.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				if (OriginalLot == null)
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = Convert.ToString(OriginalLot);
				}
				if (NewLot == null)
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = Convert.ToString(NewLot);
				}
				if (LPN.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = (int)LPN.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[11].Value = (int)Original_AdjustmentID;
				if (Original_rv == null)
				{
					throw new global::System.ArgumentNullException("Original_rv");
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = (byte[])Original_rv;
				}
				this.Adapter.UpdateCommand.Parameters[13].Value = (int)AdjustmentID;
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(DateTime? AdjustmentDate, int? Customer, int? Item, float? OriginalQuantity, float? NewCount, string Reason, string strEnteredBy, DateTime? dtmEnteredOn, string OriginalLot, string NewLot, int? LPN, int Original_AdjustmentID, byte[] Original_rv)
			{
				return this.Update(AdjustmentDate, Customer, Item, OriginalQuantity, NewCount, Reason, strEnteredBy, dtmEnteredOn, OriginalLot, NewLot, LPN, Original_AdjustmentID, Original_rv, Original_AdjustmentID);
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class AuditTrailTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public AuditTrailTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "AuditTrail";
				tableMapping.ColumnMappings.Add("PK_ID", "PK_ID");
				tableMapping.ColumnMappings.Add("RecordID", "RecordID");
				tableMapping.ColumnMappings.Add("RecordType", "RecordType");
				tableMapping.ColumnMappings.Add("RecordChanges", "RecordChanges");
				tableMapping.ColumnMappings.Add("ChangeDate", "ChangeDate");
				tableMapping.ColumnMappings.Add("UserID", "UserID");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblAuditTrail] WHERE (([PK_ID] = @Original_PK_ID) AND ((@IsNull_Reco"+
					"rdID = 1 AND [RecordID] IS NULL) OR ([RecordID] = @Original_RecordID)) AND ((@Is"+
					"Null_RecordType = 1 AND [RecordType] IS NULL) OR ([RecordType] = @Original_Recor"+
					"dType)) AND ((@IsNull_ChangeDate = 1 AND [ChangeDate] IS NULL) OR ([ChangeDate] "+
					"= @Original_ChangeDate)) AND ((@IsNull_UserID = 1 AND [UserID] IS NULL) OR ([Use"+
					"rID] = @Original_UserID)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecordID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecordType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ChangeDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChangeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblAuditTrail] ([RecordID], [RecordType], [RecordChanges], [ChangeDa"+
					"te], [UserID]) VALUES (@RecordID, @RecordType, @RecordChanges, @ChangeDate, @Use"+
					"rID);" + "\r" + "\n" + "SELECT PK_ID, RecordID, RecordType, RecordChanges, ChangeDate, UserID FRO"+
					"M tblAuditTrail WHERE (PK_ID = SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordChanges", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordChanges", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblAuditTrail] SET [RecordID] = @RecordID, [RecordType] = @RecordType, [R"+
					"ecordChanges] = @RecordChanges, [ChangeDate] = @ChangeDate, [UserID] = @UserID W"+
					"HERE (([PK_ID] = @Original_PK_ID) AND ((@IsNull_RecordID = 1 AND [RecordID] IS N"+
					"ULL) OR ([RecordID] = @Original_RecordID)) AND ((@IsNull_RecordType = 1 AND [Rec"+
					"ordType] IS NULL) OR ([RecordType] = @Original_RecordType)) AND ((@IsNull_Change"+
					"Date = 1 AND [ChangeDate] IS NULL) OR ([ChangeDate] = @Original_ChangeDate)) AND"+
					" ((@IsNull_UserID = 1 AND [UserID] IS NULL) OR ([UserID] = @Original_UserID)));" + "\r" + "\n" + "SELECT PK_ID, RecordID, RecordType, RecordChanges, ChangeDate, UserID FROM tblA"+
					"uditTrail WHERE (PK_ID = @PK_ID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordChanges", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordChanges", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecordID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecordType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ChangeDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChangeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PK_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        PK_ID, RecordID, RecordType, RecordChanges, ChangeDate, UserID" + "\r" + "\n" + "FRO"+
					"M            tblAuditTrail";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
			public virtual int FillAuditTrail(SPG.AuditTrailDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.AuditTrailDataTable GetAuditTrail()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.AuditTrailDataTable dataTable = new SPG.AuditTrailDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.AuditTrailDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "AuditTrail");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_PK_ID, int? Original_RecordID, string Original_RecordType, DateTime? Original_ChangeDate, string Original_UserID)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_PK_ID;
				if (Original_RecordID.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (int)Original_RecordID.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (Original_RecordType == null)
				{
					this.Adapter.DeleteCommand.Parameters[3].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[3].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[4].Value = Convert.ToString(Original_RecordType);
				}
				if (Original_ChangeDate.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[5].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[6].Value = Convert.ToDateTime(Original_ChangeDate.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[5].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				if (Original_UserID == null)
				{
					this.Adapter.DeleteCommand.Parameters[7].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[7].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[8].Value = Convert.ToString(Original_UserID);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(int? RecordID, string RecordType, string RecordChanges, DateTime? ChangeDate, string UserID)
			{
				if (RecordID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[0].Value = (int)RecordID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (RecordType == null)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = Convert.ToString(RecordType);
				}
				if (RecordChanges == null)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = Convert.ToString(RecordChanges);
				}
				if (ChangeDate.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = Convert.ToDateTime(ChangeDate.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (UserID == null)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = Convert.ToString(UserID);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int? RecordID, string RecordType, string RecordChanges, DateTime? ChangeDate, string UserID, int Original_PK_ID, int? Original_RecordID, string Original_RecordType, DateTime? Original_ChangeDate, string Original_UserID, int PK_ID)
			{
				if (RecordID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = (int)RecordID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (RecordType == null)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = Convert.ToString(RecordType);
				}
				if (RecordChanges == null)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = Convert.ToString(RecordChanges);
				}
				if (ChangeDate.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = Convert.ToDateTime(ChangeDate.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (UserID == null)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = Convert.ToString(UserID);
				}
				this.Adapter.UpdateCommand.Parameters[5].Value = (int)Original_PK_ID;
				if (Original_RecordID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[7].Value = (int)Original_RecordID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[6].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				if (Original_RecordType == null)
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[9].Value = Convert.ToString(Original_RecordType);
				}
				if (Original_ChangeDate.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[11].Value = Convert.ToDateTime(Original_ChangeDate.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				if (Original_UserID == null)
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[13].Value = Convert.ToString(Original_UserID);
				}
				this.Adapter.UpdateCommand.Parameters[14].Value = (int)PK_ID;
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int? RecordID, string RecordType, string RecordChanges, DateTime? ChangeDate, string UserID, int Original_PK_ID, int? Original_RecordID, string Original_RecordType, DateTime? Original_ChangeDate, string Original_UserID)
			{
				return this.Update(RecordID, RecordType, RecordChanges, ChangeDate, UserID, Original_PK_ID, Original_RecordID, Original_RecordType, Original_ChangeDate, Original_UserID, Original_PK_ID);
			}
		}

		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), global::System.ComponentModel.ToolboxItem(true), global::System.ComponentModel.DataObjectAttribute(true), global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public partial class InventoryBOMsTableAdapter : System.ComponentModel.Component
		{
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;

			private global::System.Data.SqlClient.SqlConnection _connection;

			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

			private bool _clearBeforeFill;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public InventoryBOMsTableAdapter() : base()
			{
				this.ClearBeforeFill = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if ((this.Adapter.InsertCommand) != null)
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if ((this.Adapter.DeleteCommand) != null)
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if ((this.Adapter.UpdateCommand) != null)
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if ((this.CommandCollection[i]) != null)
						{
							((global::System.Data.SqlClient.SqlCommand)this.CommandCollection[i]).Connection = value;
						}
						i = (i + 1);
					}
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "InventoryBOMs";
				tableMapping.ColumnMappings.Add("InventoryBOMID", "InventoryBOMID");
				tableMapping.ColumnMappings.Add("InventoryBOMRawMatID", "InventoryBOMRawMatID");
				tableMapping.ColumnMappings.Add("InventoryBOMInventoryID", "InventoryBOMInventoryID");
				tableMapping.ColumnMappings.Add("InventoryBOMQuantity", "InventoryBOMQuantity");
				tableMapping.ColumnMappings.Add("ts", "ts");
				tableMapping.ColumnMappings.Add("ScrapFactor", "ScrapFactor");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblInventoryBOMs] WHERE (([InventoryBOMID] = @Original_InventoryBOMI"+
					"D) AND ((@IsNull_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original_ts)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InventoryBOMID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryBOMID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [tblInventoryBOMs] ([InventoryBOMRawMatID], [InventoryBOMInventoryID]"+
					", [InventoryBOMQuantity], [ScrapFactor]) VALUES (@InventoryBOMRawMatID, @Invento"+
					"ryBOMInventoryID, @InventoryBOMQuantity, @ScrapFactor);" + "\r" + "\n" + "SELECT InventoryBOMID, "+
					"InventoryBOMRawMatID, InventoryBOMInventoryID, InventoryBOMQuantity, ts, ScrapFa"+
					"ctor FROM tblInventoryBOMs WHERE (InventoryBOMID = SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryBOMRawMatID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryBOMRawMatID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryBOMInventoryID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryBOMInventoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryBOMQuantity", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryBOMQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScrapFactor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScrapFactor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [tblInventoryBOMs] SET [InventoryBOMRawMatID] = @InventoryBOMRawMatID, [In"+
					"ventoryBOMInventoryID] = @InventoryBOMInventoryID, [InventoryBOMQuantity] = @Inv"+
					"entoryBOMQuantity, [ScrapFactor] = @ScrapFactor WHERE (([InventoryBOMID] = @Orig"+
					"inal_InventoryBOMID) AND ((@IsNull_ts = 1 AND [ts] IS NULL) OR ([ts] = @Original"+
					"_ts)));" + "\r" + "\n" + "SELECT InventoryBOMID, InventoryBOMRawMatID, InventoryBOMInventoryID, I"+
					"nventoryBOMQuantity, ts, ScrapFactor FROM tblInventoryBOMs WHERE (InventoryBOMID"+
					" = @InventoryBOMID)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryBOMRawMatID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryBOMRawMatID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryBOMInventoryID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryBOMInventoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryBOMQuantity", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryBOMQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScrapFactor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScrapFactor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InventoryBOMID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryBOMID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ts", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryBOMID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryBOMID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = SuperiorPackGroup.Properties.Settings.Default.SPGDataDefaultConnectionString;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
			private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT        InventoryBOMID, InventoryBOMRawMatID, InventoryBOMInventoryID, Inve"+
					"ntoryBOMQuantity, ts, ScrapFactor" + "\r" + "\n" + "FROM            tblInventoryBOMs";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[1].Connection = this.Connection;
				this._commandCollection[1].CommandText = "INSERT INTO tblInventoryBOMs" + "\r" + "\n" + "                         (InventoryBOMRawMatID, Inv"+
					"entoryBOMInventoryID, InventoryBOMQuantity, ScrapFactor)" + "\r" + "\n" + "SELECT        BOMRawMa"+
					"tID, @InventoryID AS Expr1, BOMQuantity, ScrapFactor / 100" + "\r" + "\n" + "FROM            tblB"+
					"OMs" + "\r" + "\n" + "WHERE        (BOMFiniGoodID = @FGItemID)";
				this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("FGItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("InventoryID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[2].Connection = this.Connection;
				this._commandCollection[2].CommandText = "DELETE FROM tblInventoryBOMs" + "\r" + "\n" + "WHERE        (InventoryBOMInventoryID = @InvnetoryI"+
					"D)";
				this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvnetoryID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryBOMInventoryID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[3].Connection = this.Connection;
				this._commandCollection[3].CommandText = "SELECT        InventoryBOMID, InventoryBOMRawMatID, InventoryBOMInventoryID, Inve"+
					"ntoryBOMQuantity, ts, ScrapFactor" + "\r" + "\n" + "FROM            tblInventoryBOMs" + "\r" + "\n" + "WHERE Inven"+
					"toryBOMID = @InventoryBOMID";
				this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryBOMID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryBOMID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[4].Connection = this.Connection;
				this._commandCollection[4].CommandText = "SELECT        InventoryBOMID, InventoryBOMRawMatID, InventoryBOMInventoryID, Inve"+
					"ntoryBOMQuantity, ts, ScrapFactor" + "\r" + "\n" + "FROM            tblInventoryBOMs" + "\r" + "\n" + "WHERE Inven"+
					"toryBOMInventoryID = @InventoryID";
				this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
				this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InventoryID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryBOMInventoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
			public virtual int FillInventoryBOM(SPG.InventoryBOMsDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
			public virtual SPG.InventoryBOMsDataTable GetInventoryBOM()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				SPG.InventoryBOMsDataTable dataTable = new SPG.InventoryBOMsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillInventoryBOMByID(SPG.InventoryBOMsDataTable dataTable, int InventoryBOMID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)InventoryBOMID;
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.InventoryBOMsDataTable GetInventoryBOMByID(int InventoryBOMID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[3];
				this.Adapter.SelectCommand.Parameters[0].Value = (int)InventoryBOMID;
				SPG.InventoryBOMsDataTable dataTable = new SPG.InventoryBOMsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
			public virtual int FillInventoryBOMByInventoryID(SPG.InventoryBOMsDataTable dataTable, int? InventoryID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[4];
				if (InventoryID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)InventoryID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
			public virtual SPG.InventoryBOMsDataTable GetInventoryBOMByInventoryID(int? InventoryID)
			{
				this.Adapter.SelectCommand = this.CommandCollection[4];
				if (InventoryID.HasValue == true)
				{
					this.Adapter.SelectCommand.Parameters[0].Value = (int)InventoryID.Value;
				}
				else
				{
					this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				SPG.InventoryBOMsDataTable dataTable = new SPG.InventoryBOMsDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG.InventoryBOMsDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(SPG dataSet)
			{
				return this.Adapter.Update(dataSet, "InventoryBOMs");
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
			public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
			public virtual int Delete(int Original_InventoryBOMID, byte[] Original_ts)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = (int)Original_InventoryBOMID;
				if (Original_ts == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)1;
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object)0;
					this.Adapter.DeleteCommand.Parameters[2].Value = (byte[])Original_ts;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
			public virtual int Insert(int? InventoryBOMRawMatID, int? InventoryBOMInventoryID, float? InventoryBOMQuantity, double? ScrapFactor)
			{
				if (InventoryBOMRawMatID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[0].Value = (int)InventoryBOMRawMatID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (InventoryBOMInventoryID.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = (int)InventoryBOMInventoryID.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (InventoryBOMQuantity.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = (float)InventoryBOMQuantity.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (ScrapFactor.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = (double)ScrapFactor.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int? InventoryBOMRawMatID, int? InventoryBOMInventoryID, float? InventoryBOMQuantity, double? ScrapFactor, int Original_InventoryBOMID, byte[] Original_ts, int InventoryBOMID)
			{
				if (InventoryBOMRawMatID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = (int)InventoryBOMRawMatID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				if (InventoryBOMInventoryID.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = (int)InventoryBOMInventoryID.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				if (InventoryBOMQuantity.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (float)InventoryBOMQuantity.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (ScrapFactor.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = (double)ScrapFactor.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[4].Value = (int)Original_InventoryBOMID;
				if (Original_ts == null)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = (object)1;
					this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = (object)0;
					this.Adapter.UpdateCommand.Parameters[6].Value = (byte[])Original_ts;
				}
				this.Adapter.UpdateCommand.Parameters[7].Value = (int)InventoryBOMID;
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
//INSTANT C# NOTE: Inserted the following 'return' since all code paths must return a value in C#:
				return 0;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
			public virtual int Update(int? InventoryBOMRawMatID, int? InventoryBOMInventoryID, float? InventoryBOMQuantity, double? ScrapFactor, int Original_InventoryBOMID, byte[] Original_ts)
			{
				return this.Update(InventoryBOMRawMatID, InventoryBOMInventoryID, InventoryBOMQuantity, ScrapFactor, Original_InventoryBOMID, Original_ts, Original_InventoryBOMID);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
			public virtual int AddInventoryBOMByItemID(int FGItemID, int InventoryID)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
				command.Parameters[0].Value = (int)FGItemID;
				command.Parameters[1].Value = (int)InventoryID;
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				int returnValue = 0;
				try
				{
					returnValue = command.ExecuteNonQuery();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				return returnValue;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
			public virtual int DeleteInventoryBOMByInventoryID(int? InvnetoryID)
			{
				global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
				if (InvnetoryID.HasValue == true)
				{
					command.Parameters[0].Value = (int)InvnetoryID.Value;
				}
				else
				{
					command.Parameters[0].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
				if ((command.Connection.State & global::System.Data.ConnectionState.Open) != global::System.Data.ConnectionState.Open)
				{
					command.Connection.Open();
				}
				int returnValue = 0;
				try
				{
					returnValue = command.ExecuteNonQuery();
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						command.Connection.Close();
					}
				}
				return returnValue;
			}
		}
	}

}